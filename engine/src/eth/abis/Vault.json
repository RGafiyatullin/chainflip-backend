{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IKeyManager",
          "name": "keyManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "communityGuardDisabled",
          "type": "bool"
        }
      ],
      "name": "CommunityGuardDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "suspended",
          "type": "bool"
        }
      ],
      "name": "Suspended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "egressParams",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "egressReceiver",
          "type": "bytes32"
        }
      ],
      "name": "SwapNative",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SwapNative",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ingressToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "egressParams",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "egressReceiver",
          "type": "bytes32"
        }
      ],
      "name": "SwapToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SwapToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SwapsEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "keyManager",
          "type": "address"
        }
      ],
      "name": "UpdatedKeyManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dstNativeGas",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "refundAddress",
          "type": "address"
        }
      ],
      "name": "XCallNative",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dstNativeGas",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "refundAddress",
          "type": "address"
        }
      ],
      "name": "XCallToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "XCallsEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "swapID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.DeployFetchParams[]",
          "name": "deployFetchParamsArray",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "fetchContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.FetchParams[]",
          "name": "fetchParamsArray",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IShared.TransferParams[]",
          "name": "transferParamsArray",
          "type": "tuple[]"
        }
      ],
      "name": "allBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "swapID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.DeployFetchParams[]",
          "name": "deployFetchParamsArray",
          "type": "tuple[]"
        }
      ],
      "name": "deployAndFetchBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableCommunityGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disablexCalls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableCommunityGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enablexCalls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "srcChain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "srcAddress",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "executexCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IShared.TransferParams",
          "name": "transferParams",
          "type": "tuple"
        },
        {
          "internalType": "uint32",
          "name": "srcChain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "srcAddress",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "executexSwapAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "fetchContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.FetchParams[]",
          "name": "fetchParamsArray",
          "type": "tuple[]"
        }
      ],
      "name": "fetchBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunityGuardDisabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunityKey",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getKeyManager",
      "outputs": [
        {
          "internalType": "contract IKeyManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSuspendedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getxCallsEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "govWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resume",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "suspend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IShared.TransferParams",
          "name": "transferParams",
          "type": "tuple"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IShared.TransferParams[]",
          "name": "transferParamsArray",
          "type": "tuple[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "keyManAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "chainID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "msgHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sig",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "kTimesGAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IShared.SigData",
          "name": "sigData",
          "type": "tuple"
        },
        {
          "internalType": "contract IKeyManager",
          "name": "keyManager",
          "type": "address"
        }
      ],
      "name": "updateKeyManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "dstNativeGas",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "refundAddress",
          "type": "address"
        }
      ],
      "name": "xCallNative",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "dstNativeGas",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "srcToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "refundAddress",
          "type": "address"
        }
      ],
      "name": "xCallToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        }
      ],
      "name": "xSwapNative",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "dstChain",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "dstAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "swapIntent",
          "type": "string"
        },
        {
          "internalType": "contract IERC20",
          "name": "srcToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "xSwapToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "13": "contracts/Vault.sol",
    "16": "contracts/abstract/Shared.sol",
    "2": "/home/albert/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
    "24": "contracts/interfaces/IAggKeyNonceConsumer.sol",
    "25": "contracts/interfaces/ICFReceiver.sol",
    "26": "contracts/interfaces/IERC20Lite.sol",
    "28": "contracts/interfaces/IGovernanceCommunityGuarded.sol",
    "29": "contracts/interfaces/IKeyManager.sol",
    "3": "/home/albert/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "30": "contracts/interfaces/IShared.sol",
    "32": "contracts/interfaces/IVault.sol",
    "4": "/home/albert/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol",
    "6": "contracts/AggKeyNonceConsumer.sol",
    "7": "contracts/Deposit.sol",
    "9": "contracts/GovernanceCommunityGuarded.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault.sol",
    "exportedSymbols": {
      "Address": [
        8512
      ],
      "AggKeyNonceConsumer": [
        114
      ],
      "Deposit": [
        236
      ],
      "GovernanceCommunityGuarded": [
        626
      ],
      "IAggKeyNonceConsumer": [
        5669
      ],
      "ICFReceiver": [
        5697
      ],
      "IERC20": [
        7969
      ],
      "IERC20Lite": [
        5719
      ],
      "IGovernanceCommunityGuarded": [
        5812
      ],
      "IKeyManager": [
        6003
      ],
      "IShared": [
        6043
      ],
      "IVault": [
        6352
      ],
      "SafeERC20": [
        8193
      ],
      "Shared": [
        3875
      ],
      "Vault": [
        3547
      ]
    },
    "id": 3548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2424,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/home/albert/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 8194,
        "src": "25:65:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IVault.sol",
        "file": "./interfaces/IVault.sol",
        "id": 2426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 6353,
        "src": "91:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IKeyManager.sol",
        "file": "./interfaces/IKeyManager.sol",
        "id": 2427,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 6004,
        "src": "125:38:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20Lite.sol",
        "file": "./interfaces/IERC20Lite.sol",
        "id": 2428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 5720,
        "src": "164:37:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ICFReceiver.sol",
        "file": "./interfaces/ICFReceiver.sol",
        "id": 2429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 5698,
        "src": "202:38:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/abstract/Shared.sol",
        "file": "./abstract/Shared.sol",
        "id": 2430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 3876,
        "src": "241:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Deposit.sol",
        "file": "./Deposit.sol",
        "id": 2431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 237,
        "src": "273:23:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AggKeyNonceConsumer.sol",
        "file": "./AggKeyNonceConsumer.sol",
        "id": 2432,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 115,
        "src": "297:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/GovernanceCommunityGuarded.sol",
        "file": "./GovernanceCommunityGuarded.sol",
        "id": 2433,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3548,
        "sourceUnit": 627,
        "src": "333:42:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2435,
              "name": "IVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6352,
              "src": "693:6:13"
            },
            "id": 2436,
            "nodeType": "InheritanceSpecifier",
            "src": "693:6:13"
          },
          {
            "baseName": {
              "id": 2437,
              "name": "AggKeyNonceConsumer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114,
              "src": "701:19:13"
            },
            "id": 2438,
            "nodeType": "InheritanceSpecifier",
            "src": "701:19:13"
          },
          {
            "baseName": {
              "id": 2439,
              "name": "GovernanceCommunityGuarded",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 626,
              "src": "722:26:13"
            },
            "id": 2440,
            "nodeType": "InheritanceSpecifier",
            "src": "722:26:13"
          }
        ],
        "contractDependencies": [
          236
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2434,
          "nodeType": "StructuredDocumentation",
          "src": "377:297:13",
          "text": " @title    Vault contract\n @notice   The vault for holding and transferring native/tokens and deploying contracts for fetching\n           individual deposits. It also allows users to do cross-chain swaps and(or) calls by\n           making a function call directly to this contract."
        },
        "fullyImplemented": true,
        "id": 3547,
        "linearizedBaseContracts": [
          3547,
          626,
          114,
          6352,
          5669,
          5812,
          3875,
          6043
        ],
        "name": "Vault",
        "nameLocation": "684:5:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2444,
            "libraryName": {
              "id": 2441,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8193,
              "src": "761:9:13"
            },
            "nodeType": "UsingForDirective",
            "src": "755:27:13",
            "typeName": {
              "id": 2443,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2442,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7969,
                "src": "775:6:13"
              },
              "referencedDeclaration": 7969,
              "src": "775:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$7969",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 2447,
            "mutability": "constant",
            "name": "_AGG_KEY_EMERGENCY_TIMEOUT",
            "nameLocation": "813:26:13",
            "nodeType": "VariableDeclaration",
            "scope": 3547,
            "src": "788:61:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2445,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "788:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3134",
              "id": 2446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "842:7:13",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1209600_by_1",
                "typeString": "int_const 1209600"
              },
              "value": "14"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2450,
            "mutability": "constant",
            "name": "_GAS_TO_FORWARD",
            "nameLocation": "880:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 3547,
            "src": "855:47:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2448,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33353030",
              "id": 2449,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "898:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3500_by_1",
                "typeString": "int_const 3500"
              },
              "value": "3500"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2456,
            "name": "TransferFailed",
            "nameLocation": "915:14:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2452,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "954:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2456,
                  "src": "930:33:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2454,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "973:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2456,
                  "src": "965:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "929:51:13"
            },
            "src": "909:72:13"
          },
          {
            "anonymous": false,
            "id": 2464,
            "name": "SwapNative",
            "nameLocation": "992:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2458,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1011:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2464,
                  "src": "1003:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2460,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "egressParams",
                  "nameLocation": "1026:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2464,
                  "src": "1019:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2462,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "egressReceiver",
                  "nameLocation": "1048:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2464,
                  "src": "1040:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:61:13"
            },
            "src": "986:78:13"
          },
          {
            "anonymous": false,
            "id": 2474,
            "name": "SwapToken",
            "nameLocation": "1075:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2466,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ingressToken",
                  "nameLocation": "1093:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "1085:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2468,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1115:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "1107:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "egressParams",
                  "nameLocation": "1130:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "1123:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "egressReceiver",
                  "nameLocation": "1152:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "1144:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:83:13"
            },
            "src": "1069:99:13"
          },
          {
            "anonymous": false,
            "id": 2478,
            "name": "SwapsEnabled",
            "nameLocation": "1179:12:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "1197:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2478,
                  "src": "1192:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:14:13"
            },
            "src": "1173:33:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2479,
              "nodeType": "StructuredDocumentation",
              "src": "1212:340:13",
              "text": "@dev dstAddress is not indexed because indexing a dynamic type (string) to be able to filter,\n      makes it so we won't be able to decode it unless we specifically search for it. If we want\n      to filter it and decode it then we would need to have both the indexed and the non-indexed\n      version in the event."
            },
            "id": 2497,
            "name": "XCallNative",
            "nameLocation": "1563:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2481,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "1591:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1584:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2480,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2483,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "1616:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1609:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2485,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "1643:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1636:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1671:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1663:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2489,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1703:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1687:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1725:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1719:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2493,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstNativeGas",
                  "nameLocation": "1750:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1742:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2495,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "refundAddress",
                  "nameLocation": "1780:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "1772:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1772:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1574:225:13"
            },
            "src": "1557:243:13"
          },
          {
            "anonymous": false,
            "id": 2517,
            "name": "XCallToken",
            "nameLocation": "1811:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2499,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "1838:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1831:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "1863:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1856:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2503,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "1890:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1883:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nameLocation": "1918:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1910:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2507,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1944:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1936:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1976:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1960:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2511,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1998:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "1992:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2513,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstNativeGas",
                  "nameLocation": "2023:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2015:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2515,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "refundAddress",
                  "nameLocation": "2053:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2045:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:251:13"
            },
            "src": "1805:268:13"
          },
          {
            "anonymous": false,
            "id": 2529,
            "name": "SwapNative",
            "nameLocation": "2084:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2519,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "2102:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "2095:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2518,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2521,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "2119:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "2112:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2523,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "2138:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "2131:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2525,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2158:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "2150:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2527,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2182:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "2166:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2166:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:95:13"
            },
            "src": "2078:112:13"
          },
          {
            "anonymous": false,
            "id": 2543,
            "name": "SwapToken",
            "nameLocation": "2201:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2531,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "2227:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2220:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2533,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "2252:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2245:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2532,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2245:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2535,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "2279:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2272:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nameLocation": "2307:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2299:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2333:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2325:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2365:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "2349:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2210:167:13"
            },
            "src": "2195:183:13"
          },
          {
            "anonymous": false,
            "id": 2547,
            "name": "XCallsEnabled",
            "nameLocation": "2390:13:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nameLocation": "2409:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "2404:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2404:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2403:14:13"
            },
            "src": "2384:34:13"
          },
          {
            "constant": false,
            "id": 2549,
            "mutability": "mutable",
            "name": "_xCallsEnabled",
            "nameLocation": "2437:14:13",
            "nodeType": "VariableDeclaration",
            "scope": 3547,
            "src": "2424:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2548,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2424:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2558,
              "nodeType": "Block",
              "src": "2526:2:13",
              "statements": []
            },
            "id": 2559,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2555,
                    "name": "keyManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2552,
                    "src": "2514:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IKeyManager_$6003",
                      "typeString": "contract IKeyManager"
                    }
                  }
                ],
                "id": 2556,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2554,
                  "name": "AggKeyNonceConsumer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 114,
                  "src": "2494:19:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2494:31:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2552,
                  "mutability": "mutable",
                  "name": "keyManager",
                  "nameLocation": "2482:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "2470:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IKeyManager_$6003",
                    "typeString": "contract IKeyManager"
                  },
                  "typeName": {
                    "id": 2551,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2550,
                      "name": "IKeyManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6003,
                      "src": "2470:11:13"
                    },
                    "referencedDeclaration": 6003,
                    "src": "2470:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IKeyManager_$6003",
                      "typeString": "contract IKeyManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:24:13"
            },
            "returnParameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2526:0:13"
            },
            "scope": 3547,
            "src": "2458:70:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              437
            ],
            "body": {
              "id": 2571,
              "nodeType": "Block",
              "src": "2878:58:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2566,
                          "name": "getKeyManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "2895:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IKeyManager_$6003_$",
                            "typeString": "function () view returns (contract IKeyManager)"
                          }
                        },
                        "id": 2567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2895:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IKeyManager_$6003",
                          "typeString": "contract IKeyManager"
                        }
                      },
                      "id": 2568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getGovernanceKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5968,
                      "src": "2895:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:34:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2565,
                  "id": 2570,
                  "nodeType": "Return",
                  "src": "2888:41:13"
                }
              ]
            },
            "documentation": {
              "id": 2560,
              "nodeType": "StructuredDocumentation",
              "src": "2534:274:13",
              "text": "@dev   Get the governor address from the KeyManager. This is called by the onlyGovernor\n        modifier in the GovernanceCommunityGuarded. This logic can't be moved to the\n        GovernanceCommunityGuarded since it requires a reference to the KeyManager."
            },
            "id": 2572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getGovernor",
            "nameLocation": "2822:12:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2851:8:13"
            },
            "parameters": {
              "id": 2561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2834:2:13"
            },
            "returnParameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2572,
                  "src": "2869:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2868:9:13"
            },
            "scope": 3547,
            "src": "2813:123:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              443
            ],
            "body": {
              "id": 2584,
              "nodeType": "Block",
              "src": "3289:57:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2579,
                          "name": "getKeyManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "3306:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IKeyManager_$6003_$",
                            "typeString": "function () view returns (contract IKeyManager)"
                          }
                        },
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3306:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IKeyManager_$6003",
                          "typeString": "contract IKeyManager"
                        }
                      },
                      "id": 2581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCommunityKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5973,
                      "src": "3306:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3306:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2578,
                  "id": 2583,
                  "nodeType": "Return",
                  "src": "3299:40:13"
                }
              ]
            },
            "documentation": {
              "id": 2573,
              "nodeType": "StructuredDocumentation",
              "src": "2942:273:13",
              "text": "@dev   Get the community key from the KeyManager. This is called by the isCommunityKey\n        modifier in the GovernanceCommunityGuarded. This logic can't be moved to the\n        GovernanceCommunityGuarded since it requires a reference to the KeyManager."
            },
            "id": 2585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCommunityKey",
            "nameLocation": "3229:16:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2575,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3262:8:13"
            },
            "parameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:2:13"
            },
            "returnParameters": {
              "id": 2578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2585,
                  "src": "3280:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3279:9:13"
            },
            "scope": 3547,
            "src": "3220:126:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6208
            ],
            "body": {
              "id": 2647,
              "nodeType": "Block",
              "src": "5708:268:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2636,
                        "name": "deployFetchParamsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2593,
                        "src": "5782:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                        }
                      ],
                      "id": 2635,
                      "name": "_deployAndFetchBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2930,
                      "src": "5761:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.DeployFetchParams calldata[] calldata)"
                      }
                    },
                    "id": 2637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5761:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2638,
                  "nodeType": "ExpressionStatement",
                  "src": "5761:44:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2640,
                        "name": "fetchParamsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2597,
                        "src": "5876:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.FetchParams calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.FetchParams calldata[] calldata"
                        }
                      ],
                      "id": 2639,
                      "name": "_fetchBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3017,
                      "src": "5864:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.FetchParams calldata[] calldata)"
                      }
                    },
                    "id": 2641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5864:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2642,
                  "nodeType": "ExpressionStatement",
                  "src": "5864:29:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2644,
                        "name": "transferParamsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2601,
                        "src": "5949:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata[] calldata"
                        }
                      ],
                      "id": 2643,
                      "name": "_transferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2796,
                      "src": "5934:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.TransferParams calldata[] calldata)"
                      }
                    },
                    "id": 2645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5934:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2646,
                  "nodeType": "ExpressionStatement",
                  "src": "5934:35:13"
                }
              ]
            },
            "documentation": {
              "id": 2586,
              "nodeType": "StructuredDocumentation",
              "src": "3688:1312:13",
              "text": " @notice  Can do a combination of all fcns in this contract. It first fetches all\n          deposits , then it performs all transfers specified with the rest\n          of the inputs, the same as transferBatch (where all inputs are again required\n          to be of equal length - however the lengths of the fetch inputs do not have to\n          be equal to lengths of the transfer inputs). Fetches/transfers of native are\n          indicated with 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE as the token address.\n @dev     FetchAndDeploy is executed first to handle the edge case , which probably shouldn't\n          happen anyway, where a deploy and a fetch for the same address are in the same batch.\n          Transfers are executed last to ensure that all fetching has been completed first.\n @param sigData   The keccak256 hash over the msg (uint) (here that's\n                  a hash over the calldata to the function with an empty sigData) and\n                  sig over that hash (uint) from the aggregate key\n @param deployFetchParamsArray    The array of deploy and fetch parameters\n @param fetchParamsArray    The array of fetch parameters\n @param transferParamsArray The array of transfer parameters"
            },
            "functionSelector": "63e7334b",
            "id": 2648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2605,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2604,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "5270:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "5270:16:13"
              },
              {
                "arguments": [
                  {
                    "id": 2607,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2589,
                    "src": "5325:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2611,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5417:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allBatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2648,
                              "src": "5417:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_array$_t_struct$_DeployFetchParams_$6037_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_FetchParams_$6042_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_TransferParams_$6032_memory_ptr_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,struct IShared.DeployFetchParams memory[] memory,struct IShared.FetchParams memory[] memory,struct IShared.TransferParams memory[] memory) external"
                              }
                            },
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5417:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2615,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2589,
                                  "src": "5469:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "5469:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2617,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2589,
                                  "src": "5489:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "5489:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5506:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 2620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5509:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 2621,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2589,
                                  "src": "5512:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "5512:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2625,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5535:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5527:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2623,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5527:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5527:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2614,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "5461:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 2627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5461:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 2628,
                            "name": "deployFetchParamsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2593,
                            "src": "5560:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                            }
                          },
                          {
                            "id": 2629,
                            "name": "fetchParamsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2597,
                            "src": "5604:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.FetchParams calldata[] calldata"
                            }
                          },
                          {
                            "id": 2630,
                            "name": "transferParamsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2601,
                            "src": "5642:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.FetchParams calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 2609,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5373:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5373:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5373:306:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2608,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5346:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5346:347:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2633,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2606,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "5295:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "5295:408:13"
              }
            ],
            "name": "allBatch",
            "nameLocation": "5014:8:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2603,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5253:8:13"
            },
            "parameters": {
              "id": 2602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "5049:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2648,
                  "src": "5032:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 2588,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2587,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "5032:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "5032:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2593,
                  "mutability": "mutable",
                  "name": "deployFetchParamsArray",
                  "nameLocation": "5095:22:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2648,
                  "src": "5066:51:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.DeployFetchParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2591,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2590,
                        "name": "DeployFetchParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6037,
                        "src": "5066:17:13"
                      },
                      "referencedDeclaration": 6037,
                      "src": "5066:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DeployFetchParams_$6037_storage_ptr",
                        "typeString": "struct IShared.DeployFetchParams"
                      }
                    },
                    "id": 2592,
                    "nodeType": "ArrayTypeName",
                    "src": "5066:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.DeployFetchParams[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2597,
                  "mutability": "mutable",
                  "name": "fetchParamsArray",
                  "nameLocation": "5150:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2648,
                  "src": "5127:39:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.FetchParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2595,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2594,
                        "name": "FetchParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6042,
                        "src": "5127:11:13"
                      },
                      "referencedDeclaration": 6042,
                      "src": "5127:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FetchParams_$6042_storage_ptr",
                        "typeString": "struct IShared.FetchParams"
                      }
                    },
                    "id": 2596,
                    "nodeType": "ArrayTypeName",
                    "src": "5127:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.FetchParams[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2601,
                  "mutability": "mutable",
                  "name": "transferParamsArray",
                  "nameLocation": "5202:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2648,
                  "src": "5176:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.TransferParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2599,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2598,
                        "name": "TransferParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6032,
                        "src": "5176:14:13"
                      },
                      "referencedDeclaration": 6032,
                      "src": "5176:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_storage_ptr",
                        "typeString": "struct IShared.TransferParams"
                      }
                    },
                    "id": 2600,
                    "nodeType": "ArrayTypeName",
                    "src": "5176:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.TransferParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5022:205:13"
            },
            "returnParameters": {
              "id": 2634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5708:0:13"
            },
            "scope": 3547,
            "src": "5005:971:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6217
            ],
            "body": {
              "id": 2708,
              "nodeType": "Block",
              "src": "7302:97:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2700,
                          "name": "transferParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2655,
                          "src": "7322:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                            "typeString": "struct IShared.TransferParams calldata"
                          }
                        },
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6027,
                        "src": "7322:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2702,
                          "name": "transferParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2655,
                          "src": "7344:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                            "typeString": "struct IShared.TransferParams calldata"
                          }
                        },
                        "id": 2703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6029,
                        "src": "7344:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 2704,
                          "name": "transferParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2655,
                          "src": "7370:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                            "typeString": "struct IShared.TransferParams calldata"
                          }
                        },
                        "id": 2705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6031,
                        "src": "7370:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2699,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2843,
                      "src": "7312:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256)"
                      }
                    },
                    "id": 2706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7312:80:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2707,
                  "nodeType": "ExpressionStatement",
                  "src": "7312:80:13"
                }
              ]
            },
            "documentation": {
              "id": 2649,
              "nodeType": "StructuredDocumentation",
              "src": "6318:386:13",
              "text": " @notice  Transfers native or a token from this vault to a recipient\n @param sigData   The keccak256 hash over the msg (uint) (here that's\n                  a hash over the calldata to the function with an empty sigData) and\n                  sig over that hash (uint) from the aggregate key\n @param transferParams       The transfer parameters"
            },
            "functionSelector": "b03b6a57",
            "id": 2709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2658,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "6835:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6835:16:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2661,
                      "name": "transferParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2655,
                      "src": "6867:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6027,
                    "src": "6867:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2663,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2660,
                  "name": "nzAddr",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3844,
                  "src": "6860:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6860:28:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2665,
                      "name": "transferParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2655,
                      "src": "6904:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "recipient",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6029,
                    "src": "6904:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2664,
                  "name": "nzAddr",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3844,
                  "src": "6897:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6897:32:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2669,
                      "name": "transferParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2655,
                      "src": "6945:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata"
                      }
                    },
                    "id": 2670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6031,
                    "src": "6945:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2668,
                  "name": "nzUint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3830,
                  "src": "6938:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6938:29:13"
              },
              {
                "arguments": [
                  {
                    "id": 2673,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2652,
                    "src": "7006:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2677,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7098:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 2678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2709,
                              "src": "7098:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_struct$_TransferParams_$6032_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,struct IShared.TransferParams memory) external"
                              }
                            },
                            "id": 2679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7098:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2681,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2652,
                                  "src": "7150:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "7150:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2683,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2652,
                                  "src": "7170:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "7170:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2685,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7187:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 2686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7190:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 2687,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2652,
                                  "src": "7193:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "7193:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7216:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7208:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2689,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7208:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7208:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2680,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "7142:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 2693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7142:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 2694,
                            "name": "transferParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2655,
                            "src": "7241:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 2675,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7054:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7054:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7054:219:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2674,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7027:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:260:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2672,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "6976:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6976:321:13"
              }
            ],
            "name": "transfer",
            "nameLocation": "6718:8:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2657,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6818:8:13"
            },
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2652,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "6744:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "6727:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 2651,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2650,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "6727:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "6727:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2655,
                  "mutability": "mutable",
                  "name": "transferParams",
                  "nameLocation": "6777:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2709,
                  "src": "6753:38:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                    "typeString": "struct IShared.TransferParams"
                  },
                  "typeName": {
                    "id": 2654,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2653,
                      "name": "TransferParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6032,
                      "src": "6753:14:13"
                    },
                    "referencedDeclaration": 6032,
                    "src": "6753:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TransferParams_$6032_storage_ptr",
                      "typeString": "struct IShared.TransferParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6726:66:13"
            },
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7302:0:13"
            },
            "scope": 3547,
            "src": "6709:690:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6227
            ],
            "body": {
              "id": 2753,
              "nodeType": "Block",
              "src": "8303:52:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2750,
                        "name": "transferParamsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2717,
                        "src": "8328:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata[] calldata"
                        }
                      ],
                      "id": 2749,
                      "name": "_transferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2796,
                      "src": "8313:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.TransferParams calldata[] calldata)"
                      }
                    },
                    "id": 2751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8313:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2752,
                  "nodeType": "ExpressionStatement",
                  "src": "8313:35:13"
                }
              ]
            },
            "documentation": {
              "id": 2710,
              "nodeType": "StructuredDocumentation",
              "src": "7405:394:13",
              "text": " @notice  Transfers native or tokens from this vault to recipients.\n @param sigData   The keccak256 hash over the msg (uint) (here that's a hash over\n                  the calldata to the function with an empty sigData) and sig over\n                  that hash (uint) from the aggregate key\n @param transferParamsArray The array of transfer parameters."
            },
            "functionSelector": "e4d2f59b",
            "id": 2754,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2721,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2720,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "7942:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "7942:16:13"
              },
              {
                "arguments": [
                  {
                    "id": 2723,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2713,
                    "src": "7997:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2727,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8089:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 2728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferBatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2754,
                              "src": "8089:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_array$_t_struct$_TransferParams_$6032_memory_ptr_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,struct IShared.TransferParams memory[] memory) external"
                              }
                            },
                            "id": 2729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8089:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2731,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2713,
                                  "src": "8146:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "8146:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2733,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2713,
                                  "src": "8166:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "8166:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8183:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 2736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8186:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 2737,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2713,
                                  "src": "8189:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "8189:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8212:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8204:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2739,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8204:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8204:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2730,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "8138:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 2743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8138:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 2744,
                            "name": "transferParamsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2717,
                            "src": "8237:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 2725,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8045:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8045:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8045:229:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2724,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8018:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8018:270:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2747,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2722,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "7967:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "7967:331:13"
              }
            ],
            "name": "transferBatch",
            "nameLocation": "7813:13:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2719,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7925:8:13"
            },
            "parameters": {
              "id": 2718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "7844:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "7827:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 2712,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2711,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "7827:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "7827:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2717,
                  "mutability": "mutable",
                  "name": "transferParamsArray",
                  "nameLocation": "7879:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2754,
                  "src": "7853:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.TransferParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2715,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2714,
                        "name": "TransferParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6032,
                        "src": "7853:14:13"
                      },
                      "referencedDeclaration": 6032,
                      "src": "7853:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_storage_ptr",
                        "typeString": "struct IShared.TransferParams"
                      }
                    },
                    "id": 2716,
                    "nodeType": "ArrayTypeName",
                    "src": "7853:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.TransferParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7826:73:13"
            },
            "returnParameters": {
              "id": 2748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8303:0:13"
            },
            "scope": 3547,
            "src": "7804:551:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2795,
              "nodeType": "Block",
              "src": "8598:291:13",
              "statements": [
                {
                  "assignments": [
                    2763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2763,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "8616:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2795,
                      "src": "8608:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8608:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2766,
                  "initialValue": {
                    "expression": {
                      "id": 2764,
                      "name": "transferParamsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "8625:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata[] calldata"
                      }
                    },
                    "id": 2765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8625:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8608:43:13"
                },
                {
                  "body": {
                    "id": 2793,
                    "nodeType": "Block",
                    "src": "8695:188:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2775,
                                  "name": "transferParamsArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2759,
                                  "src": "8719:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IShared.TransferParams calldata[] calldata"
                                  }
                                },
                                "id": 2777,
                                "indexExpression": {
                                  "id": 2776,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "8739:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8719:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 2778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6027,
                              "src": "8719:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2779,
                                  "name": "transferParamsArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2759,
                                  "src": "8749:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IShared.TransferParams calldata[] calldata"
                                  }
                                },
                                "id": 2781,
                                "indexExpression": {
                                  "id": 2780,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "8769:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8749:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 2782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6029,
                              "src": "8749:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2783,
                                  "name": "transferParamsArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2759,
                                  "src": "8783:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IShared.TransferParams calldata[] calldata"
                                  }
                                },
                                "id": 2785,
                                "indexExpression": {
                                  "id": 2784,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2768,
                                  "src": "8803:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8783:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 2786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6031,
                              "src": "8783:29:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2774,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2843,
                            "src": "8709:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address payable,uint256)"
                            }
                          },
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8709:104:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2788,
                        "nodeType": "ExpressionStatement",
                        "src": "8709:104:13"
                      },
                      {
                        "id": 2792,
                        "nodeType": "UncheckedBlock",
                        "src": "8827:46:13",
                        "statements": [
                          {
                            "expression": {
                              "id": 2790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8855:3:13",
                              "subExpression": {
                                "id": 2789,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2768,
                                "src": "8857:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2791,
                            "nodeType": "ExpressionStatement",
                            "src": "8855:3:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2771,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2768,
                      "src": "8681:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2772,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2763,
                      "src": "8685:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8681:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2794,
                  "initializationExpression": {
                    "assignments": [
                      2768
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2768,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8674:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2794,
                        "src": "8666:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8666:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2770,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8678:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8666:13:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "8661:222:13"
                }
              ]
            },
            "documentation": {
              "id": 2755,
              "nodeType": "StructuredDocumentation",
              "src": "8361:153:13",
              "text": " @notice  Transfers native or tokens from this vault to recipients.\n @param transferParamsArray The array of transfer parameters."
            },
            "id": 2796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferBatch",
            "nameLocation": "8528:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2759,
                  "mutability": "mutable",
                  "name": "transferParamsArray",
                  "nameLocation": "8569:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2796,
                  "src": "8543:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.TransferParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2757,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2756,
                        "name": "TransferParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6032,
                        "src": "8543:14:13"
                      },
                      "referencedDeclaration": 6032,
                      "src": "8543:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_storage_ptr",
                        "typeString": "struct IShared.TransferParams"
                      }
                    },
                    "id": 2758,
                    "nodeType": "ArrayTypeName",
                    "src": "8543:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TransferParams_$6032_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.TransferParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8542:47:13"
            },
            "returnParameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8598:0:13"
            },
            "scope": 3547,
            "src": "8519:370:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2842,
              "nodeType": "Block",
              "src": "9529:547:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 2808,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2799,
                          "src": "9551:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9543:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9543:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9543:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2810,
                      "name": "_NATIVE_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3804,
                      "src": "9561:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9543:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2840,
                    "nodeType": "Block",
                    "src": "10000:70:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2836,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2801,
                              "src": "10041:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 2837,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2803,
                              "src": "10052:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2833,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2799,
                                  "src": "10021:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2832,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7969,
                                "src": "10014:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$7969_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10014:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8000,
                            "src": "10014:26:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7969_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10014:45:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2839,
                        "nodeType": "ExpressionStatement",
                        "src": "10014:45:13"
                      }
                    ]
                  },
                  "id": 2841,
                  "nodeType": "IfStatement",
                  "src": "9539:531:13",
                  "trueBody": {
                    "id": 2831,
                    "nodeType": "Block",
                    "src": "9575:419:13",
                    "statements": [
                      {
                        "assignments": [
                          2813,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2813,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9817:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2831,
                            "src": "9812:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2812,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9812:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2821,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9882:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 2814,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2801,
                                "src": "9830:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 2815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "9830:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "gas",
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2816,
                                "name": "_GAS_TO_FORWARD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2450,
                                "src": "9850:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2817,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2803,
                                "src": "9874:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "9830:51:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9830:55:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9811:74:13"
                      },
                      {
                        "condition": {
                          "id": 2823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9903:8:13",
                          "subExpression": {
                            "id": 2822,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2813,
                            "src": "9904:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2830,
                        "nodeType": "IfStatement",
                        "src": "9899:85:13",
                        "trueBody": {
                          "id": 2829,
                          "nodeType": "Block",
                          "src": "9913:71:13",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2825,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2801,
                                    "src": "9951:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 2826,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2803,
                                    "src": "9962:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2824,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2456,
                                  "src": "9936:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                                    "typeString": "function (address payable,uint256)"
                                  }
                                },
                                "id": 2827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:33:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2828,
                              "nodeType": "EmitStatement",
                              "src": "9931:38:13"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2797,
              "nodeType": "StructuredDocumentation",
              "src": "8895:514:13",
              "text": " @notice  Transfers ETH or a token from this vault to a recipient\n @dev     Using \"send\" function to only send a set amount of gas, preventing the recipient\n          from using all the transfer batch gas. Also, not reverting on failure so it can't\n          block the batch transfer.\n @param token The address of the token to be transferred\n @param recipient The address of the recipient of the transfer\n @param amount    The amount to transfer, in wei (uint)"
            },
            "id": 2843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "9423:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2799,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9450:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "9442:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9442:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2801,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9481:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "9465:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9465:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2803,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9508:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "9500:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9500:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9432:88:13"
            },
            "returnParameters": {
              "id": 2805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9529:0:13"
            },
            "scope": 3547,
            "src": "9414:662:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              6237
            ],
            "body": {
              "id": 2887,
              "nodeType": "Block",
              "src": "11470:61:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2884,
                        "name": "deployFetchParamsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2851,
                        "src": "11501:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                        }
                      ],
                      "id": 2883,
                      "name": "_deployAndFetchBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2930,
                      "src": "11480:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.DeployFetchParams calldata[] calldata)"
                      }
                    },
                    "id": 2885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11480:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2886,
                  "nodeType": "ExpressionStatement",
                  "src": "11480:44:13"
                }
              ]
            },
            "documentation": {
              "id": 2844,
              "nodeType": "StructuredDocumentation",
              "src": "10418:527:13",
              "text": " @notice  Retrieves any token from multiple address, deterministically generated using\n          create2, by creating a contract for that address, sending it to this vault.\n @param sigData   The keccak256 hash over the msg (uint) (here that's normally\n                  a hash over the calldata to the function with an empty sigData) and\n                  sig over that hash (uint) from the aggregate key\n @param deployFetchParamsArray    The array of deploy and fetch parameters"
            },
            "functionSelector": "59dc4a09",
            "id": 2888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2855,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2854,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "11100:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "11100:16:13"
              },
              {
                "arguments": [
                  {
                    "id": 2857,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2847,
                    "src": "11155:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2861,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11247:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deployAndFetchBatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2888,
                              "src": "11247:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_array$_t_struct$_DeployFetchParams_$6037_memory_ptr_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,struct IShared.DeployFetchParams memory[] memory) external"
                              }
                            },
                            "id": 2863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11247:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2865,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2847,
                                  "src": "11310:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "11310:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2867,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2847,
                                  "src": "11330:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "11330:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11347:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 2870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11350:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 2871,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2847,
                                  "src": "11353:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "11353:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2875,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11376:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11368:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2873,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11368:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11368:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2864,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "11302:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 2877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11302:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 2878,
                            "name": "deployFetchParamsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "11401:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 2859,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11203:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11203:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11203:238:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2858,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11176:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11176:279:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2856,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "11125:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "11125:340:13"
              }
            ],
            "name": "deployAndFetchBatch",
            "nameLocation": "10959:19:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2853,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11083:8:13"
            },
            "parameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2847,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "10996:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "10979:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 2846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2845,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "10979:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "10979:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "deployFetchParamsArray",
                  "nameLocation": "11034:22:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2888,
                  "src": "11005:51:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.DeployFetchParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2849,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2848,
                        "name": "DeployFetchParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6037,
                        "src": "11005:17:13"
                      },
                      "referencedDeclaration": 6037,
                      "src": "11005:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DeployFetchParams_$6037_storage_ptr",
                        "typeString": "struct IShared.DeployFetchParams"
                      }
                    },
                    "id": 2850,
                    "nodeType": "ArrayTypeName",
                    "src": "11005:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.DeployFetchParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10978:79:13"
            },
            "returnParameters": {
              "id": 2882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11470:0:13"
            },
            "scope": 3547,
            "src": "10950:581:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2929,
              "nodeType": "Block",
              "src": "11628:322:13",
              "statements": [
                {
                  "assignments": [
                    2896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2896,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "11682:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2929,
                      "src": "11674:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11674:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2899,
                  "initialValue": {
                    "expression": {
                      "id": 2897,
                      "name": "deployFetchParamsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2892,
                      "src": "11691:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11691:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11674:46:13"
                },
                {
                  "body": {
                    "id": 2927,
                    "nodeType": "Block",
                    "src": "11764:180:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2916,
                                      "name": "deployFetchParamsArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2892,
                                      "src": "11841:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                                      }
                                    },
                                    "id": 2918,
                                    "indexExpression": {
                                      "id": 2917,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2901,
                                      "src": "11864:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11841:25:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DeployFetchParams_$6037_calldata_ptr",
                                      "typeString": "struct IShared.DeployFetchParams calldata"
                                    }
                                  },
                                  "id": 2919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6036,
                                  "src": "11841:31:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2915,
                                "name": "IERC20Lite",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5719,
                                "src": "11830:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Lite_$5719_$",
                                  "typeString": "type(contract IERC20Lite)"
                                }
                              },
                              "id": 2920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11830:43:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Lite_$5719",
                                "typeString": "contract IERC20Lite"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20Lite_$5719",
                                "typeString": "contract IERC20Lite"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20Lite_$5719",
                                  "typeString": "contract IERC20Lite"
                                }
                              ],
                              "id": 2909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "11778:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20Lite_$5719_$returns$_t_contract$_Deposit_$236_$",
                                "typeString": "function (contract IERC20Lite) returns (contract Deposit)"
                              },
                              "typeName": {
                                "id": 2908,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2907,
                                  "name": "Deposit",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 236,
                                  "src": "11782:7:13"
                                },
                                "referencedDeclaration": 236,
                                "src": "11782:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Deposit_$236",
                                  "typeString": "contract Deposit"
                                }
                              }
                            },
                            "id": 2914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2910,
                                    "name": "deployFetchParamsArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2892,
                                    "src": "11796:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct IShared.DeployFetchParams calldata[] calldata"
                                    }
                                  },
                                  "id": 2912,
                                  "indexExpression": {
                                    "id": 2911,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2901,
                                    "src": "11819:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11796:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DeployFetchParams_$6037_calldata_ptr",
                                    "typeString": "struct IShared.DeployFetchParams calldata"
                                  }
                                },
                                "id": 2913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "swapID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6034,
                                "src": "11796:32:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "11778:51:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20Lite_$5719_$returns$_t_contract$_Deposit_$236_$salt",
                              "typeString": "function (contract IERC20Lite) returns (contract Deposit)"
                            }
                          },
                          "id": 2921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11778:96:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Deposit_$236",
                            "typeString": "contract Deposit"
                          }
                        },
                        "id": 2922,
                        "nodeType": "ExpressionStatement",
                        "src": "11778:96:13"
                      },
                      {
                        "id": 2926,
                        "nodeType": "UncheckedBlock",
                        "src": "11888:46:13",
                        "statements": [
                          {
                            "expression": {
                              "id": 2924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "11916:3:13",
                              "subExpression": {
                                "id": 2923,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2901,
                                "src": "11918:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2925,
                            "nodeType": "ExpressionStatement",
                            "src": "11916:3:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2904,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2901,
                      "src": "11750:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2905,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2896,
                      "src": "11754:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11750:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2928,
                  "initializationExpression": {
                    "assignments": [
                      2901
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2901,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11743:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2928,
                        "src": "11735:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2900,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11735:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2903,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11747:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11735:13:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "11730:214:13"
                }
              ]
            },
            "id": 2930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deployAndFetchBatch",
            "nameLocation": "11546:20:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "mutability": "mutable",
                  "name": "deployFetchParamsArray",
                  "nameLocation": "11596:22:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2930,
                  "src": "11567:51:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.DeployFetchParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2890,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2889,
                        "name": "DeployFetchParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6037,
                        "src": "11567:17:13"
                      },
                      "referencedDeclaration": 6037,
                      "src": "11567:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DeployFetchParams_$6037_storage_ptr",
                        "typeString": "struct IShared.DeployFetchParams"
                      }
                    },
                    "id": 2891,
                    "nodeType": "ArrayTypeName",
                    "src": "11567:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DeployFetchParams_$6037_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.DeployFetchParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11566:53:13"
            },
            "returnParameters": {
              "id": 2894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11628:0:13"
            },
            "scope": 3547,
            "src": "11537:413:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              6247
            ],
            "body": {
              "id": 2974,
              "nodeType": "Block",
              "src": "12862:46:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2971,
                        "name": "fetchParamsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2938,
                        "src": "12884:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.FetchParams calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IShared.FetchParams calldata[] calldata"
                        }
                      ],
                      "id": 2970,
                      "name": "_fetchBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3017,
                      "src": "12872:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.FetchParams calldata[] calldata)"
                      }
                    },
                    "id": 2972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12872:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2973,
                  "nodeType": "ExpressionStatement",
                  "src": "12872:29:13"
                }
              ]
            },
            "documentation": {
              "id": 2931,
              "nodeType": "StructuredDocumentation",
              "src": "11956:417:13",
              "text": " @notice  Retrieves any token addresses where a Deposit contract is already deployed.\n @param sigData   The keccak256 hash over the msg (uint) (here that's normally\n                  a hash over the calldata to the function with an empty sigData) and\n                  sig over that hash (uint) from the aggregate key\n @param fetchParamsArray    The array of fetch parameters"
            },
            "functionSelector": "79c83ad7",
            "id": 2975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2942,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2941,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "12507:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "12507:16:13"
              },
              {
                "arguments": [
                  {
                    "id": 2944,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2934,
                    "src": "12562:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2948,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12654:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 2949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fetchBatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2975,
                              "src": "12654:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_array$_t_struct$_FetchParams_$6042_memory_ptr_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,struct IShared.FetchParams memory[] memory) external"
                              }
                            },
                            "id": 2950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12654:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2952,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2934,
                                  "src": "12708:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "12708:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2954,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2934,
                                  "src": "12728:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "12728:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12745:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 2957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12748:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 2958,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2934,
                                  "src": "12751:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "12751:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12774:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12766:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2960,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12766:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12766:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2951,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "12700:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 2964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12700:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 2965,
                            "name": "fetchParamsArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2938,
                            "src": "12799:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.FetchParams calldata[] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IShared.FetchParams calldata[] calldata"
                            }
                          ],
                          "expression": {
                            "id": 2946,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12610:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12610:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12610:223:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2945,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12583:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12583:264:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2968,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2943,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "12532:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "12532:325:13"
              }
            ],
            "name": "fetchBatch",
            "nameLocation": "12387:10:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2940,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12490:8:13"
            },
            "parameters": {
              "id": 2939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2934,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "12415:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2975,
                  "src": "12398:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 2933,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2932,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "12398:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "12398:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2938,
                  "mutability": "mutable",
                  "name": "fetchParamsArray",
                  "nameLocation": "12447:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2975,
                  "src": "12424:39:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.FetchParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2936,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2935,
                        "name": "FetchParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6042,
                        "src": "12424:11:13"
                      },
                      "referencedDeclaration": 6042,
                      "src": "12424:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FetchParams_$6042_storage_ptr",
                        "typeString": "struct IShared.FetchParams"
                      }
                    },
                    "id": 2937,
                    "nodeType": "ArrayTypeName",
                    "src": "12424:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.FetchParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12397:67:13"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12862:0:13"
            },
            "scope": 3547,
            "src": "12378:530:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3016,
              "nodeType": "Block",
              "src": "13224:271:13",
              "statements": [
                {
                  "assignments": [
                    2984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2984,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "13242:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3016,
                      "src": "13234:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2983,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13234:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2987,
                  "initialValue": {
                    "expression": {
                      "id": 2985,
                      "name": "fetchParamsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2980,
                      "src": "13251:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IShared.FetchParams calldata[] calldata"
                      }
                    },
                    "id": 2986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "13251:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13234:40:13"
                },
                {
                  "body": {
                    "id": 3014,
                    "nodeType": "Block",
                    "src": "13318:171:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 3003,
                                      "name": "fetchParamsArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2980,
                                      "src": "13392:16:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IShared.FetchParams calldata[] calldata"
                                      }
                                    },
                                    "id": 3005,
                                    "indexExpression": {
                                      "id": 3004,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2989,
                                      "src": "13409:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13392:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FetchParams_$6042_calldata_ptr",
                                      "typeString": "struct IShared.FetchParams calldata"
                                    }
                                  },
                                  "id": 3006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6041,
                                  "src": "13392:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3002,
                                "name": "IERC20Lite",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5719,
                                "src": "13381:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Lite_$5719_$",
                                  "typeString": "type(contract IERC20Lite)"
                                }
                              },
                              "id": 3007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13381:37:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Lite_$5719",
                                "typeString": "contract IERC20Lite"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20Lite_$5719",
                                "typeString": "contract IERC20Lite"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2996,
                                      "name": "fetchParamsArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2980,
                                      "src": "13340:16:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IShared.FetchParams calldata[] calldata"
                                      }
                                    },
                                    "id": 2998,
                                    "indexExpression": {
                                      "id": 2997,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2989,
                                      "src": "13357:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13340:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FetchParams_$6042_calldata_ptr",
                                      "typeString": "struct IShared.FetchParams calldata"
                                    }
                                  },
                                  "id": 2999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fetchContract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6039,
                                  "src": "13340:33:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2995,
                                "name": "Deposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "13332:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Deposit_$236_$",
                                  "typeString": "type(contract Deposit)"
                                }
                              },
                              "id": 3000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13332:42:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Deposit_$236",
                                "typeString": "contract Deposit"
                              }
                            },
                            "id": 3001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fetch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 231,
                            "src": "13332:48:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Lite_$5719_$returns$__$",
                              "typeString": "function (contract IERC20Lite) external"
                            }
                          },
                          "id": 3008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13332:87:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3009,
                        "nodeType": "ExpressionStatement",
                        "src": "13332:87:13"
                      },
                      {
                        "id": 3013,
                        "nodeType": "UncheckedBlock",
                        "src": "13433:46:13",
                        "statements": [
                          {
                            "expression": {
                              "id": 3011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "13461:3:13",
                              "subExpression": {
                                "id": 3010,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2989,
                                "src": "13463:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3012,
                            "nodeType": "ExpressionStatement",
                            "src": "13461:3:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2992,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2989,
                      "src": "13304:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2993,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2984,
                      "src": "13308:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13304:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3015,
                  "initializationExpression": {
                    "assignments": [
                      2989
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2989,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13297:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3015,
                        "src": "13289:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2988,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13289:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2991,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13301:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13289:13:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "13284:205:13"
                }
              ]
            },
            "documentation": {
              "id": 2976,
              "nodeType": "StructuredDocumentation",
              "src": "12914:235:13",
              "text": " @notice  Retrieves any token from multiple addresses where a Deposit contract is already deployed.\n          It emits an event if the fetch fails.\n @param fetchParamsArray    The array of fetch parameters"
            },
            "id": 3017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_fetchBatch",
            "nameLocation": "13163:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2980,
                  "mutability": "mutable",
                  "name": "fetchParamsArray",
                  "nameLocation": "13198:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "13175:39:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IShared.FetchParams[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2978,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2977,
                        "name": "FetchParams",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6042,
                        "src": "13175:11:13"
                      },
                      "referencedDeclaration": 6042,
                      "src": "13175:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FetchParams_$6042_storage_ptr",
                        "typeString": "struct IShared.FetchParams"
                      }
                    },
                    "id": 2979,
                    "nodeType": "ArrayTypeName",
                    "src": "13175:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FetchParams_$6042_storage_$dyn_storage_ptr",
                      "typeString": "struct IShared.FetchParams[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13174:41:13"
            },
            "returnParameters": {
              "id": 2982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13224:0:13"
            },
            "scope": 3547,
            "src": "13154:341:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              6270
            ],
            "body": {
              "id": 3044,
              "nodeType": "Block",
              "src": "14761:89:13",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3035,
                        "name": "dstChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3020,
                        "src": "14787:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3036,
                        "name": "dstAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3022,
                        "src": "14797:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3037,
                        "name": "swapIntent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3024,
                        "src": "14809:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 3038,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14821:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "14821:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3040,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14832:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14832:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3034,
                      "name": "SwapNative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2464,
                        2529
                      ],
                      "referencedDeclaration": 2529,
                      "src": "14776:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint32,string memory,string memory,uint256,address)"
                      }
                    },
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14776:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3043,
                  "nodeType": "EmitStatement",
                  "src": "14771:72:13"
                }
              ]
            },
            "documentation": {
              "id": 3018,
              "nodeType": "StructuredDocumentation",
              "src": "13837:738:13",
              "text": " @notice  Swaps native token for a token in another chain. The egress token will be transferred to the specified \n          destination address on the destination chain.\n @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n          to explicity indicate that an amount is required.  It isn't preventing spamming.\n @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n @param dstAddress    String containing the destination address on the destination chain.\n @param swapIntent    String containing the specifics of the swap to be performed according to Chainflip's nomenclature."
            },
            "functionSelector": "27610a60",
            "id": 3045,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3028,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3027,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "14726:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "14726:16:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3030,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "14750:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "14750:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3032,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3029,
                  "name": "nzUint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3830,
                  "src": "14743:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "14743:17:13"
              }
            ],
            "name": "xSwapNative",
            "nameLocation": "14589:11:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3026,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14717:8:13"
            },
            "parameters": {
              "id": 3025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3020,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "14617:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3045,
                  "src": "14610:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14610:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3022,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "14649:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3045,
                  "src": "14635:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14635:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3024,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "14683:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3045,
                  "src": "14669:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3023,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14669:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14600:99:13"
            },
            "returnParameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14761:0:13"
            },
            "scope": 3547,
            "src": "14580:270:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6261
            ],
            "body": {
              "id": 3091,
              "nodeType": "Block",
              "src": "15976:174:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3069,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16012:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16012:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3073,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16032:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$3547",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$3547",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 3072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16024:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16024:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16024:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3075,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3057,
                        "src": "16039:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3066,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3055,
                        "src": "15986:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$7969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8026,
                      "src": "15986:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7969_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15986:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3077,
                  "nodeType": "ExpressionStatement",
                  "src": "15986:60:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3079,
                        "name": "dstChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3048,
                        "src": "16071:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3080,
                        "name": "dstAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "16081:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3081,
                        "name": "swapIntent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3052,
                        "src": "16093:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3084,
                            "name": "srcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3055,
                            "src": "16113:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$7969",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$7969",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16105:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16105:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16105:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3086,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3057,
                        "src": "16124:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3087,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16132:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16132:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3078,
                      "name": "SwapToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2474,
                        2543
                      ],
                      "referencedDeclaration": 2543,
                      "src": "16061:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint32,string memory,string memory,address,uint256,address)"
                      }
                    },
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16061:82:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3090,
                  "nodeType": "EmitStatement",
                  "src": "16056:87:13"
                }
              ]
            },
            "documentation": {
              "id": 3046,
              "nodeType": "StructuredDocumentation",
              "src": "14856:897:13",
              "text": " @notice  Swaps ERC20 token for a token in another chain. The desired token will be transferred to the specified \n          destination address on the destination chain. The provided ERC20 token must be supported by the Chainflip Protocol. \n @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n          to explicity indicate that an amount is required.\n @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n @param dstAddress    String containing the destination address on the destination chain.\n @param swapIntent    String containing the specifics of the swap to be performed according to Chainflip's nomenclature.\n @param srcToken      Address of the source token to swap.\n @param amount        Amount of tokens to swap."
            },
            "functionSelector": "5942b3bc",
            "id": 3092,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3060,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "15944:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "15944:16:13"
              },
              {
                "arguments": [
                  {
                    "id": 3063,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3057,
                    "src": "15968:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3064,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3062,
                  "name": "nzUint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3830,
                  "src": "15961:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "15961:14:13"
              }
            ],
            "name": "xSwapToken",
            "nameLocation": "15767:10:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3059,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15935:8:13"
            },
            "parameters": {
              "id": 3058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3048,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "15794:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3092,
                  "src": "15787:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3047,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15787:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3050,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "15826:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3092,
                  "src": "15812:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15812:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3052,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "15860:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3092,
                  "src": "15846:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15846:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3055,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nameLocation": "15887:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3092,
                  "src": "15880:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$7969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3054,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3053,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7969,
                      "src": "15880:6:13"
                    },
                    "referencedDeclaration": 7969,
                    "src": "15880:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$7969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15913:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3092,
                  "src": "15905:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15905:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15777:148:13"
            },
            "returnParameters": {
              "id": 3065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15976:0:13"
            },
            "scope": 3547,
            "src": "15758:392:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6285
            ],
            "body": {
              "id": 3130,
              "nodeType": "Block",
              "src": "18463:128:13",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3118,
                        "name": "dstChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3095,
                        "src": "18490:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3119,
                        "name": "dstAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3097,
                        "src": "18500:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3120,
                        "name": "swapIntent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3099,
                        "src": "18512:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 3121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18524:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "18524:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18535:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18535:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3125,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3101,
                        "src": "18547:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3126,
                        "name": "dstNativeGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3103,
                        "src": "18556:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3127,
                        "name": "refundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3105,
                        "src": "18570:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3117,
                      "name": "XCallNative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2497,
                      "src": "18478:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint32,string memory,string memory,uint256,address,bytes memory,uint256,address)"
                      }
                    },
                    "id": 3128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18478:106:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3129,
                  "nodeType": "EmitStatement",
                  "src": "18473:111:13"
                }
              ]
            },
            "documentation": {
              "id": 3093,
              "nodeType": "StructuredDocumentation",
              "src": "16492:1678:13",
              "text": " @notice  Performs a cross-chain call to the destination address on the destination chain. Native tokens must be paid\n          to this contract. The swap intent determines if the provided tokens should be swapped to a different token\n          and transferred as part of the cross-chain call. Otherwise, all tokens are used as a payment for gas on the destination chain.\n          The message parameter is transmitted to the destination chain as part of the cross-chain call.\n @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n          to explicity inidcate that an amount is required. It isn't preventing spamming.\n @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n @param dstAddress    String containing the destination address on the destination chain.\n @param swapIntent    String containing the specifics of the swap to be performed, if any, as part of the xCall. The string\n                      must follow Chainflip's nomenclature. An empty swapIntent implies that no swap needs to take place\n                      and the source token will be used for gas in a swapless xCall.\n @param message       The message to be sent to the egress chain. This is a general purpose message.\n @param dstNativeGas  The amount of native gas to be used on the destination chain's call.\n @param refundAddress Address to refund any excess gas left from the execution of the xCall on the dstChain. This address\n                      is in the context of the srcChain."
            },
            "functionSelector": "91495fbc",
            "id": 3131,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3109,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3108,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "18414:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "18414:16:13"
              },
              {
                "id": 3111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3110,
                  "name": "xCallsEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3530,
                  "src": "18431:13:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "18431:13:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3113,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "18452:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "18452:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3112,
                  "name": "nzUint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3830,
                  "src": "18445:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "18445:17:13"
              }
            ],
            "name": "xCallNative",
            "nameLocation": "18184:11:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18405:8:13"
            },
            "parameters": {
              "id": 3106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "18212:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "18205:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18205:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "18244:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "18230:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18230:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "18278:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "18264:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18264:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3101,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "18313:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "18298:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18298:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "dstNativeGas",
                  "nameLocation": "18338:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "18330:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18330:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3105,
                  "mutability": "mutable",
                  "name": "refundAddress",
                  "nameLocation": "18368:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "18360:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18360:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18195:192:13"
            },
            "returnParameters": {
              "id": 3116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18463:0:13"
            },
            "scope": 3547,
            "src": "18175:416:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6305
            ],
            "body": {
              "id": 3188,
              "nodeType": "Block",
              "src": "20867:331:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3163,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20903:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20903:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3167,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20923:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$3547",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$3547",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 3166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20915:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20915:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20915:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3169,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3147,
                        "src": "20930:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3160,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "20877:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$7969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8026,
                      "src": "20877:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7969_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20877:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "20877:60:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3173,
                        "name": "dstChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "20976:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3174,
                        "name": "dstAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3136,
                        "src": "20998:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3175,
                        "name": "swapIntent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "21022:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3178,
                            "name": "srcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3145,
                            "src": "21054:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$7969",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$7969",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21046:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21046:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21046:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3180,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3147,
                        "src": "21077:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21097:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21097:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3183,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3140,
                        "src": "21121:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 3184,
                        "name": "dstNativeGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3142,
                        "src": "21142:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3185,
                        "name": "refundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3149,
                        "src": "21168:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3172,
                      "name": "XCallToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2517,
                      "src": "20952:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint32,string memory,string memory,address,uint256,address,bytes memory,uint256,address)"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20952:239:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "EmitStatement",
                  "src": "20947:244:13"
                }
              ]
            },
            "documentation": {
              "id": 3132,
              "nodeType": "StructuredDocumentation",
              "src": "18597:1940:13",
              "text": " @notice  Performs a cross-chain call to the destination chain and destination address. An ERC20 token amount\n          needs to be approved to this contract. The ERC20 token must be supported by the Chainflip Protocol.\n          The swap intent determines whether the provided tokens should be swapped to a different token\n          by the Chainflip Protocol. If so, the swapped tokens will be transferred to the destination chain as part\n          of the cross-chain call. Otherwise, the tokens are used as a payment for gas on the destination chain.\n          The message parameter is transmitted to the destination chain as part of the cross-chain call.\n @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n          to explicity indicate that an amount is required.\n @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n @param dstAddress    String containing the destination address on the destination chain.\n @param swapIntent    String containing the specifics of the swap to be performed as part of the xCall. An empty swapIntent\n                       implies that no swap needs to take place and the source token will be used for gas in a swapless xCall.\n @param message       The message to be sent to the egress chain. This is a general purpose message.\n @param dstNativeGas  The amount of native gas to be used on the destination chain's call. That gas will be paid with the\n                      source token.\n @param srcToken      Address of the source token.\n @param amount        Amount of tokens to swap.\n @param refundAddress Address to refund any excess gas left from the execution of the xCall on the dstChain. This address\n                      is in the context of the srcChain."
            },
            "functionSelector": "386e8fe5",
            "id": 3189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3152,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "20821:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "20821:16:13"
              },
              {
                "id": 3155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3154,
                  "name": "xCallsEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3530,
                  "src": "20838:13:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "20838:13:13"
              },
              {
                "arguments": [
                  {
                    "id": 3157,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3147,
                    "src": "20859:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3156,
                  "name": "nzUint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3830,
                  "src": "20852:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "20852:14:13"
              }
            ],
            "name": "xCallToken",
            "nameLocation": "20551:10:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3151,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20812:8:13"
            },
            "parameters": {
              "id": 3150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3134,
                  "mutability": "mutable",
                  "name": "dstChain",
                  "nameLocation": "20578:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20571:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3133,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20571:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3136,
                  "mutability": "mutable",
                  "name": "dstAddress",
                  "nameLocation": "20610:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20596:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20596:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "swapIntent",
                  "nameLocation": "20644:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20630:24:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20630:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "20679:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20664:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20664:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "dstNativeGas",
                  "nameLocation": "20704:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20696:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20696:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "srcToken",
                  "nameLocation": "20733:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20726:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$7969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3143,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7969,
                      "src": "20726:6:13"
                    },
                    "referencedDeclaration": 7969,
                    "src": "20726:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$7969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3147,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20759:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20751:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20751:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3149,
                  "mutability": "mutable",
                  "name": "refundAddress",
                  "nameLocation": "20783:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "20775:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20775:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20561:241:13"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20867:0:13"
            },
            "scope": 3547,
            "src": "20542:656:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6320
            ],
            "body": {
              "id": 3256,
              "nodeType": "Block",
              "src": "23287:162:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3250,
                        "name": "transferParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3196,
                        "src": "23396:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata"
                        }
                      },
                      {
                        "id": 3251,
                        "name": "srcChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3198,
                        "src": "23412:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3252,
                        "name": "srcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3200,
                        "src": "23422:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3253,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3202,
                        "src": "23434:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 3249,
                      "name": "_executexSwapAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "23375:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TransferParams_$6032_calldata_ptr_$_t_uint32_$_t_string_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IShared.TransferParams calldata,uint32,string calldata,bytes calldata)"
                      }
                    },
                    "id": 3254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23375:67:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3255,
                  "nodeType": "ExpressionStatement",
                  "src": "23375:67:13"
                }
              ]
            },
            "documentation": {
              "id": 3190,
              "nodeType": "StructuredDocumentation",
              "src": "21540:921:13",
              "text": " @notice  Transfers ETH or a token from this vault to a recipient and makes a function call\n          completing a cross-chain swap and call. The ICFReceiver interface is expected on\n          the receiver's address. A message is passed to the receiver along with other\n          parameters specifying the origin of the swap.\n @param sigData   The keccak256 hash over the msg (uint) (here that's normally a hash over\n                  the calldata to the function with an empty sigData) and sig over that\n                  that hash (uint) from the aggregate key.\n @param transferParams  The transfer parameters\n @param srcChain        The source chain where the call originated from.\n @param srcAddress      The address where the transfer originated within the ingress chain.\n @param message         The message to be passed to the recipient."
            },
            "functionSelector": "774d6801",
            "id": 3257,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3206,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3205,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "22718:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "22718:16:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3208,
                      "name": "transferParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3196,
                      "src": "22750:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata"
                      }
                    },
                    "id": 3209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6027,
                    "src": "22750:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3207,
                  "name": "nzAddr",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3844,
                  "src": "22743:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "22743:28:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3212,
                      "name": "transferParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3196,
                      "src": "22787:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata"
                      }
                    },
                    "id": 3213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "recipient",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6029,
                    "src": "22787:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3214,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3211,
                  "name": "nzAddr",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3844,
                  "src": "22780:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "22780:32:13"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3216,
                      "name": "transferParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3196,
                      "src": "22828:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                        "typeString": "struct IShared.TransferParams calldata"
                      }
                    },
                    "id": 3217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6031,
                    "src": "22828:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3218,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3215,
                  "name": "nzUint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3830,
                  "src": "22821:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "22821:29:13"
              },
              {
                "arguments": [
                  {
                    "id": 3220,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3193,
                    "src": "22889:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 3224,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "22981:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 3225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executexSwapAndCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3257,
                              "src": "22981:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_struct$_TransferParams_$6032_memory_ptr_$_t_uint32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,struct IShared.TransferParams memory,uint32,string memory,bytes memory) external"
                              }
                            },
                            "id": 3226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "22981:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3228,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3193,
                                  "src": "23044:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 3229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "23044:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3230,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3193,
                                  "src": "23064:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 3231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "23064:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 3232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23081:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 3233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23084:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 3234,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3193,
                                  "src": "23087:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 3235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "23087:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23110:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23102:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3236,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23102:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23102:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3227,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "23036:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 3240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23036:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 3241,
                            "name": "transferParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3196,
                            "src": "23135:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata"
                            }
                          },
                          {
                            "id": 3242,
                            "name": "srcChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3198,
                            "src": "23171:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 3243,
                            "name": "srcAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3200,
                            "src": "23201:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "id": 3244,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3202,
                            "src": "23233:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                              "typeString": "struct IShared.TransferParams calldata"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 3222,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "22937:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "22937:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22937:321:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3221,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "22910:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22910:362:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3219,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "22859:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "22859:423:13"
              }
            ],
            "name": "executexSwapAndCall",
            "nameLocation": "22475:19:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3204,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22701:8:13"
            },
            "parameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3193,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "22521:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3257,
                  "src": "22504:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 3192,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3191,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "22504:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "22504:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3196,
                  "mutability": "mutable",
                  "name": "transferParams",
                  "nameLocation": "22562:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3257,
                  "src": "22538:38:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                    "typeString": "struct IShared.TransferParams"
                  },
                  "typeName": {
                    "id": 3195,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3194,
                      "name": "TransferParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6032,
                      "src": "22538:14:13"
                    },
                    "referencedDeclaration": 6032,
                    "src": "22538:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TransferParams_$6032_storage_ptr",
                      "typeString": "struct IShared.TransferParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3198,
                  "mutability": "mutable",
                  "name": "srcChain",
                  "nameLocation": "22593:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3257,
                  "src": "22586:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22586:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3200,
                  "mutability": "mutable",
                  "name": "srcAddress",
                  "nameLocation": "22627:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3257,
                  "src": "22611:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "22611:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3202,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "22662:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3257,
                  "src": "22647:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22647:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22494:181:13"
            },
            "returnParameters": {
              "id": 3248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23287:0:13"
            },
            "scope": 3547,
            "src": "22466:983:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3319,
              "nodeType": "Block",
              "src": "24213:682:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3270,
                        "name": "transferParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3261,
                        "src": "24227:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                          "typeString": "struct IShared.TransferParams calldata"
                        }
                      },
                      "id": 3271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6027,
                      "src": "24227:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3272,
                      "name": "_NATIVE_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3804,
                      "src": "24251:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24227:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3317,
                    "nodeType": "Block",
                    "src": "24543:346:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3297,
                                "name": "transferParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3261,
                                "src": "24599:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 3298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6029,
                              "src": "24599:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 3299,
                                "name": "transferParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3261,
                                "src": "24625:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 3300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6031,
                              "src": "24625:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3293,
                                    "name": "transferParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3261,
                                    "src": "24564:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                      "typeString": "struct IShared.TransferParams calldata"
                                    }
                                  },
                                  "id": 3294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6027,
                                  "src": "24564:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3292,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7969,
                                "src": "24557:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$7969_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24557:28:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8000,
                            "src": "24557:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7969_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24557:90:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3302,
                        "nodeType": "ExpressionStatement",
                        "src": "24557:90:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3308,
                              "name": "srcChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3263,
                              "src": "24726:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 3309,
                              "name": "srcAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3265,
                              "src": "24752:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 3310,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3267,
                              "src": "24780:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 3311,
                                "name": "transferParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3261,
                                "src": "24805:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 3312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6027,
                              "src": "24805:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3313,
                                "name": "transferParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3261,
                                "src": "24843:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 3314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6031,
                              "src": "24843:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3304,
                                    "name": "transferParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3261,
                                    "src": "24673:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                      "typeString": "struct IShared.TransferParams calldata"
                                    }
                                  },
                                  "id": 3305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recipient",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6029,
                                  "src": "24673:24:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 3303,
                                "name": "ICFReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5697,
                                "src": "24661:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICFReceiver_$5697_$",
                                  "typeString": "type(contract ICFReceiver)"
                                }
                              },
                              "id": 3306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24661:37:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICFReceiver_$5697",
                                "typeString": "contract ICFReceiver"
                              }
                            },
                            "id": 3307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cfReceive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5686,
                            "src": "24661:47:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint32,string memory,bytes memory,address,uint256) payable external"
                            }
                          },
                          "id": 3315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24661:217:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3316,
                        "nodeType": "ExpressionStatement",
                        "src": "24661:217:13"
                      }
                    ]
                  },
                  "id": 3318,
                  "nodeType": "IfStatement",
                  "src": "24223:666:13",
                  "trueBody": {
                    "id": 3291,
                    "nodeType": "Block",
                    "src": "24265:272:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3282,
                              "name": "srcChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3263,
                              "src": "24374:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 3283,
                              "name": "srcAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3265,
                              "src": "24400:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 3284,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3267,
                              "src": "24428:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 3285,
                                "name": "transferParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3261,
                                "src": "24453:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 3286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6027,
                              "src": "24453:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3287,
                                "name": "transferParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3261,
                                "src": "24491:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                  "typeString": "struct IShared.TransferParams calldata"
                                }
                              },
                              "id": 3288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6031,
                              "src": "24491:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3275,
                                      "name": "transferParams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3261,
                                      "src": "24291:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                        "typeString": "struct IShared.TransferParams calldata"
                                      }
                                    },
                                    "id": 3276,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "recipient",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6029,
                                    "src": "24291:24:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 3274,
                                  "name": "ICFReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5697,
                                  "src": "24279:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICFReceiver_$5697_$",
                                    "typeString": "type(contract ICFReceiver)"
                                  }
                                },
                                "id": 3277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24279:37:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICFReceiver_$5697",
                                  "typeString": "contract ICFReceiver"
                                }
                              },
                              "id": 3278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfReceive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5686,
                              "src": "24279:47:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (uint32,string memory,bytes memory,address,uint256) payable external"
                              }
                            },
                            "id": 3281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 3279,
                                  "name": "transferParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3261,
                                  "src": "24334:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                                    "typeString": "struct IShared.TransferParams calldata"
                                  }
                                },
                                "id": 3280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6031,
                                "src": "24334:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "24279:77:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$__$value",
                              "typeString": "function (uint32,string memory,bytes memory,address,uint256) payable external"
                            }
                          },
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24279:247:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3290,
                        "nodeType": "ExpressionStatement",
                        "src": "24279:247:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3258,
              "nodeType": "StructuredDocumentation",
              "src": "23455:568:13",
              "text": " @notice Logic for transferring the tokens and calling the recipient. It's on the receiver to\n         make sure the call doesn't revert, otherwise the tokens won't be transferred.\n         The _transfer function is not used because we want to be able to embed the native token\n         into the cfReceive call to avoid doing two external calls.\n         In case of revertion the tokens will remain in the Vault. Therefore, the destination\n         contract must ensure it doesn't revert e.g. using try-catch mechanisms."
            },
            "id": 3320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executexSwapAndCall",
            "nameLocation": "24037:20:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3261,
                  "mutability": "mutable",
                  "name": "transferParams",
                  "nameLocation": "24091:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "24067:38:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TransferParams_$6032_calldata_ptr",
                    "typeString": "struct IShared.TransferParams"
                  },
                  "typeName": {
                    "id": 3260,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3259,
                      "name": "TransferParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6032,
                      "src": "24067:14:13"
                    },
                    "referencedDeclaration": 6032,
                    "src": "24067:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TransferParams_$6032_storage_ptr",
                      "typeString": "struct IShared.TransferParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "srcChain",
                  "nameLocation": "24122:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "24115:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24115:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3265,
                  "mutability": "mutable",
                  "name": "srcAddress",
                  "nameLocation": "24156:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "24140:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24140:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3267,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "24191:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "24176:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3266,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24176:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24057:147:13"
            },
            "returnParameters": {
              "id": 3269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24213:0:13"
            },
            "scope": 3547,
            "src": "24028:867:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              6334
            ],
            "body": {
              "id": 3379,
              "nodeType": "Block",
              "src": "26804:85:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3374,
                        "name": "srcChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3328,
                        "src": "26852:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3375,
                        "name": "srcAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3330,
                        "src": "26862:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3376,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "26874:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3371,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3326,
                            "src": "26826:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3370,
                          "name": "ICFReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5697,
                          "src": "26814:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICFReceiver_$5697_$",
                            "typeString": "type(contract ICFReceiver)"
                          }
                        },
                        "id": 3372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26814:22:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICFReceiver_$5697",
                          "typeString": "contract ICFReceiver"
                        }
                      },
                      "id": 3373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cfReceivexCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5696,
                      "src": "26814:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint32,string memory,bytes memory) external"
                      }
                    },
                    "id": 3377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26814:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3378,
                  "nodeType": "ExpressionStatement",
                  "src": "26814:68:13"
                }
              ]
            },
            "documentation": {
              "id": 3321,
              "nodeType": "StructuredDocumentation",
              "src": "25237:871:13",
              "text": " @notice  Executes a cross-chain function call. The ICFReceiver interface is expected on\n          the receiver's address. A message is passed to the receiver along with other\n          parameters specifying the origin of the swap. This is used for cross-chain messaging\n          without any swap taking place on the Chainflip Protocol.\n @param sigData   The keccak256 hash over the msg (uint) (here that's normally\n                  a hash over the calldata to the function with an empty sigData) and\n                  sig over that hash (uint) from the aggregate key\n @param srcChain       The source chain where the call originated from.\n @param srcAddress     The address where the transfer originated from in the ingressParams.\n @param message        The message to be passed to the recipient."
            },
            "functionSelector": "674bdfe2",
            "id": 3380,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3335,
                  "name": "onlyNotSuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 625,
                  "src": "26337:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "26337:16:13"
              },
              {
                "arguments": [
                  {
                    "id": 3338,
                    "name": "recipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3326,
                    "src": "26369:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3337,
                  "name": "nzAddr",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3844,
                  "src": "26362:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "26362:17:13"
              },
              {
                "arguments": [
                  {
                    "id": 3341,
                    "name": "sigData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3324,
                    "src": "26418:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                      "typeString": "struct IShared.SigData calldata"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 3345,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "26510:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vault_$3547",
                                  "typeString": "contract Vault"
                                }
                              },
                              "id": 3346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executexCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3380,
                              "src": "26510:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SigData_$6025_memory_ptr_$_t_address_$_t_uint32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (struct IShared.SigData memory,address,uint32,string memory,bytes memory) external"
                              }
                            },
                            "id": 3347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "26510:26:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3349,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3324,
                                  "src": "26566:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 3350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyManAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6014,
                                "src": "26566:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3351,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3324,
                                  "src": "26586:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 3352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "chainID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6016,
                                "src": "26586:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 3353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26603:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 3354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26606:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "expression": {
                                  "id": 3355,
                                  "name": "sigData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3324,
                                  "src": "26609:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                                    "typeString": "struct IShared.SigData calldata"
                                  }
                                },
                                "id": 3356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6022,
                                "src": "26609:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26632:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "26624:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3357,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "26624:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26624:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3348,
                              "name": "SigData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6025,
                              "src": "26558:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_SigData_$6025_storage_ptr_$",
                                "typeString": "type(struct IShared.SigData storage pointer)"
                              }
                            },
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26558:77:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            }
                          },
                          {
                            "id": 3362,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3326,
                            "src": "26657:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3363,
                            "name": "srcChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3328,
                            "src": "26688:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 3364,
                            "name": "srcAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3330,
                            "src": "26718:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "id": 3365,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "26750:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_SigData_$6025_memory_ptr",
                              "typeString": "struct IShared.SigData memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 3343,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "26466:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "26466:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26466:309:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3342,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "26439:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26439:350:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3340,
                  "name": "consumesKeyNonce",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "26388:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "26388:411:13"
              }
            ],
            "name": "executexCall",
            "nameLocation": "26122:12:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3334,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26320:8:13"
            },
            "parameters": {
              "id": 3333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "mutability": "mutable",
                  "name": "sigData",
                  "nameLocation": "26161:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3380,
                  "src": "26144:24:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SigData_$6025_calldata_ptr",
                    "typeString": "struct IShared.SigData"
                  },
                  "typeName": {
                    "id": 3323,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3322,
                      "name": "SigData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6025,
                      "src": "26144:7:13"
                    },
                    "referencedDeclaration": 6025,
                    "src": "26144:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SigData_$6025_storage_ptr",
                      "typeString": "struct IShared.SigData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "26186:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3380,
                  "src": "26178:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26178:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "srcChain",
                  "nameLocation": "26212:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3380,
                  "src": "26205:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3327,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26205:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3330,
                  "mutability": "mutable",
                  "name": "srcAddress",
                  "nameLocation": "26246:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3380,
                  "src": "26230:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26230:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3332,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "26281:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3380,
                  "src": "26266:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26266:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26134:160:13"
            },
            "returnParameters": {
              "id": 3369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26804:0:13"
            },
            "scope": 3547,
            "src": "26113:776:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6340
            ],
            "body": {
              "id": 3455,
              "nodeType": "Block",
              "src": "27852:548:13",
              "statements": [
                {
                  "assignments": [
                    3397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3397,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "27977:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3455,
                      "src": "27961:25:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 3396,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27961:15:13",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3405,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3400,
                              "name": "getKeyManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "27997:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IKeyManager_$6003_$",
                                "typeString": "function () view returns (contract IKeyManager)"
                              }
                            },
                            "id": 3401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27997:15:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IKeyManager_$6003",
                              "typeString": "contract IKeyManager"
                            }
                          },
                          "id": 3402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getGovernanceKey",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5968,
                          "src": "27997:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 3403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27997:34:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "27989:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 3398,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27989:8:13",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27989:43:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27961:71:13"
                },
                {
                  "body": {
                    "id": 3453,
                    "nodeType": "Block",
                    "src": "28135:259:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3417,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3384,
                              "src": "28153:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 3419,
                            "indexExpression": {
                              "id": 3418,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3407,
                              "src": "28160:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28153:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3420,
                            "name": "_NATIVE_ADDR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3804,
                            "src": "28166:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "28153:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3451,
                          "nodeType": "Block",
                          "src": "28276:108:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3434,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3384,
                                      "src": "28304:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 3436,
                                    "indexExpression": {
                                      "id": 3435,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3407,
                                      "src": "28311:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28304:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3437,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3397,
                                    "src": "28315:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 3446,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "28362:4:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vault_$3547",
                                              "typeString": "contract Vault"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Vault_$3547",
                                              "typeString": "contract Vault"
                                            }
                                          ],
                                          "id": 3445,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "28354:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3444,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "28354:7:13",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3447,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "28354:13:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 3439,
                                              "name": "tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3384,
                                              "src": "28333:6:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                "typeString": "address[] calldata"
                                              }
                                            },
                                            "id": 3441,
                                            "indexExpression": {
                                              "id": 3440,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3407,
                                              "src": "28340:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "28333:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 3438,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7969,
                                          "src": "28326:6:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$7969_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 3442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "28326:17:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$7969",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 3443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7908,
                                      "src": "28326:27:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 3448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "28326:42:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3433,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2843,
                                  "src": "28294:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address payable,uint256)"
                                  }
                                },
                                "id": 3449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28294:75:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3450,
                              "nodeType": "ExpressionStatement",
                              "src": "28294:75:13"
                            }
                          ]
                        },
                        "id": 3452,
                        "nodeType": "IfStatement",
                        "src": "28149:235:13",
                        "trueBody": {
                          "id": 3432,
                          "nodeType": "Block",
                          "src": "28180:90:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3423,
                                    "name": "_NATIVE_ADDR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3804,
                                    "src": "28208:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3424,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3397,
                                    "src": "28222:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3427,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "28241:4:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Vault_$3547",
                                            "typeString": "contract Vault"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Vault_$3547",
                                            "typeString": "contract Vault"
                                          }
                                        ],
                                        "id": 3426,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "28233:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3425,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "28233:7:13",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "28233:13:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3429,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "28233:21:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3422,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2843,
                                  "src": "28198:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address payable,uint256)"
                                  }
                                },
                                "id": 3430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28198:57:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3431,
                              "nodeType": "ExpressionStatement",
                              "src": "28198:57:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3410,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3407,
                      "src": "28111:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3411,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "28115:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "28115:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28111:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3454,
                  "initializationExpression": {
                    "assignments": [
                      3407
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3407,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28104:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3454,
                        "src": "28096:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28096:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3409,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28108:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28096:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28130:3:13",
                      "subExpression": {
                        "id": 3414,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3407,
                        "src": "28130:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3416,
                    "nodeType": "ExpressionStatement",
                    "src": "28130:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "28091:303:13"
                }
              ]
            },
            "documentation": {
              "id": 3381,
              "nodeType": "StructuredDocumentation",
              "src": "27231:427:13",
              "text": " @notice Withdraw all funds to governance address in case of emergency. This withdrawal needs\n         to be approved by the Community and it can only be executed if no nonce from the\n         current AggKey had been consumed in _AGG_KEY_TIMEOUT time. It is a last resort and\n         can be used to rectify an emergency.\n @param tokens    The addresses of the tokens to be transferred"
            },
            "functionSelector": "7484606f",
            "id": 3456,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3387,
                  "name": "onlyGovernor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 606,
                  "src": "27753:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "27753:12:13"
              },
              {
                "id": 3390,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3389,
                  "name": "onlyCommunityGuardDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 581,
                  "src": "27774:26:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "27774:26:13"
              },
              {
                "id": 3392,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3391,
                  "name": "onlySuspended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 615,
                  "src": "27809:13:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "27809:13:13"
              },
              {
                "id": 3394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3393,
                  "name": "timeoutEmergency",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3520,
                  "src": "27831:16:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "27831:16:13"
              }
            ],
            "name": "govWithdraw",
            "nameLocation": "27672:11:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3386,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27736:8:13"
            },
            "parameters": {
              "id": 3385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3384,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "27703:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3456,
                  "src": "27684:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3382,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "27684:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3383,
                    "nodeType": "ArrayTypeName",
                    "src": "27684:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27683:27:13"
            },
            "returnParameters": {
              "id": 3395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27852:0:13"
            },
            "scope": 3547,
            "src": "27663:737:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6343
            ],
            "body": {
              "id": 3473,
              "nodeType": "Block",
              "src": "28598:72:13",
              "statements": [
                {
                  "expression": {
                    "id": 3467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3465,
                      "name": "_xCallsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2549,
                      "src": "28608:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28625:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "28608:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3468,
                  "nodeType": "ExpressionStatement",
                  "src": "28608:21:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 3470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28658:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3469,
                      "name": "XCallsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "28644:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28644:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3472,
                  "nodeType": "EmitStatement",
                  "src": "28639:24:13"
                }
              ]
            },
            "documentation": {
              "id": 3457,
              "nodeType": "StructuredDocumentation",
              "src": "28406:117:13",
              "text": " @notice  Enable swapNative and swapToken functionality by governance. Features disabled by default"
            },
            "functionSelector": "0ebf1fe9",
            "id": 3474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3461,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3460,
                  "name": "onlyGovernor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 606,
                  "src": "28570:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "28570:12:13"
              },
              {
                "id": 3463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3462,
                  "name": "xCallsDisabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3541,
                  "src": "28583:14:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "28583:14:13"
              }
            ],
            "name": "enablexCalls",
            "nameLocation": "28537:12:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3459,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28561:8:13"
            },
            "parameters": {
              "id": 3458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28549:2:13"
            },
            "returnParameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28598:0:13"
            },
            "scope": 3547,
            "src": "28528:142:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6346
            ],
            "body": {
              "id": 3491,
              "nodeType": "Block",
              "src": "28870:74:13",
              "statements": [
                {
                  "expression": {
                    "id": 3485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3483,
                      "name": "_xCallsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2549,
                      "src": "28880:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28897:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "28880:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3486,
                  "nodeType": "ExpressionStatement",
                  "src": "28880:22:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28931:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3487,
                      "name": "XCallsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "28917:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28917:20:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3490,
                  "nodeType": "EmitStatement",
                  "src": "28912:25:13"
                }
              ]
            },
            "documentation": {
              "id": 3475,
              "nodeType": "StructuredDocumentation",
              "src": "28676:119:13",
              "text": " @notice  Disable swapNative and swapToken functionality by governance. Features disabled by default."
            },
            "functionSelector": "f545fab9",
            "id": 3492,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3479,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3478,
                  "name": "onlyGovernor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 606,
                  "src": "28843:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "28843:12:13"
              },
              {
                "id": 3481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3480,
                  "name": "xCallsEnabled",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3530,
                  "src": "28856:13:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "28856:13:13"
              }
            ],
            "name": "disablexCalls",
            "nameLocation": "28809:13:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3477,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28834:8:13"
            },
            "parameters": {
              "id": 3476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28822:2:13"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28870:0:13"
            },
            "scope": 3547,
            "src": "28800:144:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6351
            ],
            "body": {
              "id": 3501,
              "nodeType": "Block",
              "src": "29443:38:13",
              "statements": [
                {
                  "expression": {
                    "id": 3499,
                    "name": "_xCallsEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2549,
                    "src": "29460:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3498,
                  "id": 3500,
                  "nodeType": "Return",
                  "src": "29453:21:13"
                }
              ]
            },
            "documentation": {
              "id": 3493,
              "nodeType": "StructuredDocumentation",
              "src": "29286:86:13",
              "text": " @notice  Get xCallsEnabled\n @return  The xCallsEnableds state"
            },
            "functionSelector": "561dc4c8",
            "id": 3502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getxCallsEnabled",
            "nameLocation": "29386:16:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3495,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29419:8:13"
            },
            "parameters": {
              "id": 3494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29402:2:13"
            },
            "returnParameters": {
              "id": 3498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3502,
                  "src": "29437:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "29437:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29436:6:13"
            },
            "scope": 3547,
            "src": "29377:104:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "29937:182:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3506,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "29968:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "29968:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3508,
                                  "name": "getKeyManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96,
                                  "src": "29986:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IKeyManager_$6003_$",
                                    "typeString": "function () view returns (contract IKeyManager)"
                                  }
                                },
                                "id": 3509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "29986:15:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IKeyManager_$6003",
                                  "typeString": "contract IKeyManager"
                                }
                              },
                              "id": 3510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getLastValidateTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5985,
                              "src": "29986:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29986:37:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29968:55:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3513,
                          "name": "_AGG_KEY_EMERGENCY_TIMEOUT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "30027:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29968:85:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a206e6f7420656e6f7567682074696d65",
                        "id": 3515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30067:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f009aba4e4522c7d4e3dd79268712214d49c5a8cc3c57638cf220194152564fe",
                          "typeString": "literal_string \"Vault: not enough time\""
                        },
                        "value": "Vault: not enough time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f009aba4e4522c7d4e3dd79268712214d49c5a8cc3c57638cf220194152564fe",
                          "typeString": "literal_string \"Vault: not enough time\""
                        }
                      ],
                      "id": 3505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29947:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29947:154:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3517,
                  "nodeType": "ExpressionStatement",
                  "src": "29947:154:13"
                },
                {
                  "id": 3518,
                  "nodeType": "PlaceholderStatement",
                  "src": "30111:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3503,
              "nodeType": "StructuredDocumentation",
              "src": "29823:81:13",
              "text": "@dev    Check that no nonce has been consumed in the last 14 days - emergency"
            },
            "id": 3520,
            "name": "timeoutEmergency",
            "nameLocation": "29918:16:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29934:2:13"
            },
            "src": "29909:210:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3529,
              "nodeType": "Block",
              "src": "30196:80:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3524,
                        "name": "_xCallsEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2549,
                        "src": "30214:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a207843616c6c73206e6f7420656e61626c6564",
                        "id": 3525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30230:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85ebaec7c6a720283c732331df028bf5d26abb6f75b7be676e4cc1f1dc69698e",
                          "typeString": "literal_string \"Vault: xCalls not enabled\""
                        },
                        "value": "Vault: xCalls not enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85ebaec7c6a720283c732331df028bf5d26abb6f75b7be676e4cc1f1dc69698e",
                          "typeString": "literal_string \"Vault: xCalls not enabled\""
                        }
                      ],
                      "id": 3523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30206:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30206:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3527,
                  "nodeType": "ExpressionStatement",
                  "src": "30206:52:13"
                },
                {
                  "id": 3528,
                  "nodeType": "PlaceholderStatement",
                  "src": "30268:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3521,
              "nodeType": "StructuredDocumentation",
              "src": "30125:41:13",
              "text": "@dev    Check that xCalls are enabled"
            },
            "id": 3530,
            "name": "xCallsEnabled",
            "nameLocation": "30180:13:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30193:2:13"
            },
            "src": "30171:105:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3540,
              "nodeType": "Block",
              "src": "30355:77:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "30373:15:13",
                        "subExpression": {
                          "id": 3534,
                          "name": "_xCallsEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2549,
                          "src": "30374:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a207843616c6c7320656e61626c6564",
                        "id": 3536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30390:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0786bb0d6b3331fbb137b1c50e7ae406bbfca2a01b2e8f4031f111bceb67bac6",
                          "typeString": "literal_string \"Vault: xCalls enabled\""
                        },
                        "value": "Vault: xCalls enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0786bb0d6b3331fbb137b1c50e7ae406bbfca2a01b2e8f4031f111bceb67bac6",
                          "typeString": "literal_string \"Vault: xCalls enabled\""
                        }
                      ],
                      "id": 3533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30365:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30365:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3538,
                  "nodeType": "ExpressionStatement",
                  "src": "30365:49:13"
                },
                {
                  "id": 3539,
                  "nodeType": "PlaceholderStatement",
                  "src": "30424:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3531,
              "nodeType": "StructuredDocumentation",
              "src": "30282:42:13",
              "text": "@dev    Check that xCalls are disabled"
            },
            "id": 3541,
            "name": "xCallsDisabled",
            "nameLocation": "30338:14:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30352:2:13"
            },
            "src": "30329:103:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3545,
              "nodeType": "Block",
              "src": "30867:2:13",
              "statements": []
            },
            "documentation": {
              "id": 3542,
              "nodeType": "StructuredDocumentation",
              "src": "30774:61:13",
              "text": "@dev For receiving native when Deposit.fetch() is called."
            },
            "id": 3546,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30847:2:13"
            },
            "returnParameters": {
              "id": 3544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30867:0:13"
            },
            "scope": 3547,
            "src": "30840:29:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3548,
        "src": "675:30196:13",
        "usedErrors": []
      }
    ],
    "src": "0:30872:13"
  },
  "bytecode": "",
  "bytecodeSha1": "7bb8e203cde71b894fcaf493ee74ebbcc403411b",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 1600
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "13": {
        "AggKeyNonceConsumer.getKeyManager": {
          "60": [
            29968,
            30053,
            true
          ]
        },
        "Vault._executexSwapAndCall": {
          "65": [
            24227,
            24263,
            false
          ]
        },
        "Vault._transfer": {
          "63": [
            9543,
            9573,
            false
          ],
          "64": [
            9904,
            9911,
            false
          ]
        },
        "Vault.disablexCalls": {
          "62": [
            30214,
            30228,
            true
          ]
        },
        "Vault.govWithdraw": {
          "61": [
            28153,
            28178,
            false
          ]
        }
      },
      "16": {},
      "2": {},
      "24": {},
      "25": {},
      "26": {},
      "28": {},
      "29": {},
      "3": {},
      "30": {},
      "32": {},
      "4": {
        "Address.functionCallWithValue": {
          "66": [
            4759,
            4789,
            true
          ]
        }
      },
      "6": {},
      "7": {},
      "9": {
        "GovernanceCommunityGuarded.enableCommunityGuard": {
          "68": [
            5204,
            5227,
            true
          ]
        },
        "Vault.govWithdraw": {
          "67": [
            5865,
            5875,
            true
          ]
        }
      }
    },
    "statements": {
      "13": {
        "Vault._deployAndFetchBatch": {
          "41": [
            11778,
            11874
          ],
          "42": [
            11916,
            11919
          ]
        },
        "Vault._executexSwapAndCall": {
          "49": [
            24279,
            24526
          ],
          "50": [
            24557,
            24647
          ],
          "51": [
            24661,
            24878
          ]
        },
        "Vault._fetchBatch": {
          "43": [
            13332,
            13419
          ],
          "44": [
            13461,
            13464
          ]
        },
        "Vault._getCommunityKey": {
          "40": [
            3299,
            3339
          ]
        },
        "Vault._getGovernor": {
          "38": [
            2888,
            2929
          ]
        },
        "Vault._transfer": {
          "47": [
            9931,
            9969
          ],
          "48": [
            10014,
            10059
          ]
        },
        "Vault._transferBatch": {
          "45": [
            8709,
            8813
          ],
          "46": [
            8855,
            8858
          ]
        },
        "Vault.allBatch": {
          "18": [
            5761,
            5805
          ],
          "19": [
            5864,
            5893
          ],
          "20": [
            5934,
            5969
          ]
        },
        "Vault.deployAndFetchBatch": {
          "17": [
            11480,
            11524
          ]
        },
        "Vault.disablexCalls": {
          "36": [
            28880,
            28902
          ],
          "37": [
            28912,
            28937
          ]
        },
        "Vault.enablexCalls": {
          "6": [
            28608,
            28629
          ],
          "7": [
            28639,
            28663
          ]
        },
        "Vault.executexCall": {
          "21": [
            26814,
            26882
          ]
        },
        "Vault.executexSwapAndCall": {
          "25": [
            23375,
            23442
          ]
        },
        "Vault.fetchBatch": {
          "26": [
            12872,
            12901
          ]
        },
        "Vault.getxCallsEnabled": {
          "2": [
            29453,
            29474
          ]
        },
        "Vault.govWithdraw": {
          "22": [
            28198,
            28255
          ],
          "23": [
            28294,
            28369
          ],
          "24": [
            28130,
            28133
          ]
        },
        "Vault.transfer": {
          "32": [
            7312,
            7392
          ]
        },
        "Vault.transferBatch": {
          "33": [
            8313,
            8348
          ]
        },
        "Vault.xCallNative": {
          "29": [
            18473,
            18584
          ]
        },
        "Vault.xCallToken": {
          "9": [
            20877,
            20937
          ],
          "10": [
            20947,
            21191
          ]
        },
        "Vault.xSwapNative": {
          "8": [
            14771,
            14843
          ]
        },
        "Vault.xSwapToken": {
          "15": [
            15986,
            16046
          ],
          "16": [
            16056,
            16143
          ]
        }
      },
      "16": {},
      "2": {},
      "24": {},
      "25": {},
      "26": {},
      "28": {},
      "29": {},
      "3": {
        "SafeERC20._callOptionalReturn": {
          "52": [
            3671,
            3756
          ]
        },
        "SafeERC20.safeTransfer": {
          "53": [
            716,
            802
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "39": [
            915,
            1011
          ]
        }
      },
      "30": {},
      "32": {},
      "4": {
        "Address._verifyCallResult": {
          "58": [
            7249,
            7266
          ],
          "59": [
            7757,
            7777
          ]
        },
        "Address.functionCall": {
          "54": [
            3700,
            3759
          ]
        },
        "Address.functionCallWithValue": {
          "55": [
            4751,
            4832
          ],
          "56": [
            4842,
            4902
          ],
          "57": [
            5057,
            5116
          ]
        }
      },
      "6": {
        "AggKeyNonceConsumer.getKeyManager": {
          "1": [
            2653,
            2671
          ]
        },
        "AggKeyNonceConsumer.updateKeyManager": {
          "12": [
            2006,
            2030
          ],
          "13": [
            2040,
            2083
          ]
        }
      },
      "7": {},
      "9": {
        "GovernanceCommunityGuarded.disableCommunityGuard": {
          "30": [
            2799,
            2829
          ],
          "31": [
            2839,
            2872
          ]
        },
        "GovernanceCommunityGuarded.enableCommunityGuard": {
          "27": [
            2551,
            2582
          ],
          "28": [
            2592,
            2626
          ]
        },
        "GovernanceCommunityGuarded.getCommunityGuardDisabled": {
          "3": [
            4101,
            4131
          ]
        },
        "GovernanceCommunityGuarded.getCommunityKey": {
          "11": [
            3874,
            3899
          ]
        },
        "GovernanceCommunityGuarded.getGovernor": {
          "14": [
            4503,
            4524
          ]
        },
        "GovernanceCommunityGuarded.getSuspendedState": {
          "0": [
            4309,
            4326
          ]
        },
        "GovernanceCommunityGuarded.resume": {
          "4": [
            3311,
            3329
          ],
          "5": [
            3339,
            3360
          ]
        },
        "GovernanceCommunityGuarded.suspend": {
          "34": [
            3116,
            3133
          ],
          "35": [
            3143,
            3163
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Address",
    "AggKeyNonceConsumer",
    "Deposit",
    "GovernanceCommunityGuarded",
    "IAggKeyNonceConsumer",
    "ICFReceiver",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC20",
    "IERC20Lite",
    "IGovernanceCommunityGuarded",
    "IKeyManager",
    "IShared",
    "IVault",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/SafeERC20",
    "Shared"
  ],
  "deployedBytecode": "608060405260043610620001bb5760003560e01c806363e7334b11620000f35780638d95e5591162000095578063b03b6a57116200006c578063b03b6a571462000481578063e4d2f59b14620004a6578063e6400bbe14620004cb578063f545fab914620004e357600080fd5b80638d95e559146200043a57806391495fbc1462000452578063aae9ba43146200046957600080fd5b8063765849b911620000ca578063765849b914620003cf578063774d680114620003f057806379c83ad7146200041557600080fd5b806363e7334b1462000360578063674bdfe214620003855780637484606f14620003aa57600080fd5b8063420e6759116200015d578063561dc4c81162000134578063561dc4c814620002f55780635942b3bc146200031657806359dc4a09146200033b57600080fd5b8063420e675914620002985780634b0cfc0014620002bd5780634fc07d7514620002dd57600080fd5b806329b74201116200019257806329b742011462000211578063386e8fe514620002425780633f87b30f146200026757600080fd5b8063046f7da214620001c85780630ebf1fe914620001e257806327610a6014620001fa57600080fd5b36620001c357005b600080fd5b348015620001d557600080fd5b50620001e0620004fb565b005b348015620001ef57600080fd5b50620001e062000624565b620001e06200020b366004620034b9565b6200074c565b3480156200021e57600080fd5b50600054600160a81b900460ff165b60405190151581526020015b60405180910390f35b3480156200024f57600080fd5b50620001e06200026136600462003601565b6200083f565b3480156200027457600080fd5b506200027f620009b4565b6040516001600160a01b03909116815260200162000239565b348015620002a557600080fd5b50620001e0620002b736600462003394565b620009c5565b348015620002ca57600080fd5b506000546001600160a01b03166200027f565b348015620002ea57600080fd5b506200027f62000bca565b3480156200030257600080fd5b50600054600160b01b900460ff166200022d565b3480156200032357600080fd5b50620001e062000335366004620036e4565b62000bd6565b3480156200034857600080fd5b50620001e06200035a36600462003246565b62000ce4565b3480156200036d57600080fd5b50620001e06200037f366004620032a0565b62000e88565b3480156200039257600080fd5b50620001e0620003a436600462003191565b62001050565b348015620003b757600080fd5b50620001e0620003c9366004620030f3565b620012d1565b348015620003dc57600080fd5b50600054600160a01b900460ff166200022d565b348015620003fd57600080fd5b50620001e06200040f3660046200340c565b62001701565b3480156200042257600080fd5b50620001e06200043436600462003246565b620019dd565b3480156200044757600080fd5b50620001e062001b7a565b620001e06200046336600462003536565b62001ca6565b3480156200047657600080fd5b50620001e062001e00565b3480156200048e57600080fd5b50620001e0620004a0366004620033d1565b62001f4d565b348015620004b357600080fd5b50620001e0620004c536600462003347565b6200223c565b348015620004d857600080fd5b50620001e0620023d9565b348015620004f057600080fd5b50620001e0620024f9565b6200050562002619565b6001600160a01b0316336001600160a01b0316146200056b5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e616e63653a206e6f7420676f7665726e6f72000000000000000060448201526064015b60405180910390fd5b600054600160a81b900460ff16620005c65760405162461bcd60e51b815260206004820152601960248201527f476f7665726e616e63653a206e6f742073757370656e64656400000000000000604482015260640162000562565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1681556040519081527f58e6c20b68c19f4d8dbc6206267af40b288342464b433205bb41e5b65c4016da906020015b60405180910390a1565b6200062e62002619565b6001600160a01b0316336001600160a01b031614620006905760405162461bcd60e51b815260206004820152601860248201527f476f7665726e616e63653a206e6f7420676f7665726e6f720000000000000000604482015260640162000562565b600054600160b01b900460ff1615620006ec5760405162461bcd60e51b815260206004820152601560248201527f5661756c743a207843616c6c7320656e61626c65640000000000000000000000604482015260640162000562565b600080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b179055604051600181527f55f83e6fce30d9fd43a6ca0101bc68cf99b4944a9d9eb39a961533c04bfa3966906020016200061a565b600054600160a81b900460ff1615620007a05760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b3480620007f05760405162461bcd60e51b815260206004820152601b60248201527f5368617265643a2075696e7420696e70757420697320656d7074790000000000604482015260640162000562565b336001600160a01b03167f4de49a59404baf7c2b0d3db254297af01dc258cbc5d78ca37b8cf5a98cfdc2008585853460405162000831949392919062003ef6565b60405180910390a250505050565b600054600160a81b900460ff1615620008935760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b600054600160b01b900460ff16620008ee5760405162461bcd60e51b815260206004820152601960248201527f5661756c743a207843616c6c73206e6f7420656e61626c656400000000000000604482015260640162000562565b81806200093e5760405162461bcd60e51b815260206004820152601b60248201527f5368617265643a2075696e7420696e70757420697320656d7074790000000000604482015260640162000562565b620009556001600160a01b0385163330866200269a565b336001600160a01b03167f98d5c453eb58c7ce3c927a1b55ffbfda38df699446da57678d54839d8b21e6678b8b8b88888d8d8d8b604051620009a09998979695949392919062003e71565b60405180910390a250505050505050505050565b6000620009c062002720565b905090565b806001600160a01b03811662000a1e5760405162461bcd60e51b815260206004820152601e60248201527f5368617265643a206164647265737320696e70757420697320656d7074790000604482015260640162000562565b6040805160c0810190915283907f420e675900000000000000000000000000000000000000000000000000000000908062000a5d6020850185620030b3565b6001600160a01b031681526020018660200135815260200160008152602001600081526020018660800135815260200160006001600160a01b03168152508460405160240162000aaf92919062003c20565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217825251902062000af66000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b815260040162000b259291906200393a565b600060405180830381600087803b15801562000b4057600080fd5b505af115801562000b55573d6000803e3d6000fd5b5050600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388169081179091556040519081527fd18040e514983d65f088430e69091aea9bf07feaed3696a3faac1ccc34b5e3bc9250602001905060405180910390a15050505050565b6000620009c062002619565b600054600160a81b900460ff161562000c2a5760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b808062000c7a5760405162461bcd60e51b815260206004820152601b60248201527f5368617265643a2075696e7420696e70757420697320656d7074790000000000604482015260640162000562565b62000c916001600160a01b0384163330856200269a565b336001600160a01b03167f1e7b21f751c6d9fa3f98a51b607c124a07df7c3c54ee98d0a37854aaa4f864d0878787878760405162000cd495949392919062003e1e565b60405180910390a2505050505050565b600054600160a81b900460ff161562000d385760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b6040805160c0810190915283907f59dc4a0900000000000000000000000000000000000000000000000000000000908062000d776020850185620030b3565b6001600160a01b031681526020018660200135815260200160008152602001600081526020018660800135815260200160006001600160a01b0316815250848460405160240162000dcb9392919062003a4f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217825251902062000e126000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b815260040162000e419291906200393a565b600060405180830381600087803b15801562000e5c57600080fd5b505af115801562000e71573d6000803e3d6000fd5b5050505062000e81848462002766565b5050505050565b600054600160a81b900460ff161562000edc5760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b6040805160c0810190915287907f63e7334b00000000000000000000000000000000000000000000000000000000908062000f1b6020850185620030b3565b6001600160a01b031681526020018a60200135815260200160008152602001600081526020018a60800135815260200160006001600160a01b031681525088888888888860405160240162000f77979695949392919062003abe565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217825251902062000fbe6000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b815260040162000fed9291906200393a565b600060405180830381600087803b1580156200100857600080fd5b505af11580156200101d573d6000803e3d6000fd5b505050506200102d888862002766565b6200103986866200280b565b620010458484620028e9565b505050505050505050565b600054600160a81b900460ff1615620010a45760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b856001600160a01b038116620010fd5760405162461bcd60e51b815260206004820152601e60248201527f5368617265643a206164647265737320696e70757420697320656d7074790000604482015260640162000562565b6040805160c0810190915288907f674bdfe20000000000000000000000000000000000000000000000000000000090806200113c6020850185620030b3565b6001600160a01b031681526020018b60200135815260200160008152602001600081526020018b60800135815260200160006001600160a01b0316815250898989898989604051602401620011989796959493929190620039a6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092178252519020620011df6000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b81526004016200120e9291906200393a565b600060405180830381600087803b1580156200122957600080fd5b505af11580156200123e573d6000803e3d6000fd5b50506040517f74d6d3330000000000000000000000000000000000000000000000000000000081526001600160a01b038c1692506374d6d333915062001291908b908b908b908b908b9060040162003d84565b600060405180830381600087803b158015620012ac57600080fd5b505af1158015620012c1573d6000803e3d6000fd5b5050505050505050505050505050565b620012db62002619565b6001600160a01b0316336001600160a01b0316146200133d5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e616e63653a206e6f7420676f7665726e6f720000000000000000604482015260640162000562565b600054600160a01b900460ff16620013a45760405162461bcd60e51b815260206004820152602360248201527f476f7665726e616e63653a20636f6d6d756e69747920677561726420656e61626044820152621b195960ea1b606482015260840162000562565b600054600160a81b900460ff16620013ff5760405162461bcd60e51b815260206004820152601960248201527f476f7665726e616e63653a206e6f742073757370656e64656400000000000000604482015260640162000562565b62127500620014166000546001600160a01b031690565b6001600160a01b03166353f0bb616040518163ffffffff1660e01b815260040160206040518083038186803b1580156200144f57600080fd5b505afa15801562001464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200148a91906200349f565b62001496904262003fb4565b1015620014e65760405162461bcd60e51b815260206004820152601660248201527f5661756c743a206e6f7420656e6f7567682074696d6500000000000000000000604482015260640162000562565b600080546001600160a01b03166001600160a01b031663cd1b4d206040518163ffffffff1660e01b815260040160206040518083038186803b1580156200152c57600080fd5b505afa15801562001541573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015679190620030d3565b905060005b82811015620016fb5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8484838181106200159f576200159f62004031565b9050602002016020810190620015b69190620030b3565b6001600160a01b03161415620015ed57620015e773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee834762002984565b620016e6565b620016e684848381811062001606576200160662004031565b90506020020160208101906200161d9190620030b3565b8386868581811062001633576200163362004031565b90506020020160208101906200164a9190620030b3565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015620016a557600080fd5b505afa158015620016ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016e091906200349f565b62002984565b80620016f28162003ffd565b9150506200156c565b50505050565b600054600160a81b900460ff1615620017555760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b620017646020870187620030b3565b6001600160a01b038116620017bc5760405162461bcd60e51b815260206004820152601e60248201527f5368617265643a206164647265737320696e70757420697320656d7074790000604482015260640162000562565b620017ce6040880160208901620030b3565b6001600160a01b038116620018265760405162461bcd60e51b815260206004820152601e60248201527f5368617265643a206164647265737320696e70757420697320656d7074790000604482015260640162000562565b6040880135806200187a5760405162461bcd60e51b815260206004820152601b60248201527f5368617265643a2075696e7420696e70757420697320656d7074790000000000604482015260640162000562565b6040805160c081019091528a907f774d6801000000000000000000000000000000000000000000000000000000009080620018b96020850185620030b3565b6001600160a01b031681526020018d60200135815260200160008152602001600081526020018d60800135815260200160006001600160a01b03168152508b8b8b8b8b8b60405160240162001915979695949392919062003ce8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921782525190206200195c6000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b81526004016200198b9291906200393a565b600060405180830381600087803b158015620019a657600080fd5b505af1158015620019bb573d6000803e3d6000fd5b50505050620019cf8b8b8b8b8b8b62002a63565b505050505050505050505050565b600054600160a81b900460ff161562001a315760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b6040805160c0810190915283907f79c83ad700000000000000000000000000000000000000000000000000000000908062001a706020850185620030b3565b6001600160a01b031681526020018660200135815260200160008152602001600081526020018660800135815260200160006001600160a01b0316815250848460405160240162001ac49392919062003b54565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217825251902062001b0b6000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b815260040162001b3a9291906200393a565b600060405180830381600087803b15801562001b5557600080fd5b505af115801562001b6a573d6000803e3d6000fd5b5050505062000e8184846200280b565b62001b8462002720565b6001600160a01b0316336001600160a01b03161462001be65760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e616e63653a206e6f7420436f6d6d756e697479204b6579000000604482015260640162000562565b600054600160a01b900460ff1662001c4d5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e616e63653a20636f6d6d756e69747920677561726420656e61626044820152621b195960ea1b606482015260840162000562565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1681556040519081527f057c4cb09f128960151f04372028154acda40272f16360154961672989b59bad906020016200061a565b600054600160a81b900460ff161562001cfa5760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b600054600160b01b900460ff1662001d555760405162461bcd60e51b815260206004820152601960248201527f5661756c743a207843616c6c73206e6f7420656e61626c656400000000000000604482015260640162000562565b348062001da55760405162461bcd60e51b815260206004820152601b60248201527f5368617265643a2075696e7420696e70757420697320656d7074790000000000604482015260640162000562565b336001600160a01b03167f7e8c5bda8a909414b3b3d5430e67e10a1965826d1dbefa6bd2ec6915bcdc8d7d898989348a8a8a8a60405162001dee98979695949392919062003f3d565b60405180910390a25050505050505050565b62001e0a62002720565b6001600160a01b0316336001600160a01b03161462001e6c5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e616e63653a206e6f7420436f6d6d756e697479204b6579000000604482015260640162000562565b600054600160a01b900460ff161562001eed5760405162461bcd60e51b8152602060048201526024808201527f476f7665726e616e63653a20636f6d6d756e697479206775617264206469736160448201527f626c656400000000000000000000000000000000000000000000000000000000606482015260840162000562565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055604051600181527f057c4cb09f128960151f04372028154acda40272f16360154961672989b59bad906020016200061a565b600054600160a81b900460ff161562001fa15760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b62001fb06020820182620030b3565b6001600160a01b038116620020085760405162461bcd60e51b815260206004820152601e60248201527f5368617265643a206164647265737320696e70757420697320656d7074790000604482015260640162000562565b6200201a6040830160208401620030b3565b6001600160a01b038116620020725760405162461bcd60e51b815260206004820152601e60248201527f5368617265643a206164647265737320696e70757420697320656d7074790000604482015260640162000562565b604083013580620020c65760405162461bcd60e51b815260206004820152601b60248201527f5368617265643a2075696e7420696e70757420697320656d7074790000000000604482015260640162000562565b6040805160c0810190915285907fb03b6a57000000000000000000000000000000000000000000000000000000009080620021056020850185620030b3565b6001600160a01b031681526020018860200135815260200160008152602001600081526020018860800135815260200160006001600160a01b0316815250866040516024016200215792919062003c87565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921782525190206200219e6000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b8152600401620021cd9291906200393a565b600060405180830381600087803b158015620021e857600080fd5b505af1158015620021fd573d6000803e3d6000fd5b50620022339250620022169150506020880188620030b3565b620022286040890160208a01620030b3565b886040013562002984565b50505050505050565b600054600160a81b900460ff1615620022905760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b6040805160c0810190915283907fe4d2f59b000000000000000000000000000000000000000000000000000000009080620022cf6020850185620030b3565b6001600160a01b031681526020018660200135815260200160008152602001600081526020018660800135815260200160006001600160a01b03168152508484604051602401620023239392919062003bba565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921782525190206200236a6000546001600160a01b031690565b6001600160a01b031663a58a3f1d83836040518363ffffffff1660e01b8152600401620023999291906200393a565b600060405180830381600087803b158015620023b457600080fd5b505af1158015620023c9573d6000803e3d6000fd5b5050505062000e818484620028e9565b620023e362002619565b6001600160a01b0316336001600160a01b031614620024455760405162461bcd60e51b815260206004820152601860248201527f476f7665726e616e63653a206e6f7420676f7665726e6f720000000000000000604482015260640162000562565b600054600160a81b900460ff1615620024995760405162461bcd60e51b815260206004820152601560248201527411dbdd995c9b985b98d94e881cdd5cdc195b991959605a1b604482015260640162000562565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b179055604051600181527f58e6c20b68c19f4d8dbc6206267af40b288342464b433205bb41e5b65c4016da906020016200061a565b6200250362002619565b6001600160a01b0316336001600160a01b031614620025655760405162461bcd60e51b815260206004820152601860248201527f476f7665726e616e63653a206e6f7420676f7665726e6f720000000000000000604482015260640162000562565b600054600160b01b900460ff16620025c05760405162461bcd60e51b815260206004820152601960248201527f5661756c743a207843616c6c73206e6f7420656e61626c656400000000000000604482015260640162000562565b600080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff1681556040519081527f55f83e6fce30d9fd43a6ca0101bc68cf99b4944a9d9eb39a961533c04bfa3966906020016200061a565b600080546001600160a01b03166001600160a01b031663cd1b4d206040518163ffffffff1660e01b815260040160206040518083038186803b1580156200265f57600080fd5b505afa15801562002674573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c09190620030d3565b6040516001600160a01b0380851660248301528316604482015260648101829052620016fb9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262002c08565b600080546001600160a01b03166001600160a01b0316633f87b30f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200265f57600080fd5b8060005b81811015620016fb5783838281811062002788576200278862004031565b90506040020160000135848483818110620027a757620027a762004031565b9050604002016020016020810190620027c19190620030b3565b604051620027cf9062002ee1565b6001600160a01b0390911681526020018190604051809103906000f590508015801562002800573d6000803e3d6000fd5b50506001016200276a565b8060005b81811015620016fb578383828181106200282d576200282d62004031565b620028459260206040909202019081019150620030b3565b6001600160a01b031663f109a0be85858481811062002868576200286862004031565b9050604002016020016020810190620028829190620030b3565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620028c457600080fd5b505af1158015620028d9573d6000803e3d6000fd5b505050508060010190506200280f565b8060005b81811015620016fb576200297b8484838181106200290f576200290f62004031565b620029279260206060909202019081019150620030b3565b8585848181106200293c576200293c62004031565b9050606002016020016020810190620029569190620030b3565b8686858181106200296b576200296b62004031565b9050606002016040013562002984565b600101620028ed565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141562002a48576000826001600160a01b0316610dac83604051600060405180830381858888f193505050503d8060008114620029fd576040519150601f19603f3d011682016040523d82523d6000602084013e62002a02565b606091505b5050905080620016fb57826001600160a01b03167f1c43b9761b3fba5321ca8212bfc231945f668ccc0c446f333999eea9ce8fda81836040516200083191815260200190565b62002a5e6001600160a01b038416838362002cf4565b505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee62002a876020880188620030b3565b6001600160a01b0316141562002b335762002aa96040870160208801620030b3565b6001600160a01b0316634d3338b96040880135878787878762002ad060208f018f620030b3565b8e604001356040518963ffffffff1660e01b815260040162002af9979695949392919062003dc7565b6000604051808303818588803b15801562002b1357600080fd5b505af115801562002b28573d6000803e3d6000fd5b505050505062002c00565b62002b6e62002b496040880160208901620030b3565b604088013562002b5d60208a018a620030b3565b6001600160a01b0316919062002cf4565b62002b806040870160208801620030b3565b6001600160a01b0316634d3338b9868686868662002ba260208e018e620030b3565b8d604001356040518863ffffffff1660e01b815260040162002bcb979695949392919062003dc7565b600060405180830381600087803b15801562002be657600080fd5b505af115801562002bfb573d6000803e3d6000fd5b505050505b505050505050565b600062002c5f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662002d3f9092919063ffffffff16565b80519091501562002a5e578080602001905181019062002c8091906200316d565b62002a5e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840162000562565b6040516001600160a01b03831660248201526044810182905262002a5e9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401620026e8565b606062002d50848460008562002d5a565b90505b9392505050565b60608247101562002dd45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840162000562565b843b62002e245760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000562565b600080866001600160a01b0316858760405162002e42919062003907565b60006040518083038185875af1925050503d806000811462002e81576040519150601f19603f3d011682016040523d82523d6000602084013e62002e86565b606091505b509150915062002e9882828662002ea3565b979650505050505050565b6060831562002eb457508162002d53565b82511562002ec55782518084602001fd5b8160405162461bcd60e51b815260040162000562919062003925565b610555806200407783390190565b803562002efc816200405d565b919050565b60008083601f84011262002f1457600080fd5b50813567ffffffffffffffff81111562002f2d57600080fd5b6020830191508360208260061b850101111562002f4957600080fd5b9250929050565b60008083601f84011262002f6357600080fd5b50813567ffffffffffffffff81111562002f7c57600080fd5b60208301915083602060608302850101111562002f4957600080fd5b60008083601f84011262002fab57600080fd5b50813567ffffffffffffffff81111562002fc457600080fd5b60208301915083602082850101111562002f4957600080fd5b600082601f83011262002fef57600080fd5b813567ffffffffffffffff808211156200300d576200300d62004047565b604051601f8301601f19908116603f0116810190828211818310171562003038576200303862004047565b816040528381528660208588010111156200305257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060c082840312156200308557600080fd5b50919050565b6000606082840312156200308557600080fd5b803563ffffffff8116811462002efc57600080fd5b600060208284031215620030c657600080fd5b813562002d53816200405d565b600060208284031215620030e657600080fd5b815162002d53816200405d565b600080602083850312156200310757600080fd5b823567ffffffffffffffff808211156200312057600080fd5b818501915085601f8301126200313557600080fd5b8135818111156200314557600080fd5b8660208260051b85010111156200315b57600080fd5b60209290920196919550909350505050565b6000602082840312156200318057600080fd5b8151801515811462002d5357600080fd5b6000806000806000806000610140888a031215620031ae57600080fd5b620031ba898962003072565b965060c0880135620031cc816200405d565b9550620031dc60e089016200309e565b945061010088013567ffffffffffffffff80821115620031fb57600080fd5b620032098b838c0162002f98565b90965094506101208a01359150808211156200322457600080fd5b50620032338a828b0162002f98565b989b979a50959850939692959293505050565b600080600060e084860312156200325c57600080fd5b62003268858562003072565b925060c084013567ffffffffffffffff8111156200328557600080fd5b620032938682870162002f01565b9497909650939450505050565b6000806000806000806000610120888a031215620032bd57600080fd5b620032c9898962003072565b965060c088013567ffffffffffffffff80821115620032e757600080fd5b620032f58b838c0162002f01565b909850965060e08a01359150808211156200330f57600080fd5b6200331d8b838c0162002f01565b90965094506101008a01359150808211156200333857600080fd5b50620032338a828b0162002f50565b600080600060e084860312156200335d57600080fd5b62003369858562003072565b925060c084013567ffffffffffffffff8111156200338657600080fd5b620032938682870162002f50565b60008060e08385031215620033a857600080fd5b620033b4848462003072565b915060c0830135620033c6816200405d565b809150509250929050565b6000806101208385031215620033e657600080fd5b620033f2848462003072565b9150620034038460c085016200308b565b90509250929050565b6000806000806000806000610180888a0312156200342957600080fd5b62003435898962003072565b9650620034468960c08a016200308b565b95506200345761012089016200309e565b945061014088013567ffffffffffffffff808211156200347657600080fd5b620034848b838c0162002f98565b90965094506101608a01359150808211156200322457600080fd5b600060208284031215620034b257600080fd5b5051919050565b600080600060608486031215620034cf57600080fd5b620034da846200309e565b9250602084013567ffffffffffffffff80821115620034f857600080fd5b620035068783880162002fdd565b935060408601359150808211156200351d57600080fd5b506200352c8682870162002fdd565b9150509250925092565b600080600080600080600060c0888a0312156200355257600080fd5b6200355d886200309e565b9650602088013567ffffffffffffffff808211156200357b57600080fd5b620035898b838c0162002fdd565b975060408a0135915080821115620035a057600080fd5b620035ae8b838c0162002fdd565b965060608a0135915080821115620035c557600080fd5b50620035d48a828b0162002f98565b9095509350506080880135915060a0880135620035f1816200405d565b8091505092959891949750929550565b60008060008060008060008060006101008a8c0312156200362157600080fd5b6200362c8a6200309e565b985060208a013567ffffffffffffffff808211156200364a57600080fd5b620036588d838e0162002fdd565b995060408c01359150808211156200366f57600080fd5b6200367d8d838e0162002fdd565b985060608c01359150808211156200369457600080fd5b50620036a38c828d0162002f98565b90975095505060808a01359350620036be60a08b0162002eef565b925060c08a01359150620036d560e08b0162002eef565b90509295985092959850929598565b600080600080600060a08688031215620036fd57600080fd5b62003708866200309e565b9450602086013567ffffffffffffffff808211156200372657600080fd5b6200373489838a0162002fdd565b955060408801359150808211156200374b57600080fd5b506200375a8882890162002fdd565b93505060608601356200376d816200405d565b949793965091946080013592915050565b8183526000602080850194508260005b85811015620037cb578135875282820135620037aa816200405d565b6001600160a01b03168784015260409687019691909101906001016200378e565b509495945050505050565b8183526000602080850194508260005b85811015620037cb578135620037fc816200405d565b6001600160a01b039081168852828401359062003819826200405d565b16878401526040968701969190910190600101620037e6565b81835260208301925060008160005b848110156200386a57620038568683620038cb565b606095860195919091019060010162003841565b5093949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452620038b781602086016020860162003fce565b601f01601f19169290920160200192915050565b8035620038d8816200405d565b6001600160a01b039081168352602082013590620038f6826200405d565b166020830152604090810135910152565b600082516200391b81846020870162003fce565b9190910192915050565b60208152600062002d5360208301846200389d565b60e0810183356200394b816200405d565b6001600160a01b0380821684526020860135602085015260408601356040850152606086013560608501526080860135608085015260a0860135915062003992826200405d565b1660a083015260c090910191909152919050565b6000610140620039f8838b6001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b6001600160a01b03891660c084015263ffffffff881660e08401528061010084015262003a29818401878962003874565b905082810361012084015262003a4181858762003874565b9a9950505050505050505050565b62003a9c81856001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b60e060c0820152600062003ab560e0830184866200377e565b95945050505050565b600061012062003b10838b6001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b8060c084015262003b25818401898b6200377e565b905082810360e084015262003b3c818789620037d6565b905082810361010084015262003a4181858762003832565b62003ba181856001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b60e060c0820152600062003ab560e083018486620037d6565b62003c0781856001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b60e060c0820152600062003ab560e08301848662003832565b60e0810162003c7182856001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b6001600160a01b03831660c08301529392505050565b610120810162003cd982856001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b62002d5360c0830184620038cb565b600061018062003d3a838b6001600160a01b03808251168352602082015160208401526040820151604084015260608201516060840152608082015160808401528060a08301511660a0840152505050565b62003d4960c084018a620038cb565b63ffffffff88166101208401528061014084015262003d6c818401878962003874565b905082810361016084015262003a4181858762003874565b63ffffffff8616815260606020820152600062003da660608301868862003874565b828103604084015262003dbb81858762003874565b98975050505050505050565b63ffffffff8816815260a06020820152600062003de960a08301888a62003874565b828103604084015262003dfe81878962003874565b6001600160a01b0395909516606084015250506080015295945050505050565b63ffffffff8616815260a06020820152600062003e3f60a08301876200389d565b828103604084015262003e5381876200389d565b6001600160a01b039590951660608401525050608001529392505050565b600061010063ffffffff8c16835280602084015262003e938184018c6200389d565b9050828103604084015262003ea9818b6200389d565b90506001600160a01b03808a16606085015288608085015283820360a085015262003ed682888a62003874565b92508560c085015280851660e085015250509a9950505050505050505050565b63ffffffff8516815260806020820152600062003f1760808301866200389d565b828103604084015262003f2b81866200389d565b91505082606083015295945050505050565b63ffffffff8916815260e06020820152600062003f5e60e083018a6200389d565b828103604084015262003f72818a6200389d565b9050876060840152828103608084015262003f8f81878962003874565b9150508360a08301526001600160a01b03831660c08301529998505050505050505050565b60008282101562003fc95762003fc96200401b565b500390565b60005b8381101562003feb57818101518382015260200162003fd1565b83811115620016fb5750506000910152565b60006000198214156200401457620040146200401b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200407357600080fd5b5056fe60a060405234801561001057600080fd5b5060405161055538038061055583398101604081905261002f916101e6565b3360601b60805273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b03821614156100b657604051600090339047908381818185875af1925050503d806000811461009d576040519150601f19603f3d011682016040523d82523d6000602084013e6100a2565b606091505b50509050806100b057600080fd5b506101b7565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156100ff57600080fd5b505afa158015610113573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610137919061020f565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561017d57600080fd5b505af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b591906101bd565b505b50610228565b6000602082840312156101cf57600080fd5b815180151581146101df57600080fd5b9392505050565b6000602082840312156101f857600080fd5b81516001600160a01b03811681146101df57600080fd5b60006020828403121561022157600080fd5b5051919050565b60805160601c6103106102456000396000606801526103106000f3fe6080604052600436106100225760003560e01c8063f109a0be1461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b5061004e61004936600461028b565b610050565b005b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461009257600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff8216141561011d57604051600090339047908381818185875af1925050503d8060008114610106576040519150601f19603f3d011682016040523d82523d6000602084013e61010b565b606091505b505090508061011957600080fd5b5050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff82169063a9059cbb90339083906370a082319060240160206040518083038186803b15801561018c57600080fd5b505afa1580156101a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c491906102c1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381600087803b15801561022f57600080fd5b505af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610119919060006020828403121561027457600080fd5b8151801515811461028457600080fd5b9392505050565b60006020828403121561029d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461028457600080fd5b6000602082840312156102d357600080fd5b505191905056fea2646970667358221220c6463ec6499b2f46a08dfdc1cc3d5c4789a492cc59983143b5802b76a92d2b4a64736f6c63430008070033a26469706673582212202d458ed14ce188dd442af530feaaad1755365e03ec285fb39169f144cf536a1464736f6c63430008070033",
  "deployedSourceMap": "675:30196:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3238:129:9;;;;;;;;;;;;;:::i;:::-;;28528:142:13;;;;;;;;;;;;;:::i;14580:270::-;;;;;;:::i;:::-;;:::i;4232:101:9:-;;;;;;;;;;-1:-1:-1;4293:4:9;4316:10;-1:-1:-1;;;4316:10:9;;;;4232:101;;;19327:14:42;;19320:22;19302:41;;19290:2;19275:18;4232:101:9;;;;;;;;20542:656:13;;;;;;;;;;-1:-1:-1;20542:656:13;;;;;:::i;:::-;;:::i;3796:110:9:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;18390:55:42;;;;18372:74;;18360:2;18345:18;3796:110:9;18226:226:42;1512:578:6;;;;;;;;;;-1:-1:-1;1512:578:6;;;;;:::i;:::-;;:::i;2575:103::-;;;;;;;;;;-1:-1:-1;2630:11:6;2660;-1:-1:-1;;;;;2660:11:6;2575:103;;4429:102:9;;;;;;;;;;;;;:::i;29377:104:13:-;;;;;;;;;;-1:-1:-1;29437:4:13;29460:14;-1:-1:-1;;;29460:14:13;;;;29377:104;;15758:392;;;;;;;;;;-1:-1:-1;15758:392:13;;;;;:::i;:::-;;:::i;10950:581::-;;;;;;;;;;-1:-1:-1;10950:581:13;;;;;:::i;:::-;;:::i;5005:971::-;;;;;;;;;;-1:-1:-1;5005:971:13;;;;;:::i;:::-;;:::i;26113:776::-;;;;;;;;;;-1:-1:-1;26113:776:13;;;;;:::i;:::-;;:::i;27663:737::-;;;;;;;;;;-1:-1:-1;27663:737:13;;;;;:::i;:::-;;:::i;4016:122:9:-;;;;;;;;;;-1:-1:-1;4085:4:9;4108:23;-1:-1:-1;;;4108:23:9;;;;4016:122;;22466:983:13;;;;;;;;;;-1:-1:-1;22466:983:13;;;;;:::i;:::-;;:::i;12378:530::-;;;;;;;;;;-1:-1:-1;12378:530:13;;;;;:::i;:::-;;:::i;2447:186:9:-;;;;;;;;;;;;;:::i;18175:416:13:-;;;;;;:::i;:::-;;:::i;2695:184:9:-;;;;;;;;;;;;;:::i;6709:690:13:-;;;;;;;;;;-1:-1:-1;6709:690:13;;;;;:::i;:::-;;:::i;7804:551::-;;;;;;;;;;-1:-1:-1;7804:551:13;;;;;:::i;:::-;;:::i;3039:131:9:-;;;;;;;;;;;;;:::i;28800:144:13:-;;;;;;;;;;;;;:::i;3238:129:9:-;5711:14;:12;:14::i;:::-;-1:-1:-1;;;;;5697:28:9;:10;:28;5689:65;;;;-1:-1:-1;;;5689:65:9;;21036:2:42;5689:65:9;;;21018:21:42;21075:2;21055:18;;;21048:30;21114:26;21094:18;;;21087:54;21158:18;;5689:65:9;;;;;;;;;5865:10:::1;::::0;-1:-1:-1;;;5865:10:9;::::1;;;5857:48;;;::::0;-1:-1:-1;;;5857:48:9;;25098:2:42;5857:48:9::1;::::0;::::1;25080:21:42::0;25137:2;25117:18;;;25110:30;25176:27;25156:18;;;25149:55;25221:18;;5857:48:9::1;24896:349:42::0;5857:48:9::1;3324:5:::2;3311:18:::0;;;::::2;::::0;;3344:16:::2;::::0;19302:41:42;;;3344:16:9::2;::::0;19290:2:42;19275:18;3344:16:9::2;;;;;;;;3238:129::o:0;28528:142:13:-;5711:14:9;:12;:14::i;:::-;-1:-1:-1;;;;;5697:28:9;:10;:28;5689:65;;;;-1:-1:-1;;;5689:65:9;;21036:2:42;5689:65:9;;;21018:21:42;21075:2;21055:18;;;21048:30;21114:26;21094:18;;;21087:54;21158:18;;5689:65:9;20834:348:42;5689:65:9;30374:14:13::1;::::0;-1:-1:-1;;;30374:14:13;::::1;;;30373:15;30365:49;;;::::0;-1:-1:-1;;;30365:49:13;;20282:2:42;30365:49:13::1;::::0;::::1;20264:21:42::0;20321:2;20301:18;;;20294:30;20360:23;20340:18;;;20333:51;20401:18;;30365:49:13::1;20080:345:42::0;30365:49:13::1;28608:14:::2;:21:::0;;;::::2;-1:-1:-1::0;;;28608:21:13::2;::::0;;28644:19:::2;::::0;-1:-1:-1;19302:41:42;;28644:19:13::2;::::0;19290:2:42;19275:18;28644:19:13::2;19162:187:42::0;14580:270:13;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;14750:9:13::1;731:6:16::0;723:46:::1;;;::::0;-1:-1:-1;;;723:46:16;;24742:2:42;723:46:16::1;::::0;::::1;24724:21:42::0;24781:2;24761:18;;;24754:30;24820:29;24800:18;;;24793:57;24867:18;;723:46:16::1;24540:351:42::0;723:46:16::1;14776:67:13::2;::::0;14832:10:::2;::::0;14776:67:::2;::::0;::::2;::::0;14787:8;;14797:10;;14809;;14821:9:::2;::::0;14776:67:::2;:::i;:::-;;;;;;;;6070:1:9::1;14580:270:13::0;;;:::o;20542:656::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;30214:14:13::1;::::0;-1:-1:-1;;;30214:14:13;::::1;;;30206:52;;;::::0;-1:-1:-1;;;30206:52:13;;22504:2:42;30206:52:13::1;::::0;::::1;22486:21:42::0;22543:2;22523:18;;;22516:30;22582:27;22562:18;;;22555:55;22627:18;;30206:52:13::1;22302:349:42::0;30206:52:13::1;20859:6:::0;731::16;723:46:::2;;;::::0;-1:-1:-1;;;723:46:16;;24742:2:42;723:46:16::2;::::0;::::2;24724:21:42::0;24781:2;24761:18;;;24754:30;24820:29;24800:18;;;24793:57;24867:18;;723:46:16::2;24540:351:42::0;723:46:16::2;20877:60:13::3;-1:-1:-1::0;;;;;20877:25:13;::::3;20903:10;20923:4;20930:6:::0;20877:25:::3;:60::i;:::-;20952:239;::::0;21097:10:::3;::::0;20952:239:::3;::::0;::::3;::::0;20976:8;;20998:10;;21022;;21054:8;;21077:6;;21121:7;;;;21142:12;;21168:13;;20952:239:::3;:::i;:::-;;;;;;;;30268:1:::2;20542:656:::0;;;;;;;;;:::o;3796:110:9:-;3855:7;3881:18;:16;:18::i;:::-;3874:25;;3796:110;:::o;1512:578:6:-;1645:10;-1:-1:-1;;;;;894:15:16;;886:58;;;;-1:-1:-1;;;886:58:16;;23263:2:42;886:58:16;;;23245:21:42;23302:2;23282:18;;;23275:30;23341:32;23321:18;;;23314:60;23391:18;;886:58:16;23061:354:42;886:58:16;1840:77:6::1;::::0;;::::1;::::0;::::1;::::0;;;1696:7;;1788:30;;1840:77;1848:18:::1;;::::0;::::1;1696:7:::0;1848:18:::1;:::i;:::-;-1:-1:-1::0;;;;;1840:77:6;;::::1;::::0;;::::1;1868:15:::0;;::::1;;1840:77:::0;;::::1;::::0;-1:-1:-1;1840:77:6;;;;;;;;;;;;;;;1891:13;;::::1;;1840:77:::0;;;;-1:-1:-1;1840:77:6;;;;;;1744:223;;16948:12:42;;16944:21;;1744:223:6::1;::::0;::::1;16932:34:42::0;17004:16;;;16998:23;16982:14;;;16975:47;17060:16;;;17054:23;17038:14;;;17031:47;17116:16;;;17110:23;17094:14;;;17087:47;17172:16;;17166:23;17150:14;;;17143:47;17232:16;;;;17226:23;17222:32;;17206:14;;;17199:56;30038:55;;;30017:19;;;;30010:84;;;;1744:223:6;;;;;;;;;;29929:19:42;;;;1744:223:6;;;;::::1;::::0;;-1:-1:-1;;;;;1744:223:6::1;-1:-1:-1::0;;;;;;1744:223:6;;;::::1;::::0;;;::::1;::::0;;1717:264;;;;;2660:11;;3160:57;;-1:-1:-1;;;3160:57:6;;1717:264;;2660:11;;-1:-1:-1;;3160:57:6::1;::::0;3192:7;;1717:264;;3160:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2006:11:6::2;:24:::0;;-1:-1:-1;;;;;2006:24:6;::::2;::::0;;;::::2;::::0;::::2;::::0;;;2045:38:::2;::::0;;18372:74:42;;;2045:38:6;::::2;::::0;-1:-1:-1;2045:38:6;;;;18360:2:42;2045:38:6;;-1:-1:-1;2045:38:6::2;954:1:16::1;;1512:578:6::0;;;:::o;4429:102:9:-;4484:7;4510:14;:12;:14::i;15758:392:13:-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;15968:6:13;731::16;723:46:::1;;;::::0;-1:-1:-1;;;723:46:16;;24742:2:42;723:46:16::1;::::0;::::1;24724:21:42::0;24781:2;24761:18;;;24754:30;24820:29;24800:18;;;24793:57;24867:18;;723:46:16::1;24540:351:42::0;723:46:16::1;15986:60:13::2;-1:-1:-1::0;;;;;15986:25:13;::::2;16012:10;16032:4;16039:6:::0;15986:25:::2;:60::i;:::-;16061:82;::::0;16132:10:::2;::::0;16061:82:::2;::::0;::::2;::::0;16071:8;;16081:10;;16093;;16113:8;;16124:6;;16061:82:::2;:::i;:::-;;;;;;;;6070:1:9::1;15758:392:13::0;;;;;:::o;10950:581::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;11302:77:13::1;::::0;;::::1;::::0;::::1;::::0;;;11155:7;;11247:33;;11302:77;11310:18:::1;;::::0;::::1;11155:7:::0;11310:18:::1;:::i;:::-;-1:-1:-1::0;;;;;11302:77:13::1;::::0;;::::1;11330:15:::0;;::::1;;11302:77:::0;;::::1;::::0;-1:-1:-1;11302:77:13;;;;;;;;;;;;;;11353:13;;::::1;;11302:77:::0;;;;-1:-1:-1;11302:77:13;;;;11203:238;::::1;::::0;;11401:22;;;;11203:238:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;11203:238:13;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;11203:238:13::1;-1:-1:-1::0;;;;;;11203:238:13;;;::::1;::::0;;;::::1;::::0;;11176:279;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;11176:279:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::1;::::0;3192:7;;11176:279:13;;3160:57:6::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11480:44:13::2;11501:22;;11480:20;:44::i;:::-;6070:1:9::1;;10950:581:13::0;;;:::o;5005:971::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;5461:77:13::1;::::0;;::::1;::::0;::::1;::::0;;;5325:7;;5417:22;;5461:77;5469:18:::1;;::::0;::::1;5325:7:::0;5469:18:::1;:::i;:::-;-1:-1:-1::0;;;;;5461:77:13::1;::::0;;::::1;5489:15:::0;;::::1;;5461:77:::0;;::::1;::::0;-1:-1:-1;5461:77:13;;;;;;;;;;;;;;5512:13;;::::1;;5461:77:::0;;;;-1:-1:-1;5461:77:13;;;;5373:306;::::1;::::0;;5560:22;;;;5604:16;;;;5642:19;;;;5373:306:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;5373:306:13;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5373:306:13::1;-1:-1:-1::0;;;;;;5373:306:13;;;::::1;::::0;;;::::1;::::0;;5346:347;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;5346:347:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::1;::::0;3192:7;;5346:347:13;;3160:57:6::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5761:44:13::2;5782:22;;5761:20;:44::i;:::-;5864:29;5876:16;;5864:11;:29::i;:::-;5934:35;5949:19;;5934:14;:35::i;:::-;6070:1:9::1;;5005:971:13::0;;;;;;;:::o;26113:776::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;26369:9:13;-1:-1:-1;;;;;894:15:16;::::1;886:58;;;::::0;-1:-1:-1;;;886:58:16;;23263:2:42;886:58:16::1;::::0;::::1;23245:21:42::0;23302:2;23282:18;;;23275:30;23341:32;23321:18;;;23314:60;23391:18;;886:58:16::1;23061:354:42::0;886:58:16::1;26558:77:13::2;::::0;;::::2;::::0;::::2;::::0;;;26418:7;;26510:26;;26558:77;26566:18:::2;;::::0;::::2;26418:7:::0;26566:18:::2;:::i;:::-;-1:-1:-1::0;;;;;26558:77:13::2;::::0;;::::2;26586:15:::0;;::::2;;26558:77:::0;;::::2;::::0;-1:-1:-1;26558:77:13;;;;;;;;;;;;;;26609:13;;::::2;;26558:77:::0;;;;-1:-1:-1;26558:77:13;;;;26466:309;::::2;::::0;;26657:9;;26688:8;;26718:10;;;;26750:7;;;;26466:309:::2;;;:::i;:::-;;::::0;;-1:-1:-1;;26466:309:13;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;26466:309:13::2;-1:-1:-1::0;;;;;;26466:309:13;;;::::2;::::0;;;::::2;::::0;;26439:350;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;26439:350:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::2;::::0;3192:7;;26439:350:13;;3160:57:6::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;26814:68:13::3;::::0;;;;-1:-1:-1;;;;;26814:37:13;::::3;::::0;-1:-1:-1;26814:37:13::3;::::0;-1:-1:-1;26814:68:13::3;::::0;26852:8;;26862:10;;;;26874:7;;;;26814:68:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;954:1:16::2;;6070::9::1;26113:776:13::0;;;;;;;:::o;27663:737::-;5711:14:9;:12;:14::i;:::-;-1:-1:-1;;;;;5697:28:9;:10;:28;5689:65;;;;-1:-1:-1;;;5689:65:9;;21036:2:42;5689:65:9;;;21018:21:42;21075:2;21055:18;;;21048:30;21114:26;21094:18;;;21087:54;21158:18;;5689:65:9;20834:348:42;5689:65:9;5204:23:::1;::::0;-1:-1:-1;;;5204:23:9;::::1;;;5196:71;;;::::0;-1:-1:-1;;;5196:71:9;;20632:2:42;5196:71:9::1;::::0;::::1;20614:21:42::0;20671:2;20651:18;;;20644:30;20710:34;20690:18;;;20683:62;-1:-1:-1;;;20761:18:42;;;20754:33;20804:19;;5196:71:9::1;20430:399:42::0;5196:71:9::1;5865:10:::2;::::0;-1:-1:-1;;;5865:10:9;::::2;;;5857:48;;;::::0;-1:-1:-1;;;5857:48:9;;25098:2:42;5857:48:9::2;::::0;::::2;25080:21:42::0;25137:2;25117:18;;;25110:30;25176:27;25156:18;;;25149:55;25221:18;;5857:48:9::2;24896:349:42::0;5857:48:9::2;2630:11:6::0;2660;29986:37:13::3;::::0;;;;;;;842:7:::3;::::0;-1:-1:-1;;;;;2660:11:6;;29986:35:13::3;::::0;:37:::3;::::0;;::::3;::::0;::::3;::::0;;;;;;;;2660:11:6;29986:37:13;::::3;;::::0;::::3;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29968:55;::::0;:15:::3;:55;:::i;:::-;:85;;29947:154;;;::::0;-1:-1:-1;;;29947:154:13;;24391:2:42;29947:154:13::3;::::0;::::3;24373:21:42::0;24430:2;24410:18;;;24403:30;24469:24;24449:18;;;24442:52;24511:18;;29947:154:13::3;24189:346:42::0;29947:154:13::3;27961:25:::4;2660:11:6::0;;27997:34:13::4;::::0;;-1:-1:-1;;;27997:34:13;;;;-1:-1:-1;;;;;2660:11:6;;;;27997:32:13::4;::::0;:34:::4;::::0;;::::4;::::0;::::4;::::0;;;;;;;;;2660:11:6;27997:34:13;::::4;;::::0;::::4;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27961:71;;28096:9;28091:303;28111:17:::0;;::::4;28091:303;;;444:42:16;28153:6:13::0;;28160:1;28153:9;;::::4;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;28153:25:13::4;;28149:235;;;28198:57;444:42:16;28222:9:13;28233:21;28198:9;:57::i;:::-;28149:235;;;28294:75;28304:6;;28311:1;28304:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;28315;28333:6;;28340:1;28333:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;28326:42;::::0;;;;28362:4:::4;28326:42;::::0;::::4;18372:74:42::0;-1:-1:-1;;;;;28326:27:13;;;::::4;::::0;::::4;::::0;18345:18:42;;28326:42:13::4;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28294:9;:75::i;:::-;28130:3:::0;::::4;::::0;::::4;:::i;:::-;;;;28091:303;;;;27852:548;27663:737:::0;;:::o;22466:983::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;22750:20:13::1;;::::0;::::1;:14:::0;:20:::1;:::i;:::-;-1:-1:-1::0;;;;;894:15:16;::::1;886:58;;;::::0;-1:-1:-1;;;886:58:16;;23263:2:42;886:58:16::1;::::0;::::1;23245:21:42::0;23302:2;23282:18;;;23275:30;23341:32;23321:18;;;23314:60;23391:18;;886:58:16::1;23061:354:42::0;886:58:16::1;22787:24:13::2;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;894:15:16;::::2;886:58;;;::::0;-1:-1:-1;;;886:58:16;;23263:2:42;886:58:16::2;::::0;::::2;23245:21:42::0;23302:2;23282:18;;;23275:30;23341:32;23321:18;;;23314:60;23391:18;;886:58:16::2;23061:354:42::0;886:58:16::2;22828:21:13::3;::::0;::::3;;731:6:16::0;723:46:::3;;;::::0;-1:-1:-1;;;723:46:16;;24742:2:42;723:46:16::3;::::0;::::3;24724:21:42::0;24781:2;24761:18;;;24754:30;24820:29;24800:18;;;24793:57;24867:18;;723:46:16::3;24540:351:42::0;723:46:16::3;23036:77:13::4;::::0;;::::4;::::0;::::4;::::0;;;22889:7;;22981:33;;23036:77;23044:18:::4;;::::0;::::4;22889:7:::0;23044:18:::4;:::i;:::-;-1:-1:-1::0;;;;;23036:77:13::4;;;;;23064:7;:15;;;23036:77;;;;23081:1;23036:77;;;;23084:1;23036:77;;;;23087:7;:13;;;23036:77;;;;23110:1;-1:-1:-1::0;;;;;23036:77:13::4;;;::::0;23135:14:::4;23171:8;23201:10;;23233:7;;22937:321;;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;22937:321:13;;::::4;::::0;;;;;;::::4;::::0;::::4;::::0;;-1:-1:-1;;;;;22937:321:13::4;-1:-1:-1::0;;;;;;22937:321:13;;;::::4;::::0;;;::::4;::::0;;22910:362;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;22910:362:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::4;::::0;3192:7;;22910:362:13;;3160:57:6::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;23375:67:13::5;23396:14;23412:8;23422:10;;23434:7;;23375:20;:67::i;:::-;779:1:16::4;;954::::3;::::2;6070::9::1;22466:983:13::0;;;;;;;:::o;12378:530::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;12700:77:13::1;::::0;;::::1;::::0;::::1;::::0;;;12562:7;;12654:24;;12700:77;12708:18:::1;;::::0;::::1;12562:7:::0;12708:18:::1;:::i;:::-;-1:-1:-1::0;;;;;12700:77:13::1;::::0;;::::1;12728:15:::0;;::::1;;12700:77:::0;;::::1;::::0;-1:-1:-1;12700:77:13;;;;;;;;;;;;;;12751:13;;::::1;;12700:77:::0;;;;-1:-1:-1;12700:77:13;;;;12610:223;::::1;::::0;;12799:16;;;;12610:223:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;12610:223:13;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;12610:223:13::1;-1:-1:-1::0;;;;;;12610:223:13;;;::::1;::::0;;;::::1;::::0;;12583:264;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;12583:264:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::1;::::0;3192:7;;12583:264:13;;3160:57:6::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12872:29:13::2;12884:16;;12872:11;:29::i;2447:186:9:-:0;5001:18;:16;:18::i;:::-;-1:-1:-1;;;;;4987:32:9;:10;:32;4979:74;;;;-1:-1:-1;;;4979:74:9;;21389:2:42;4979:74:9;;;21371:21:42;21428:2;21408:18;;;21401:30;21467:31;21447:18;;;21440:59;21516:18;;4979:74:9;21187:353:42;4979:74:9;5204:23:::1;::::0;-1:-1:-1;;;5204:23:9;::::1;;;5196:71;;;::::0;-1:-1:-1;;;5196:71:9;;20632:2:42;5196:71:9::1;::::0;::::1;20614:21:42::0;20671:2;20651:18;;;20644:30;20710:34;20690:18;;;20683:62;-1:-1:-1;;;20761:18:42;;;20754:33;20804:19;;5196:71:9::1;20430:399:42::0;5196:71:9::1;2577:5:::2;2551:31:::0;;;::::2;::::0;;2597:29:::2;::::0;19302:41:42;;;2597:29:9::2;::::0;19290:2:42;19275:18;2597:29:9::2;19162:187:42::0;18175:416:13;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;30214:14:13::1;::::0;-1:-1:-1;;;30214:14:13;::::1;;;30206:52;;;::::0;-1:-1:-1;;;30206:52:13;;22504:2:42;30206:52:13::1;::::0;::::1;22486:21:42::0;22543:2;22523:18;;;22516:30;22582:27;22562:18;;;22555:55;22627:18;;30206:52:13::1;22302:349:42::0;30206:52:13::1;18452:9:::2;731:6:16::0;723:46:::2;;;::::0;-1:-1:-1;;;723:46:16;;24742:2:42;723:46:16::2;::::0;::::2;24724:21:42::0;24781:2;24761:18;;;24754:30;24820:29;24800:18;;;24793:57;24867:18;;723:46:16::2;24540:351:42::0;723:46:16::2;18478:106:13::3;::::0;18535:10:::3;::::0;18478:106:::3;::::0;::::3;::::0;18490:8;;18500:10;;18512;;18524:9:::3;::::0;18547:7;;;;18556:12;;18570:13;;18478:106:::3;:::i;:::-;;;;;;;;30268:1:::2;18175:416:::0;;;;;;;:::o;2695:184:9:-;5001:18;:16;:18::i;:::-;-1:-1:-1;;;;;4987:32:9;:10;:32;4979:74;;;;-1:-1:-1;;;4979:74:9;;21389:2:42;4979:74:9;;;21371:21:42;21428:2;21408:18;;;21401:30;21467:31;21447:18;;;21440:59;21516:18;;4979:74:9;21187:353:42;4979:74:9;5418:23:::1;::::0;-1:-1:-1;;;5418:23:9;::::1;;;5417:24;5409:73;;;::::0;-1:-1:-1;;;5409:73:9;;22858:2:42;5409:73:9::1;::::0;::::1;22840:21:42::0;22897:2;22877:18;;;22870:30;22936:34;22916:18;;;22909:62;23007:6;22987:18;;;22980:34;23031:19;;5409:73:9::1;22656:400:42::0;5409:73:9::1;2799:23:::2;:30:::0;;;::::2;-1:-1:-1::0;;;2799:30:9::2;::::0;;2844:28:::2;::::0;-1:-1:-1;19302:41:42;;2844:28:9::2;::::0;19290:2:42;19275:18;2844:28:9::2;19162:187:42::0;6709:690:13;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;6867:20:13::1;;::::0;::::1;:14:::0;:20:::1;:::i;:::-;-1:-1:-1::0;;;;;894:15:16;::::1;886:58;;;::::0;-1:-1:-1;;;886:58:16;;23263:2:42;886:58:16::1;::::0;::::1;23245:21:42::0;23302:2;23282:18;;;23275:30;23341:32;23321:18;;;23314:60;23391:18;;886:58:16::1;23061:354:42::0;886:58:16::1;6904:24:13::2;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;894:15:16;::::2;886:58;;;::::0;-1:-1:-1;;;886:58:16;;23263:2:42;886:58:16::2;::::0;::::2;23245:21:42::0;23302:2;23282:18;;;23275:30;23341:32;23321:18;;;23314:60;23391:18;;886:58:16::2;23061:354:42::0;886:58:16::2;6945:21:13::3;::::0;::::3;;731:6:16::0;723:46:::3;;;::::0;-1:-1:-1;;;723:46:16;;24742:2:42;723:46:16::3;::::0;::::3;24724:21:42::0;24781:2;24761:18;;;24754:30;24820:29;24800:18;;;24793:57;24867:18;;723:46:16::3;24540:351:42::0;723:46:16::3;7142:77:13::4;::::0;;::::4;::::0;::::4;::::0;;;7006:7;;7098:22;;7142:77;7150:18:::4;;::::0;::::4;7006:7:::0;7150:18:::4;:::i;:::-;-1:-1:-1::0;;;;;7142:77:13::4;::::0;;::::4;7170:15:::0;;::::4;;7142:77:::0;;::::4;::::0;-1:-1:-1;7142:77:13;;;;;;;;;;;;;;7193:13;;::::4;;7142:77:::0;;;;-1:-1:-1;7142:77:13;;;;7054:219;::::4;::::0;;7241:14;;7054:219:::4;;;:::i;:::-;;::::0;;-1:-1:-1;;7054:219:13;;::::4;::::0;;;;;;::::4;::::0;::::4;::::0;;-1:-1:-1;;;;;7054:219:13::4;-1:-1:-1::0;;;;;;7054:219:13;;;::::4;::::0;;;::::4;::::0;;7027:260;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;7027:260:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::4;::::0;3192:7;;7027:260:13;;3160:57:6::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;-1:-1:-1::0;7312:80:13::5;::::0;-1:-1:-1;7322:20:13::5;::::0;-1:-1:-1;;7322:20:13::5;::::0;::::5;:14:::0;:20:::5;:::i;:::-;7344:24;::::0;;;::::5;::::0;::::5;;:::i;:::-;7370:14;:21;;;7312:9;:80::i;:::-;779:1:16::4;;954::::3;::::2;6070::9::1;6709:690:13::0;;:::o;7804:551::-;6024:10:9;;-1:-1:-1;;;6024:10:9;;;;6023:11;6015:45;;;;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9;;;22136:21:42;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9;21952:345:42;6015:45:9;8138:77:13::1;::::0;;::::1;::::0;::::1;::::0;;;7997:7;;8089:27;;8138:77;8146:18:::1;;::::0;::::1;7997:7:::0;8146:18:::1;:::i;:::-;-1:-1:-1::0;;;;;8138:77:13::1;::::0;;::::1;8166:15:::0;;::::1;;8138:77:::0;;::::1;::::0;-1:-1:-1;8138:77:13;;;;;;;;;;;;;;8189:13;;::::1;;8138:77:::0;;;;-1:-1:-1;8138:77:13;;;;8045:229;::::1;::::0;;8237:19;;;;8045:229:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;8045:229:13;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8045:229:13::1;-1:-1:-1::0;;;;;;8045:229:13;;;::::1;::::0;;;::::1;::::0;;8018:270;;;;;-1:-1:-1;2660:11:6;3160:57;;-1:-1:-1;;;3160:57:6;;8018:270:13;;-1:-1:-1;;;;;2660:11:6;;-1:-1:-1;;3160:57:6::1;::::0;3192:7;;8018:270:13;;3160:57:6::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8313:35:13::2;8328:19;;8313:14;:35::i;3039:131:9:-:0;5711:14;:12;:14::i;:::-;-1:-1:-1;;;;;5697:28:9;:10;:28;5689:65;;;;-1:-1:-1;;;5689:65:9;;21036:2:42;5689:65:9;;;21018:21:42;21075:2;21055:18;;;21048:30;21114:26;21094:18;;;21087:54;21158:18;;5689:65:9;20834:348:42;5689:65:9;6024:10:::1;::::0;-1:-1:-1;;;6024:10:9;::::1;;;6023:11;6015:45;;;::::0;-1:-1:-1;;;6015:45:9;;22154:2:42;6015:45:9::1;::::0;::::1;22136:21:42::0;22193:2;22173:18;;;22166:30;-1:-1:-1;;;22212:18:42;;;22205:51;22273:18;;6015:45:9::1;21952:345:42::0;6015:45:9::1;3116:10:::2;:17:::0;;;::::2;-1:-1:-1::0;;;3116:17:9::2;::::0;;3148:15:::2;::::0;-1:-1:-1;19302:41:42;;3148:15:9::2;::::0;19290:2:42;19275:18;3148:15:9::2;19162:187:42::0;28800:144:13;5711:14:9;:12;:14::i;:::-;-1:-1:-1;;;;;5697:28:9;:10;:28;5689:65;;;;-1:-1:-1;;;5689:65:9;;21036:2:42;5689:65:9;;;21018:21:42;21075:2;21055:18;;;21048:30;21114:26;21094:18;;;21087:54;21158:18;;5689:65:9;20834:348:42;5689:65:9;30214:14:13::1;::::0;-1:-1:-1;;;30214:14:13;::::1;;;30206:52;;;::::0;-1:-1:-1;;;30206:52:13;;22504:2:42;30206:52:13::1;::::0;::::1;22486:21:42::0;22543:2;22523:18;;;22516:30;22582:27;22562:18;;;22555:55;22627:18;;30206:52:13::1;22302:349:42::0;30206:52:13::1;28897:5:::2;28880:22:::0;;;::::2;::::0;;28917:20:::2;::::0;19302:41:42;;;28917:20:13::2;::::0;19290:2:42;19275:18;28917:20:13::2;19162:187:42::0;2813:123:13;2869:7;2660:11:6;;2895:34:13;;;-1:-1:-1;;;2895:34:13;;;;-1:-1:-1;;;;;2660:11:6;;;;2895:32:13;;:34;;;;;;;;;;;;;;;2660:11:6;2895:34:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;815:203:3:-;942:68;;-1:-1:-1;;;;;18738:15:42;;;942:68:3;;;18720:34:42;18790:15;;18770:18;;;18763:43;18822:18;;;18815:34;;;915:96:3;;935:5;;965:27;;18632:18:42;;942:68:3;;;;-1:-1:-1;;942:68:3;;;;;;;;;;;;;;-1:-1:-1;;;;;942:68:3;-1:-1:-1;;;;;;942:68:3;;;;;;;;;;;915:19;:96::i;3220:126:13:-;3280:7;2660:11:6;;3306:33:13;;;;;;;;-1:-1:-1;;;;;2660:11:6;;;;3306:31:13;;:33;;;;;;;;;;;;;;;2660:11:6;3306:33:13;;;;;;;;;;11537:413;11691:22;11674:14;11730:214;11754:6;11750:1;:10;11730:214;;;11796:22;;11819:1;11796:25;;;;;;;:::i;:::-;;;;;;:32;;;11841:22;;11864:1;11841:25;;;;;;;:::i;:::-;;;;;;:31;;;;;;;;;;:::i;:::-;11778:96;;;;;:::i;:::-;-1:-1:-1;;;;;18390:55:42;;;;18372:74;;11778:96:13;;;;;;;18360:2:42;11778:96:13;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11916:3:13;;11730:214;;13154:341;13251:16;13234:14;13284:205;13308:6;13304:1;:10;13284:205;;;13340:16;;13357:1;13340:19;;;;;;;:::i;:::-;:33;;;:19;;;;;:33;;;;-1:-1:-1;13340:33:13;:::i;:::-;-1:-1:-1;;;;;13332:48:13;;13392:16;;13409:1;13392:19;;;;;;;:::i;:::-;;;;;;:25;;;;;;;;;;:::i;:::-;13332:87;;;-1:-1:-1;13332:87:13;;;-1:-1:-1;;;;;;13332:87:13;;;-1:-1:-1;;;;;18390:55:42;;;;13332:87:13;;;18372:74:42;13332:87:13;18345:18:42;;;;;-1:-1:-1;;13332:87:13;;;;;;;-1:-1:-1;13332:87:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13461:3;;;;;13284:205;;8519:370;8625:19;8608:14;8661:222;8685:6;8681:1;:10;8661:222;;;8709:104;8719:19;;8739:1;8719:22;;;;;;;:::i;:::-;:28;;;:22;;;;;:28;;;;-1:-1:-1;8719:28:13;:::i;:::-;8749:19;;8769:1;8749:22;;;;;;;:::i;:::-;;;;;;:32;;;;;;;;;;:::i;:::-;8783:19;;8803:1;8783:22;;;;;;;:::i;:::-;;;;;;:29;;;8709:9;:104::i;:::-;8855:3;;8661:222;;9414:662;444:42:16;-1:-1:-1;;;;;9543:30:13;;;9539:531;;;9830:55;;9812:12;;-1:-1:-1;;;;;9830:14:13;;;898:4;;9874:6;;9812:12;9830:55;9812:12;9830:55;9874:6;9830:14;898:4;9830:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9811:74;;;9904:7;9899:85;;9936:33;;31538:25:42;;;-1:-1:-1;;;;;9936:33:13;;;;;31526:2:42;31511:18;9936:33:13;31392:177:42;9539:531:13;10014:45;-1:-1:-1;;;;;10014:26:13;;10041:9;10052:6;10014:26;:45::i;:::-;9414:662;;;:::o;24028:867::-;444:42:16;24227:20:13;;;;:14;:20;:::i;:::-;-1:-1:-1;;;;;24227:36:13;;24223:666;;;24291:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24279:47:13;;24334:21;;;;24374:8;24400:10;;24428:7;;24453:20;;;;24334:21;24453:20;:::i;:::-;24491:14;:21;;;24279:247;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24223:666;;;24557:90;24599:24;;;;;;;;:::i;:::-;24625:21;;;;24564:20;;;;24625:14;24564:20;:::i;:::-;-1:-1:-1;;;;;24557:41:13;;;;:90::i;:::-;24673:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24661:47:13;;24726:8;24752:10;;24780:7;;24805:20;;;;;;:::i;:::-;24843:14;:21;;;24661:217;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24223:666;24028:867;;;;;;:::o;3022:751:3:-;3467:69;;;;;;;;;;;;;;;;;;-1:-1:-1;;3467:69:3;;-1:-1:-1;;;;;3467:27:3;;;3495:4;;3467:27;:69::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:3;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:3;;23980:2:42;3671:85:3;;;23962:21:42;24019:2;23999:18;;;23992:30;24058:34;24038:18;;;24031:62;24129:12;24109:18;;;24102:40;24159:19;;3671:85:3;23778:406:42;634:175:3;743:58;;-1:-1:-1;;;;;19052:55:42;;743:58:3;;;19034:74:42;19124:18;;;19117:34;;;716:86:3;;736:5;;766:23;;19007:18:42;;743:58:3;18860:297:42;3573:193:4;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:4;;21747:2:42;4751:81:4;;;21729:21:42;21786:2;21766:18;;;21759:30;21825:34;21805:18;;;21798:62;21896:8;21876:18;;;21869:36;21922:19;;4751:81:4;21545:402:42;4751:81:4;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:4;;23622:2:42;4842:60:4;;;23604:21:42;23661:2;23641:18;;;23634:30;23700:31;23680:18;;;23673:59;23749:18;;4842:60:4;23420:353:42;4842:60:4;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:4;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:4:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:4;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7757:20;;-1:-1:-1;;;7757:20:4;;;;7764:12;;7757:20;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:134:42:-;82:20;;111:31;82:20;111:31;:::i;:::-;14:134;;;:::o;153:393::-;242:8;252:6;306:3;299:4;291:6;287:17;283:27;273:55;;324:1;321;314:12;273:55;-1:-1:-1;347:20:42;;390:18;379:30;;376:50;;;422:1;419;412:12;376:50;459:4;451:6;447:17;435:29;;519:3;512:4;502:6;499:1;495:14;487:6;483:27;479:38;476:47;473:67;;;536:1;533;526:12;473:67;153:393;;;;;:::o;551:::-;637:8;647:6;701:3;694:4;686:6;682:17;678:27;668:55;;719:1;716;709:12;668:55;-1:-1:-1;742:20:42;;785:18;774:30;;771:50;;;817:1;814;807:12;771:50;854:4;846:6;842:17;830:29;;917:3;910:4;902;894:6;890:17;882:6;878:30;874:41;871:50;868:70;;;934:1;931;924:12;949:347;1000:8;1010:6;1064:3;1057:4;1049:6;1045:17;1041:27;1031:55;;1082:1;1079;1072:12;1031:55;-1:-1:-1;1105:20:42;;1148:18;1137:30;;1134:50;;;1180:1;1177;1170:12;1134:50;1217:4;1209:6;1205:17;1193:29;;1269:3;1262:4;1253:6;1245;1241:19;1237:30;1234:39;1231:59;;;1286:1;1283;1276:12;1301:719;1344:5;1397:3;1390:4;1382:6;1378:17;1374:27;1364:55;;1415:1;1412;1405:12;1364:55;1451:6;1438:20;1477:18;1514:2;1510;1507:10;1504:36;;;1520:18;;:::i;:::-;1595:2;1589:9;1563:2;1649:13;;-1:-1:-1;;1645:22:42;;;1669:2;1641:31;1637:40;1625:53;;;1693:18;;;1713:22;;;1690:46;1687:72;;;1739:18;;:::i;:::-;1779:10;1775:2;1768:22;1814:2;1806:6;1799:18;1860:3;1853:4;1848:2;1840:6;1836:15;1832:26;1829:35;1826:55;;;1877:1;1874;1867:12;1826:55;1941:2;1934:4;1926:6;1922:17;1915:4;1907:6;1903:17;1890:54;1988:1;1981:4;1976:2;1968:6;1964:15;1960:26;1953:37;2008:6;1999:15;;;;;;1301:719;;;;:::o;2025:156::-;2085:5;2130:3;2121:6;2116:3;2112:16;2108:26;2105:46;;;2147:1;2144;2137:12;2105:46;-1:-1:-1;2169:6:42;2025:156;-1:-1:-1;2025:156:42:o;2186:162::-;2253:5;2298:2;2289:6;2284:3;2280:16;2276:25;2273:45;;;2314:1;2311;2304:12;2353:163;2420:20;;2480:10;2469:22;;2459:33;;2449:61;;2506:1;2503;2496:12;2521:247;2580:6;2633:2;2621:9;2612:7;2608:23;2604:32;2601:52;;;2649:1;2646;2639:12;2601:52;2688:9;2675:23;2707:31;2732:5;2707:31;:::i;2773:251::-;2843:6;2896:2;2884:9;2875:7;2871:23;2867:32;2864:52;;;2912:1;2909;2902:12;2864:52;2944:9;2938:16;2963:31;2988:5;2963:31;:::i;3289:615::-;3375:6;3383;3436:2;3424:9;3415:7;3411:23;3407:32;3404:52;;;3452:1;3449;3442:12;3404:52;3492:9;3479:23;3521:18;3562:2;3554:6;3551:14;3548:34;;;3578:1;3575;3568:12;3548:34;3616:6;3605:9;3601:22;3591:32;;3661:7;3654:4;3650:2;3646:13;3642:27;3632:55;;3683:1;3680;3673:12;3632:55;3723:2;3710:16;3749:2;3741:6;3738:14;3735:34;;;3765:1;3762;3755:12;3735:34;3818:7;3813:2;3803:6;3800:1;3796:14;3792:2;3788:23;3784:32;3781:45;3778:65;;;3839:1;3836;3829:12;3778:65;3870:2;3862:11;;;;;3892:6;;-1:-1:-1;3289:615:42;;-1:-1:-1;;;;3289:615:42:o;3909:277::-;3976:6;4029:2;4017:9;4008:7;4004:23;4000:32;3997:52;;;4045:1;4042;4035:12;3997:52;4077:9;4071:16;4130:5;4123:13;4116:21;4109:5;4106:32;4096:60;;4152:1;4149;4142:12;4191:1056;4335:6;4343;4351;4359;4367;4375;4383;4436:3;4424:9;4415:7;4411:23;4407:33;4404:53;;;4453:1;4450;4443:12;4404:53;4476:54;4522:7;4511:9;4476:54;:::i;:::-;4466:64;;4580:3;4569:9;4565:19;4552:33;4594:31;4619:5;4594:31;:::i;:::-;4644:5;-1:-1:-1;4668:38:42;4701:3;4686:19;;4668:38;:::i;:::-;4658:48;;4757:3;4746:9;4742:19;4729:33;4781:18;4822:2;4814:6;4811:14;4808:34;;;4838:1;4835;4828:12;4808:34;4877:58;4927:7;4918:6;4907:9;4903:22;4877:58;:::i;:::-;4954:8;;-1:-1:-1;4851:84:42;-1:-1:-1;5042:3:42;5027:19;;5014:33;;-1:-1:-1;5059:16:42;;;5056:36;;;5088:1;5085;5078:12;5056:36;;5127:60;5179:7;5168:8;5157:9;5153:24;5127:60;:::i;:::-;4191:1056;;;;-1:-1:-1;4191:1056:42;;-1:-1:-1;4191:1056:42;;;;5101:86;;-1:-1:-1;;;4191:1056:42:o;5252:628::-;5411:6;5419;5427;5480:3;5468:9;5459:7;5455:23;5451:33;5448:53;;;5497:1;5494;5487:12;5448:53;5520:54;5566:7;5555:9;5520:54;:::i;:::-;5510:64;;5625:3;5614:9;5610:19;5597:33;5653:18;5645:6;5642:30;5639:50;;;5685:1;5682;5675:12;5639:50;5724:96;5812:7;5803:6;5792:9;5788:22;5724:96;:::i;:::-;5252:628;;5839:8;;-1:-1:-1;5698:122:42;;-1:-1:-1;;;;5252:628:42:o;5885:1395::-;6181:6;6189;6197;6205;6213;6221;6229;6282:3;6270:9;6261:7;6257:23;6253:33;6250:53;;;6299:1;6296;6289:12;6250:53;6322:54;6368:7;6357:9;6322:54;:::i;:::-;6312:64;;6427:3;6416:9;6412:19;6399:33;6451:18;6492:2;6484:6;6481:14;6478:34;;;6508:1;6505;6498:12;6478:34;6547:96;6635:7;6626:6;6615:9;6611:22;6547:96;:::i;:::-;6662:8;;-1:-1:-1;6521:122:42;-1:-1:-1;6750:3:42;6735:19;;6722:33;;-1:-1:-1;6767:16:42;;;6764:36;;;6796:1;6793;6786:12;6764:36;6835:98;6925:7;6914:8;6903:9;6899:24;6835:98;:::i;:::-;6952:8;;-1:-1:-1;6809:124:42;-1:-1:-1;7040:3:42;7025:19;;7012:33;;-1:-1:-1;7057:16:42;;;7054:36;;;7086:1;7083;7076:12;7054:36;;7125:95;7212:7;7201:8;7190:9;7186:24;7125:95;:::i;7912:622::-;8068:6;8076;8084;8137:3;8125:9;8116:7;8112:23;8108:33;8105:53;;;8154:1;8151;8144:12;8105:53;8177:54;8223:7;8212:9;8177:54;:::i;:::-;8167:64;;8282:3;8271:9;8267:19;8254:33;8310:18;8302:6;8299:30;8296:50;;;8342:1;8339;8332:12;8296:50;8381:93;8466:7;8457:6;8446:9;8442:22;8381:93;:::i;8539:395::-;8654:6;8662;8715:3;8703:9;8694:7;8690:23;8686:33;8683:53;;;8732:1;8729;8722:12;8683:53;8755:54;8801:7;8790:9;8755:54;:::i;:::-;8745:64;;8859:3;8848:9;8844:19;8831:33;8873:31;8898:5;8873:31;:::i;:::-;8923:5;8913:15;;;8539:395;;;;;:::o;8939:380::-;9068:6;9076;9129:3;9117:9;9108:7;9104:23;9100:33;9097:53;;;9146:1;9143;9136:12;9097:53;9169:54;9215:7;9204:9;9169:54;:::i;:::-;9159:64;;9242:71;9305:7;9299:3;9288:9;9284:19;9242:71;:::i;:::-;9232:81;;8939:380;;;;;:::o;9324:1061::-;9502:6;9510;9518;9526;9534;9542;9550;9603:3;9591:9;9582:7;9578:23;9574:33;9571:53;;;9620:1;9617;9610:12;9571:53;9643:54;9689:7;9678:9;9643:54;:::i;:::-;9633:64;;9716:71;9779:7;9773:3;9762:9;9758:19;9716:71;:::i;:::-;9706:81;;9806:38;9839:3;9828:9;9824:19;9806:38;:::i;:::-;9796:48;;9895:3;9884:9;9880:19;9867:33;9919:18;9960:2;9952:6;9949:14;9946:34;;;9976:1;9973;9966:12;9946:34;10015:58;10065:7;10056:6;10045:9;10041:22;10015:58;:::i;:::-;10092:8;;-1:-1:-1;9989:84:42;-1:-1:-1;10180:3:42;10165:19;;10152:33;;-1:-1:-1;10197:16:42;;;10194:36;;;10226:1;10223;10216:12;10390:184;10460:6;10513:2;10501:9;10492:7;10488:23;10484:32;10481:52;;;10529:1;10526;10519:12;10481:52;-1:-1:-1;10552:16:42;;10390:184;-1:-1:-1;10390:184:42:o;10579:615::-;10675:6;10683;10691;10744:2;10732:9;10723:7;10719:23;10715:32;10712:52;;;10760:1;10757;10750:12;10712:52;10783:28;10801:9;10783:28;:::i;:::-;10773:38;;10862:2;10851:9;10847:18;10834:32;10885:18;10926:2;10918:6;10915:14;10912:34;;;10942:1;10939;10932:12;10912:34;10965:50;11007:7;10998:6;10987:9;10983:22;10965:50;:::i;:::-;10955:60;;11068:2;11057:9;11053:18;11040:32;11024:48;;11097:2;11087:8;11084:16;11081:36;;;11113:1;11110;11103:12;11081:36;;11136:52;11180:7;11169:8;11158:9;11154:24;11136:52;:::i;:::-;11126:62;;;10579:615;;;;;:::o;11199:1108::-;11333:6;11341;11349;11357;11365;11373;11381;11434:3;11422:9;11413:7;11409:23;11405:33;11402:53;;;11451:1;11448;11441:12;11402:53;11474:28;11492:9;11474:28;:::i;:::-;11464:38;;11553:2;11542:9;11538:18;11525:32;11576:18;11617:2;11609:6;11606:14;11603:34;;;11633:1;11630;11623:12;11603:34;11656:50;11698:7;11689:6;11678:9;11674:22;11656:50;:::i;:::-;11646:60;;11759:2;11748:9;11744:18;11731:32;11715:48;;11788:2;11778:8;11775:16;11772:36;;;11804:1;11801;11794:12;11772:36;11827:52;11871:7;11860:8;11849:9;11845:24;11827:52;:::i;:::-;11817:62;;11932:2;11921:9;11917:18;11904:32;11888:48;;11961:2;11951:8;11948:16;11945:36;;;11977:1;11974;11967:12;11945:36;;12016:60;12068:7;12057:8;12046:9;12042:24;12016:60;:::i;:::-;12095:8;;-1:-1:-1;11990:86:42;-1:-1:-1;;12177:3:42;12162:19;;12149:33;;-1:-1:-1;12232:3:42;12217:19;;12204:33;12246:31;12204:33;12246:31;:::i;:::-;12296:5;12286:15;;;11199:1108;;;;;;;;;;:::o;12312:1206::-;12479:6;12487;12495;12503;12511;12519;12527;12535;12543;12596:3;12584:9;12575:7;12571:23;12567:33;12564:53;;;12613:1;12610;12603:12;12564:53;12636:28;12654:9;12636:28;:::i;:::-;12626:38;;12715:2;12704:9;12700:18;12687:32;12738:18;12779:2;12771:6;12768:14;12765:34;;;12795:1;12792;12785:12;12765:34;12818:50;12860:7;12851:6;12840:9;12836:22;12818:50;:::i;:::-;12808:60;;12921:2;12910:9;12906:18;12893:32;12877:48;;12950:2;12940:8;12937:16;12934:36;;;12966:1;12963;12956:12;12934:36;12989:52;13033:7;13022:8;13011:9;13007:24;12989:52;:::i;:::-;12979:62;;13094:2;13083:9;13079:18;13066:32;13050:48;;13123:2;13113:8;13110:16;13107:36;;;13139:1;13136;13129:12;13107:36;;13178:60;13230:7;13219:8;13208:9;13204:24;13178:60;:::i;:::-;13257:8;;-1:-1:-1;13152:86:42;-1:-1:-1;;13339:3:42;13324:19;;13311:33;;-1:-1:-1;13363:39:42;13397:3;13382:19;;13363:39;:::i;:::-;13353:49;;13449:3;13438:9;13434:19;13421:33;13411:43;;13473:39;13507:3;13496:9;13492:19;13473:39;:::i;:::-;13463:49;;12312:1206;;;;;;;;;;;:::o;13523:835::-;13652:6;13660;13668;13676;13684;13737:3;13725:9;13716:7;13712:23;13708:33;13705:53;;;13754:1;13751;13744:12;13705:53;13777:28;13795:9;13777:28;:::i;:::-;13767:38;;13856:2;13845:9;13841:18;13828:32;13879:18;13920:2;13912:6;13909:14;13906:34;;;13936:1;13933;13926:12;13906:34;13959:50;14001:7;13992:6;13981:9;13977:22;13959:50;:::i;:::-;13949:60;;14062:2;14051:9;14047:18;14034:32;14018:48;;14091:2;14081:8;14078:16;14075:36;;;14107:1;14104;14097:12;14075:36;;14130:52;14174:7;14163:8;14152:9;14148:24;14130:52;:::i;:::-;14120:62;;;14232:2;14221:9;14217:18;14204:32;14245:31;14270:5;14245:31;:::i;:::-;13523:835;;;;-1:-1:-1;13523:835:42;;14347:3;14332:19;14319:33;;13523:835;-1:-1:-1;;13523:835:42:o;14363:662::-;14489:6;14484:3;14477:19;14459:3;14515:4;14544:2;14539:3;14535:12;14528:19;;14570:5;14593:1;14603:397;14617:6;14614:1;14611:13;14603:397;;;14691:6;14678:20;14673:3;14666:33;14752:2;14744:6;14740:15;14727:29;14769:33;14794:7;14769:33;:::i;:::-;-1:-1:-1;;;;;14836:56:42;14822:12;;;14815:78;14916:4;14940:12;;;;14975:15;;;;;-1:-1:-1;14632:9:42;14603:397;;;-1:-1:-1;15016:3:42;;14363:662;-1:-1:-1;;;;;14363:662:42:o;15030:771::-;15150:6;15145:3;15138:19;15120:3;15176:4;15205:2;15200:3;15196:12;15189:19;;15231:5;15254:1;15264:512;15278:6;15275:1;15272:13;15264:512;;;15355:6;15342:20;15375:33;15400:7;15375:33;:::i;:::-;-1:-1:-1;;;;;15498:16:42;;;15486:29;;15556:15;;;15543:29;;15585:33;15543:29;15585:33;:::i;:::-;15652:16;15638:12;;;15631:38;15692:4;15716:12;;;;15751:15;;;;;15300:1;15293:9;15264:512;;15806:465;15929:6;15924:3;15917:19;15961:4;15956:3;15952:14;15945:21;;15899:3;15989:5;16012:1;16022:224;16036:6;16033:1;16030:13;16022:224;;;16085:54;16135:3;16127:6;16085:54;:::i;:::-;16162:4;16186:12;;;;16221:15;;;;;16058:1;16051:9;16022:224;;;-1:-1:-1;16262:3:42;;15806:465;-1:-1:-1;;;;15806:465:42:o;16276:266::-;16364:6;16359:3;16352:19;16416:6;16409:5;16402:4;16397:3;16393:14;16380:43;-1:-1:-1;16468:1:42;16443:16;;;16461:4;16439:27;;;16432:38;;;;16524:2;16503:15;;;-1:-1:-1;;16499:29:42;16490:39;;;16486:50;;16276:266::o;16547:258::-;16589:3;16627:5;16621:12;16654:6;16649:3;16642:19;16670:63;16726:6;16719:4;16714:3;16710:14;16703:4;16696:5;16692:16;16670:63;:::i;:::-;16787:2;16766:15;-1:-1:-1;;16762:29:42;16753:39;;;;16794:4;16749:50;;16547:258;-1:-1:-1;;16547:258:42:o;17266:466::-;17371:5;17358:19;17386:33;17411:7;17386:33;:::i;:::-;-1:-1:-1;;;;;17501:16:42;;;17489:29;;17566:4;17555:16;;17542:30;;17581:33;17542:30;17581:33;:::i;:::-;17646:16;17639:4;17630:14;;17623:40;17719:4;17708:16;;;17695:30;17679:14;;17672:54;17266:466::o;17737:274::-;17866:3;17904:6;17898:13;17920:53;17966:6;17961:3;17954:4;17946:6;17942:17;17920:53;:::i;:::-;17989:16;;;;;17737:274;-1:-1:-1;;17737:274:42:o;19855:220::-;20004:2;19993:9;19986:21;19967:4;20024:45;20065:2;20054:9;20050:18;20042:6;20024:45;:::i;25250:885::-;25464:3;25449:19;;25490:20;;25519:31;25490:20;25519:31;:::i;:::-;-1:-1:-1;;;;;25638:14:42;;;25620:33;;25716:4;25704:17;;;25691:31;25669:20;;;25662:61;25786:4;25774:17;;;25761:31;25739:20;;;25732:61;25856:4;25844:17;;;25831:31;25809:20;;;25802:61;25926:4;25914:17;;;25901:31;25879:20;;;25872:61;-1:-1:-1;25970:17:42;;25957:31;;25997:33;25957:31;25997:33;:::i;:::-;26068:16;26061:4;26046:20;;26039:46;26116:3;26101:19;;;26094:35;;;;25250:885;;-1:-1:-1;25250:885:42:o;26140:805::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;17206:14;;;17199:56;26572:55;;26566:3;26551:19;;26544:84;26677:10;26665:23;;26659:3;26644:19;;26637:52;26479:3;26720;26705:19;;26698:31;;;-1:-1:-1;;26752:61:42;26794:18;;;26786:6;26778;26752:61;:::i;:::-;26738:75;;26862:9;26854:6;26850:22;26844:3;26833:9;26829:19;26822:51;26890:49;26932:6;26924;26916;26890:49;:::i;:::-;26882:57;26140:805;-1:-1:-1;;;;;;;;;;26140:805:42:o;26950:529::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;;17206:14;;;17199:56;27352:3;27346;27331:19;;27324:32;;;-1:-1:-1;;27373:100:42;;27453:19;;27445:6;27437;27373:100;:::i;:::-;27365:108;26950:529;-1:-1:-1;;;;;26950:529:42:o;27484:1182::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;;17206:14;;;17199:56;28117:3;28204;28189:19;;28182:31;;;-1:-1:-1;;28236:99:42;28316:18;;;28308:6;28300;28236:99;:::i;:::-;28222:113;;28384:9;28376:6;28372:22;28366:3;28355:9;28351:19;28344:51;28418:81;28492:6;28484;28476;28418:81;:::i;:::-;28404:95;;28548:9;28540:6;28536:22;28530:3;28519:9;28515:19;28508:51;28576:84;28653:6;28645;28637;28576:84;:::i;28671:511::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;;17206:14;;;17199:56;29061:3;29055;29040:19;;29033:32;;;-1:-1:-1;;29082:94:42;;29156:19;;29148:6;29140;29082:94;:::i;29187:520::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;;17206:14;;;17199:56;29583:3;29577;29562:19;;29555:32;;;-1:-1:-1;;29604:97:42;;29681:19;;29673:6;29665;29604:97;:::i;30105:420::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;;17206:14;;;17199:56;30383:3;30368:19;;30449:70;30514:3;30499:19;;30491:6;30449:70;:::i;30530:857::-;16948:12;;-1:-1:-1;;;;;16944:21:42;;;16932:34;;17015:4;17004:16;;;16998:23;16982:14;;;16975:47;17071:4;17060:16;;;17054:23;17038:14;;;17031:47;17127:4;17116:16;;;17110:23;17094:14;;;17087:47;17183:4;17172:16;;;17166:23;17150:14;;;17143:47;-1:-1:-1;17232:16:42;;;17226:23;17222:32;;;17206:14;;;17199:56;-1:-1:-1;30935:3:42;31000:70;31065:3;31050:19;;31042:6;31000:70;:::i;:::-;31119:10;31111:6;31107:23;31101:3;31090:9;31086:19;31079:52;31168:2;31162:3;31151:9;31147:19;31140:31;31194:61;31251:2;31240:9;31236:18;31228:6;31220;31194:61;:::i;:::-;31180:75;;31304:9;31296:6;31292:22;31286:3;31275:9;31271:19;31264:51;31332:49;31374:6;31366;31358;31332:49;:::i;31574:519::-;31827:10;31819:6;31815:23;31804:9;31797:42;31875:2;31870;31859:9;31855:18;31848:30;31778:4;31901:61;31958:2;31947:9;31943:18;31935:6;31927;31901:61;:::i;:::-;32010:9;32002:6;31998:22;31993:2;31982:9;31978:18;31971:50;32038:49;32080:6;32072;32064;32038:49;:::i;:::-;32030:57;31574:519;-1:-1:-1;;;;;;;;31574:519:42:o;32098:713::-;32407:10;32399:6;32395:23;32384:9;32377:42;32455:3;32450:2;32439:9;32435:18;32428:31;32358:4;32482:62;32539:3;32528:9;32524:19;32516:6;32508;32482:62;:::i;:::-;32592:9;32584:6;32580:22;32575:2;32564:9;32560:18;32553:50;32620:49;32662:6;32654;32646;32620:49;:::i;:::-;-1:-1:-1;;;;;32705:55:42;;;;32700:2;32685:18;;32678:83;-1:-1:-1;;32792:3:42;32777:19;32770:35;32705:55;;-1:-1:-1;;;;;32098:713:42:o;32816:663::-;33107:10;33099:6;33095:23;33084:9;33077:42;33155:3;33150:2;33139:9;33135:18;33128:31;33058:4;33182:46;33223:3;33212:9;33208:19;33200:6;33182:46;:::i;:::-;33276:9;33268:6;33264:22;33259:2;33248:9;33244:18;33237:50;33304:33;33330:6;33322;33304:33;:::i;:::-;-1:-1:-1;;;;;33373:55:42;;;;33368:2;33353:18;;33346:83;-1:-1:-1;;33460:3:42;33445:19;33438:35;33373:55;;-1:-1:-1;;;32816:663:42:o;33484:1045::-;33838:4;33867:3;33909:10;33901:6;33897:23;33886:9;33879:42;33957:2;33952;33941:9;33937:18;33930:30;33983:45;34024:2;34013:9;34009:18;34001:6;33983:45;:::i;:::-;33969:59;;34076:9;34068:6;34064:22;34059:2;34048:9;34044:18;34037:50;34110:33;34136:6;34128;34110:33;:::i;:::-;-1:-1:-1;;;;;34240:15:42;;;34235:2;34220:18;;34213:43;34287:3;34272:19;;34265:35;;;34337:22;;;-1:-1:-1;34316:19:42;;34309:51;34337:22;;-1:-1:-1;34377:49:42;34337:22;34411:6;34403;34377:49;:::i;:::-;34369:57;;34463:6;34457:3;34446:9;34442:19;34435:35;34519:2;34511:6;34507:15;34501:3;34490:9;34486:19;34479:44;;;33484:1045;;;;;;;;;;;;:::o;34534:542::-;34797:10;34789:6;34785:23;34774:9;34767:42;34845:3;34840:2;34829:9;34825:18;34818:31;34748:4;34872:46;34913:3;34902:9;34898:19;34890:6;34872:46;:::i;:::-;34966:9;34958:6;34954:22;34949:2;34938:9;34934:18;34927:50;34994:33;35020:6;35012;34994:33;:::i;:::-;34986:41;;;35063:6;35058:2;35047:9;35043:18;35036:34;34534:542;;;;;;;:::o;35081:923::-;35456:10;35448:6;35444:23;35433:9;35426:42;35504:3;35499:2;35488:9;35484:18;35477:31;35407:4;35531:46;35572:3;35561:9;35557:19;35549:6;35531:46;:::i;:::-;35625:9;35617:6;35613:22;35608:2;35597:9;35593:18;35586:50;35659:33;35685:6;35677;35659:33;:::i;:::-;35645:47;;35728:6;35723:2;35712:9;35708:18;35701:34;35784:9;35776:6;35772:22;35766:3;35755:9;35751:19;35744:51;35812:49;35854:6;35846;35838;35812:49;:::i;:::-;35892:3;35877:19;;35870:35;;;;-1:-1:-1;;;;;;;35942:55:42;;;;35936:3;35921:19;;;35914:84;35870:35;;-1:-1:-1;;;;;;35081:923:42:o;36009:125::-;36049:4;36077:1;36074;36071:8;36068:34;;;36082:18;;:::i;:::-;-1:-1:-1;36119:9:42;;36009:125::o;36139:258::-;36211:1;36221:113;36235:6;36232:1;36229:13;36221:113;;;36311:11;;;36305:18;36292:11;;;36285:39;36257:2;36250:10;36221:113;;;36352:6;36349:1;36346:13;36343:48;;;-1:-1:-1;;36387:1:42;36369:16;;36362:27;36139:258::o;36402:135::-;36441:3;-1:-1:-1;;36462:17:42;;36459:43;;;36482:18;;:::i;:::-;-1:-1:-1;36529:1:42;36518:13;;36402:135::o;36542:184::-;-1:-1:-1;;;36591:1:42;36584:88;36691:4;36688:1;36681:15;36715:4;36712:1;36705:15;36731:184;-1:-1:-1;;;36780:1:42;36773:88;36880:4;36877:1;36870:15;36904:4;36901:1;36894:15;36920:184;-1:-1:-1;;;36969:1:42;36962:88;37069:4;37066:1;37059:15;37093:4;37090:1;37083:15;37109:154;-1:-1:-1;;;;;37184:54:42;;37174:65;;37164:93;;37253:1;37250;37243:12;37164:93;37109:154;:::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "XCallNative(uint32,string,string,uint256,address,bytes,uint256,address)": {
        "details": "dstAddress is not indexed because indexing a dynamic type (string) to be able to filter,      makes it so we won't be able to decode it unless we specifically search for it. If we want      to filter it and decode it then we would need to have both the indexed and the non-indexed      version in the event."
      }
    },
    "kind": "dev",
    "methods": {
      "allBatch((address,uint256,uint256,uint256,uint256,address),(bytes32,address)[],(address,address)[],(address,address,uint256)[])": {
        "details": "FetchAndDeploy is executed first to handle the edge case , which probably shouldn't          happen anyway, where a deploy and a fetch for the same address are in the same batch.          Transfers are executed last to ensure that all fetching has been completed first.",
        "notice": "Can do a combination of all fcns in this contract. It first fetches all          deposits , then it performs all transfers specified with the rest          of the inputs, the same as transferBatch (where all inputs are again required          to be of equal length - however the lengths of the fetch inputs do not have to          be equal to lengths of the transfer inputs). Fetches/transfers of native are          indicated with 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE as the token address.",
        "params": {
          "deployFetchParamsArray": "The array of deploy and fetch parameters",
          "fetchParamsArray": "The array of fetch parameters",
          "sigData": "The keccak256 hash over the msg (uint) (here that's                  a hash over the calldata to the function with an empty sigData) and                  sig over that hash (uint) from the aggregate key",
          "transferParamsArray": "The array of transfer parameters"
        }
      },
      "deployAndFetchBatch((address,uint256,uint256,uint256,uint256,address),(bytes32,address)[])": {
        "notice": "Retrieves any token from multiple address, deterministically generated using          create2, by creating a contract for that address, sending it to this vault.",
        "params": {
          "deployFetchParamsArray": "The array of deploy and fetch parameters",
          "sigData": "The keccak256 hash over the msg (uint) (here that's normally                  a hash over the calldata to the function with an empty sigData) and                  sig over that hash (uint) from the aggregate key"
        }
      },
      "disableCommunityGuard()": {
        "notice": "Disable Community Guard"
      },
      "disablexCalls()": {
        "notice": "Disable swapNative and swapToken functionality by governance. Features disabled by default."
      },
      "enableCommunityGuard()": {
        "notice": "Enable Community Guard"
      },
      "enablexCalls()": {
        "notice": "Enable swapNative and swapToken functionality by governance. Features disabled by default"
      },
      "executexCall((address,uint256,uint256,uint256,uint256,address),address,uint32,string,bytes)": {
        "notice": "Executes a cross-chain function call. The ICFReceiver interface is expected on          the receiver's address. A message is passed to the receiver along with other          parameters specifying the origin of the swap. This is used for cross-chain messaging          without any swap taking place on the Chainflip Protocol.",
        "params": {
          "message": "The message to be passed to the recipient.",
          "sigData": "The keccak256 hash over the msg (uint) (here that's normally                  a hash over the calldata to the function with an empty sigData) and                  sig over that hash (uint) from the aggregate key",
          "srcAddress": "The address where the transfer originated from in the ingressParams.",
          "srcChain": "The source chain where the call originated from."
        }
      },
      "executexSwapAndCall((address,uint256,uint256,uint256,uint256,address),(address,address,uint256),uint32,string,bytes)": {
        "notice": "Transfers ETH or a token from this vault to a recipient and makes a function call          completing a cross-chain swap and call. The ICFReceiver interface is expected on          the receiver's address. A message is passed to the receiver along with other          parameters specifying the origin of the swap.",
        "params": {
          "message": "The message to be passed to the recipient.",
          "sigData": "The keccak256 hash over the msg (uint) (here that's normally a hash over                  the calldata to the function with an empty sigData) and sig over that                  that hash (uint) from the aggregate key.",
          "srcAddress": "The address where the transfer originated within the ingress chain.",
          "srcChain": "The source chain where the call originated from.",
          "transferParams": "The transfer parameters"
        }
      },
      "fetchBatch((address,uint256,uint256,uint256,uint256,address),(address,address)[])": {
        "notice": "Retrieves any token addresses where a Deposit contract is already deployed.",
        "params": {
          "fetchParamsArray": "The array of fetch parameters",
          "sigData": "The keccak256 hash over the msg (uint) (here that's normally                  a hash over the calldata to the function with an empty sigData) and                  sig over that hash (uint) from the aggregate key"
        }
      },
      "getCommunityGuardDisabled()": {
        "notice": "Get the Community Guard state",
        "returns": {
          "_0": "The Community Guard state"
        }
      },
      "getCommunityKey()": {
        "notice": "Get the Community Key",
        "returns": {
          "_0": "The CommunityKey"
        }
      },
      "getGovernor()": {
        "notice": "Get governor address",
        "returns": {
          "_0": "The governor address"
        }
      },
      "getKeyManager()": {
        "notice": "Get the KeyManager address/interface that's used to validate sigs",
        "returns": {
          "_0": "The KeyManager (IKeyManager)"
        }
      },
      "getSuspendedState()": {
        "notice": "Get suspended state",
        "returns": {
          "_0": "The suspended state"
        }
      },
      "getxCallsEnabled()": {
        "notice": "Get xCallsEnabled",
        "returns": {
          "_0": "The xCallsEnableds state"
        }
      },
      "govWithdraw(address[])": {
        "notice": "Withdraw all funds to governance address in case of emergency. This withdrawal needs         to be approved by the Community and it can only be executed if no nonce from the         current AggKey had been consumed in _AGG_KEY_TIMEOUT time. It is a last resort and         can be used to rectify an emergency.",
        "params": {
          "tokens": "The addresses of the tokens to be transferred"
        }
      },
      "resume()": {
        "notice": "Resume contract execution"
      },
      "suspend()": {
        "notice": "Can be used to suspend contract execution - only executable by governance and only to be used in case of emergency."
      },
      "transfer((address,uint256,uint256,uint256,uint256,address),(address,address,uint256))": {
        "notice": "Transfers native or a token from this vault to a recipient",
        "params": {
          "sigData": "The keccak256 hash over the msg (uint) (here that's                  a hash over the calldata to the function with an empty sigData) and                  sig over that hash (uint) from the aggregate key",
          "transferParams": "The transfer parameters"
        }
      },
      "transferBatch((address,uint256,uint256,uint256,uint256,address),(address,address,uint256)[])": {
        "notice": "Transfers native or tokens from this vault to recipients.",
        "params": {
          "sigData": "The keccak256 hash over the msg (uint) (here that's a hash over                  the calldata to the function with an empty sigData) and sig over                  that hash (uint) from the aggregate key",
          "transferParamsArray": "The array of transfer parameters."
        }
      },
      "updateKeyManager((address,uint256,uint256,uint256,uint256,address),address)": {
        "notice": "Update KeyManager reference. Used if KeyManager contract is updated",
        "params": {
          "keyManager": "New KeyManager's address",
          "sigData": "The keccak256 hash over the msg (uint) (here that's normally                  a hash over the calldata to the function with an empty sigData) and                  sig over that hash (uint) from the aggregate key"
        }
      },
      "xCallNative(uint32,string,string,bytes,uint256,address)": {
        "details": "Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked          to explicity inidcate that an amount is required. It isn't preventing spamming.",
        "notice": "Performs a cross-chain call to the destination address on the destination chain. Native tokens must be paid          to this contract. The swap intent determines if the provided tokens should be swapped to a different token          and transferred as part of the cross-chain call. Otherwise, all tokens are used as a payment for gas on the destination chain.          The message parameter is transmitted to the destination chain as part of the cross-chain call.",
        "params": {
          "dstAddress": "String containing the destination address on the destination chain.",
          "dstChain": "The destination chain according to the Chainflip Protocol's nomenclature.",
          "dstNativeGas": "The amount of native gas to be used on the destination chain's call.",
          "message": "The message to be sent to the egress chain. This is a general purpose message.",
          "refundAddress": "Address to refund any excess gas left from the execution of the xCall on the dstChain. This address                      is in the context of the srcChain.",
          "swapIntent": "String containing the specifics of the swap to be performed, if any, as part of the xCall. The string                      must follow Chainflip's nomenclature. An empty swapIntent implies that no swap needs to take place                      and the source token will be used for gas in a swapless xCall."
        }
      },
      "xCallToken(uint32,string,string,bytes,uint256,address,uint256,address)": {
        "details": "Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked          to explicity indicate that an amount is required.",
        "notice": "Performs a cross-chain call to the destination chain and destination address. An ERC20 token amount          needs to be approved to this contract. The ERC20 token must be supported by the Chainflip Protocol.          The swap intent determines whether the provided tokens should be swapped to a different token          by the Chainflip Protocol. If so, the swapped tokens will be transferred to the destination chain as part          of the cross-chain call. Otherwise, the tokens are used as a payment for gas on the destination chain.          The message parameter is transmitted to the destination chain as part of the cross-chain call.",
        "params": {
          "amount": "Amount of tokens to swap.",
          "dstAddress": "String containing the destination address on the destination chain.",
          "dstChain": "The destination chain according to the Chainflip Protocol's nomenclature.",
          "dstNativeGas": "The amount of native gas to be used on the destination chain's call. That gas will be paid with the                      source token.",
          "message": "The message to be sent to the egress chain. This is a general purpose message.",
          "refundAddress": "Address to refund any excess gas left from the execution of the xCall on the dstChain. This address                      is in the context of the srcChain.",
          "srcToken": "Address of the source token.",
          "swapIntent": "String containing the specifics of the swap to be performed as part of the xCall. An empty swapIntent                       implies that no swap needs to take place and the source token will be used for gas in a swapless xCall."
        }
      },
      "xSwapNative(uint32,string,string)": {
        "details": "Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked          to explicity indicate that an amount is required.  It isn't preventing spamming.",
        "notice": "Swaps native token for a token in another chain. The egress token will be transferred to the specified           destination address on the destination chain.",
        "params": {
          "dstAddress": "String containing the destination address on the destination chain.",
          "dstChain": "The destination chain according to the Chainflip Protocol's nomenclature.",
          "swapIntent": "String containing the specifics of the swap to be performed according to Chainflip's nomenclature."
        }
      },
      "xSwapToken(uint32,string,string,address,uint256)": {
        "details": "Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked          to explicity indicate that an amount is required.",
        "notice": "Swaps ERC20 token for a token in another chain. The desired token will be transferred to the specified           destination address on the destination chain. The provided ERC20 token must be supported by the Chainflip Protocol. ",
        "params": {
          "amount": "Amount of tokens to swap.",
          "dstAddress": "String containing the destination address on the destination chain.",
          "dstChain": "The destination chain according to the Chainflip Protocol's nomenclature.",
          "srcToken": "Address of the source token to swap.",
          "swapIntent": "String containing the specifics of the swap to be performed according to Chainflip's nomenclature."
        }
      }
    },
    "notice": "The vault for holding and transferring native/tokens and deploying contracts for fetching           individual deposits. It also allows users to do cross-chain swaps and(or) calls by           making a function call directly to this contract.",
    "title": "Vault contract",
    "version": 1
  },
  "offset": [
    675,
    30871
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63E7334B GT PUSH3 0xF3 JUMPI DUP1 PUSH4 0x8D95E559 GT PUSH3 0x95 JUMPI DUP1 PUSH4 0xB03B6A57 GT PUSH3 0x6C JUMPI DUP1 PUSH4 0xB03B6A57 EQ PUSH3 0x481 JUMPI DUP1 PUSH4 0xE4D2F59B EQ PUSH3 0x4A6 JUMPI DUP1 PUSH4 0xE6400BBE EQ PUSH3 0x4CB JUMPI DUP1 PUSH4 0xF545FAB9 EQ PUSH3 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D95E559 EQ PUSH3 0x43A JUMPI DUP1 PUSH4 0x91495FBC EQ PUSH3 0x452 JUMPI DUP1 PUSH4 0xAAE9BA43 EQ PUSH3 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x765849B9 GT PUSH3 0xCA JUMPI DUP1 PUSH4 0x765849B9 EQ PUSH3 0x3CF JUMPI DUP1 PUSH4 0x774D6801 EQ PUSH3 0x3F0 JUMPI DUP1 PUSH4 0x79C83AD7 EQ PUSH3 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x63E7334B EQ PUSH3 0x360 JUMPI DUP1 PUSH4 0x674BDFE2 EQ PUSH3 0x385 JUMPI DUP1 PUSH4 0x7484606F EQ PUSH3 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x420E6759 GT PUSH3 0x15D JUMPI DUP1 PUSH4 0x561DC4C8 GT PUSH3 0x134 JUMPI DUP1 PUSH4 0x561DC4C8 EQ PUSH3 0x2F5 JUMPI DUP1 PUSH4 0x5942B3BC EQ PUSH3 0x316 JUMPI DUP1 PUSH4 0x59DC4A09 EQ PUSH3 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x420E6759 EQ PUSH3 0x298 JUMPI DUP1 PUSH4 0x4B0CFC00 EQ PUSH3 0x2BD JUMPI DUP1 PUSH4 0x4FC07D75 EQ PUSH3 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29B74201 GT PUSH3 0x192 JUMPI DUP1 PUSH4 0x29B74201 EQ PUSH3 0x211 JUMPI DUP1 PUSH4 0x386E8FE5 EQ PUSH3 0x242 JUMPI DUP1 PUSH4 0x3F87B30F EQ PUSH3 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x46F7DA2 EQ PUSH3 0x1C8 JUMPI DUP1 PUSH4 0xEBF1FE9 EQ PUSH3 0x1E2 JUMPI DUP1 PUSH4 0x27610A60 EQ PUSH3 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH3 0x1C3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x4FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x624 JUMP JUMPDEST PUSH3 0x1E0 PUSH3 0x20B CALLDATASIZE PUSH1 0x4 PUSH3 0x34B9 JUMP JUMPDEST PUSH3 0x74C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x261 CALLDATASIZE PUSH1 0x4 PUSH3 0x3601 JUMP JUMPDEST PUSH3 0x83F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x27F PUSH3 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x239 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH3 0x3394 JUMP JUMPDEST PUSH3 0x9C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x27F PUSH3 0xBCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x335 CALLDATASIZE PUSH1 0x4 PUSH3 0x36E4 JUMP JUMPDEST PUSH3 0xBD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x35A CALLDATASIZE PUSH1 0x4 PUSH3 0x3246 JUMP JUMPDEST PUSH3 0xCE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x37F CALLDATASIZE PUSH1 0x4 PUSH3 0x32A0 JUMP JUMPDEST PUSH3 0xE88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH3 0x3191 JUMP JUMPDEST PUSH3 0x1050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH3 0x30F3 JUMP JUMPDEST PUSH3 0x12D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x22D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x40F CALLDATASIZE PUSH1 0x4 PUSH3 0x340C JUMP JUMPDEST PUSH3 0x1701 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x434 CALLDATASIZE PUSH1 0x4 PUSH3 0x3246 JUMP JUMPDEST PUSH3 0x19DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x1B7A JUMP JUMPDEST PUSH3 0x1E0 PUSH3 0x463 CALLDATASIZE PUSH1 0x4 PUSH3 0x3536 JUMP JUMPDEST PUSH3 0x1CA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x1E00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH3 0x33D1 JUMP JUMPDEST PUSH3 0x1F4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH3 0x3347 JUMP JUMPDEST PUSH3 0x223C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x23D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E0 PUSH3 0x24F9 JUMP JUMPDEST PUSH3 0x505 PUSH3 0x2619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x56B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F742073757370656E64656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x58E6C20B68C19F4D8DBC6206267AF40B288342464B433205BB41E5B65C4016DA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH3 0x62E PUSH3 0x2619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A207843616C6C7320656E61626C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x55F83E6FCE30D9FD43A6CA0101BC68CF99B4944A9D9EB39A961533C04BFA3966 SWAP1 PUSH1 0x20 ADD PUSH3 0x61A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST CALLVALUE DUP1 PUSH3 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A2075696E7420696E70757420697320656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4DE49A59404BAF7C2B0D3DB254297AF01DC258CBC5D78CA37B8CF5A98CFDC200 DUP6 DUP6 DUP6 CALLVALUE PUSH1 0x40 MLOAD PUSH3 0x831 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A207843616C6C73206E6F7420656E61626C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST DUP2 DUP1 PUSH3 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A2075696E7420696E70757420697320656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0x955 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP7 PUSH3 0x269A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x98D5C453EB58C7CE3C927A1B55FFBFDA38DF699446DA57678D54839D8B21E667 DUP12 DUP12 DUP12 DUP9 DUP9 DUP14 DUP14 DUP14 DUP12 PUSH1 0x40 MLOAD PUSH3 0x9A0 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3E71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C0 PUSH3 0x2720 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A206164647265737320696E70757420697320656D7074790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP4 SWAP1 PUSH32 0x420E675900000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0xA5D PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0xAAF SWAP3 SWAP2 SWAP1 PUSH3 0x3C20 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0xAF6 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB25 SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xB55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD18040E514983D65F088430E69091AEA9BF07FEAED3696A3FAAC1CCC34B5E3BC SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C0 PUSH3 0x2619 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST DUP1 DUP1 PUSH3 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A2075696E7420696E70757420697320656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0xC91 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH3 0x269A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1E7B21F751C6D9FA3F98A51B607C124A07DF7C3C54EE98D0A37854AAA4F864D0 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0xCD4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP4 SWAP1 PUSH32 0x59DC4A0900000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0xD77 PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0xDCB SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3A4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0xE12 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE41 SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xE81 DUP5 DUP5 PUSH3 0x2766 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP8 SWAP1 PUSH32 0x63E7334B00000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0xF1B PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0xF77 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3ABE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0xFBE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFED SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x101D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x102D DUP9 DUP9 PUSH3 0x2766 JUMP JUMPDEST PUSH3 0x1039 DUP7 DUP7 PUSH3 0x280B JUMP JUMPDEST PUSH3 0x1045 DUP5 DUP5 PUSH3 0x28E9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A206164647265737320696E70757420697320656D7074790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP9 SWAP1 PUSH32 0x674BDFE200000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0x113C PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x1198 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x39A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0x11DF PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x120E SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x123E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x74D6D33300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 POP PUSH4 0x74D6D333 SWAP2 POP PUSH3 0x1291 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH3 0x3D84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x12AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x12C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x12DB PUSH3 0x2619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x13A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A20636F6D6D756E69747920677561726420656E6162 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F742073757370656E64656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0x127500 PUSH3 0x1416 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x53F0BB61 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x144F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1464 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x148A SWAP2 SWAP1 PUSH3 0x349F JUMP JUMPDEST PUSH3 0x1496 SWAP1 TIMESTAMP PUSH3 0x3FB4 JUMP JUMPDEST LT ISZERO PUSH3 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A206E6F7420656E6F7567682074696D6500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCD1B4D20 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x152C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1567 SWAP2 SWAP1 PUSH3 0x30D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x16FB JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH3 0x159F JUMPI PUSH3 0x159F PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH3 0x15B6 SWAP2 SWAP1 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x15ED JUMPI PUSH3 0x15E7 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP4 SELFBALANCE PUSH3 0x2984 JUMP JUMPDEST PUSH3 0x16E6 JUMP JUMPDEST PUSH3 0x16E6 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH3 0x1606 JUMPI PUSH3 0x1606 PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH3 0x161D SWAP2 SWAP1 PUSH3 0x30B3 JUMP JUMPDEST DUP4 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH3 0x1633 JUMPI PUSH3 0x1633 PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH3 0x164A SWAP2 SWAP1 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x16A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x16BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x16E0 SWAP2 SWAP1 PUSH3 0x349F JUMP JUMPDEST PUSH3 0x2984 JUMP JUMPDEST DUP1 PUSH3 0x16F2 DUP2 PUSH3 0x3FFD JUMP JUMPDEST SWAP2 POP POP PUSH3 0x156C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0x1764 PUSH1 0x20 DUP8 ADD DUP8 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x17BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A206164647265737320696E70757420697320656D7074790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0x17CE PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A206164647265737320696E70757420697320656D7074790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD CALLDATALOAD DUP1 PUSH3 0x187A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A2075696E7420696E70757420697320656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP11 SWAP1 PUSH32 0x774D680100000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0x18B9 PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x1915 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3CE8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0x195C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x198B SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x19A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x19BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x19CF DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH3 0x2A63 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP4 SWAP1 PUSH32 0x79C83AD700000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0x1A70 PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x1AC4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3B54 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0x1B0B PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B3A SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xE81 DUP5 DUP5 PUSH3 0x280B JUMP JUMPDEST PUSH3 0x1B84 PUSH3 0x2720 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1BE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420436F6D6D756E697479204B6579000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x1C4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A20636F6D6D756E69747920677561726420656E6162 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x57C4CB09F128960151F04372028154ACDA40272F16360154961672989B59BAD SWAP1 PUSH1 0x20 ADD PUSH3 0x61A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1CFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x1D55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A207843616C6C73206E6F7420656E61626C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST CALLVALUE DUP1 PUSH3 0x1DA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A2075696E7420696E70757420697320656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7E8C5BDA8A909414B3B3D5430E67E10A1965826D1DBEFA6BD2EC6915BCDC8D7D DUP10 DUP10 DUP10 CALLVALUE DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH3 0x1DEE SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3F3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1E0A PUSH3 0x2720 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1E6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420436F6D6D756E697479204B6579000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1EED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A20636F6D6D756E6974792067756172642064697361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x626C656400000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x57C4CB09F128960151F04372028154ACDA40272F16360154961672989B59BAD SWAP1 PUSH1 0x20 ADD PUSH3 0x61A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1FA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0x1FB0 PUSH1 0x20 DUP3 ADD DUP3 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x2008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A206164647265737320696E70757420697320656D7074790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH3 0x201A PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x2072 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A206164647265737320696E70757420697320656D7074790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP1 PUSH3 0x20C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265643A2075696E7420696E70757420697320656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP6 SWAP1 PUSH32 0xB03B6A5700000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0x2105 PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x2157 SWAP3 SWAP2 SWAP1 PUSH3 0x3C87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0x219E PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x21CD SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x21E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x21FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH3 0x2233 SWAP3 POP PUSH3 0x2216 SWAP2 POP POP PUSH1 0x20 DUP9 ADD DUP9 PUSH3 0x30B3 JUMP JUMPDEST PUSH3 0x2228 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH3 0x30B3 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD CALLDATALOAD PUSH3 0x2984 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x2290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP4 SWAP1 PUSH32 0xE4D2F59B00000000000000000000000000000000000000000000000000000000 SWAP1 DUP1 PUSH3 0x22CF PUSH1 0x20 DUP6 ADD DUP6 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x2323 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3BBA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH3 0x236A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA58A3F1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2399 SWAP3 SWAP2 SWAP1 PUSH3 0x393A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x23B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x23C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xE81 DUP5 DUP5 PUSH3 0x28E9 JUMP JUMPDEST PUSH3 0x23E3 PUSH3 0x2619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x2445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x2499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DBDD995C9B985B98D94E881CDD5CDC195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x58E6C20B68C19F4D8DBC6206267AF40B288342464B433205BB41E5B65C4016DA SWAP1 PUSH1 0x20 ADD PUSH3 0x61A JUMP JUMPDEST PUSH3 0x2503 PUSH3 0x2619 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x2565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH3 0x25C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A207843616C6C73206E6F7420656E61626C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x55F83E6FCE30D9FD43A6CA0101BC68CF99B4944A9D9EB39A961533C04BFA3966 SWAP1 PUSH1 0x20 ADD PUSH3 0x61A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCD1B4D20 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x265F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2674 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x9C0 SWAP2 SWAP1 PUSH3 0x30D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH3 0x16FB SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH3 0x2C08 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3F87B30F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x265F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x16FB JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH3 0x2788 JUMPI PUSH3 0x2788 PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x0 ADD CALLDATALOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH3 0x27A7 JUMPI PUSH3 0x27A7 PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH3 0x27C1 SWAP2 SWAP1 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x27CF SWAP1 PUSH3 0x2EE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x2800 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH3 0x276A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x16FB JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH3 0x282D JUMPI PUSH3 0x282D PUSH3 0x4031 JUMP JUMPDEST PUSH3 0x2845 SWAP3 PUSH1 0x20 PUSH1 0x40 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF109A0BE DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH3 0x2868 JUMPI PUSH3 0x2868 PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH3 0x2882 SWAP2 SWAP1 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x28C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x28D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH3 0x280F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x16FB JUMPI PUSH3 0x297B DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH3 0x290F JUMPI PUSH3 0x290F PUSH3 0x4031 JUMP JUMPDEST PUSH3 0x2927 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH3 0x30B3 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH3 0x293C JUMPI PUSH3 0x293C PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH3 0x2956 SWAP2 SWAP1 PUSH3 0x30B3 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH3 0x296B JUMPI PUSH3 0x296B PUSH3 0x4031 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH3 0x2984 JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0x28ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ ISZERO PUSH3 0x2A48 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDAC DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x29FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x2A02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH3 0x16FB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1C43B9761B3FBA5321CA8212BFC231945F668CCC0C446F333999EEA9CE8FDA81 DUP4 PUSH1 0x40 MLOAD PUSH3 0x831 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH3 0x2A5E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH3 0x2CF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH3 0x2A87 PUSH1 0x20 DUP9 ADD DUP9 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x2B33 JUMPI PUSH3 0x2AA9 PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4D3338B9 PUSH1 0x40 DUP9 ADD CALLDATALOAD DUP8 DUP8 DUP8 DUP8 DUP8 PUSH3 0x2AD0 PUSH1 0x20 DUP16 ADD DUP16 PUSH3 0x30B3 JUMP JUMPDEST DUP15 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2AF9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3DC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2B28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH3 0x2C00 JUMP JUMPDEST PUSH3 0x2B6E PUSH3 0x2B49 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH3 0x2B5D PUSH1 0x20 DUP11 ADD DUP11 PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH3 0x2CF4 JUMP JUMPDEST PUSH3 0x2B80 PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x30B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4D3338B9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH3 0x2BA2 PUSH1 0x20 DUP15 ADD DUP15 PUSH3 0x30B3 JUMP JUMPDEST DUP14 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2BCB SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3DC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2BFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C5F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2D3F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH3 0x2A5E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0x2C80 SWAP2 SWAP1 PUSH3 0x316D JUMP JUMPDEST PUSH3 0x2A5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH3 0x2A5E SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH3 0x26E8 JUMP JUMPDEST PUSH1 0x60 PUSH3 0x2D50 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x2D5A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x2DD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x562 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH3 0x2E24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x562 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH3 0x2E42 SWAP2 SWAP1 PUSH3 0x3907 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x2E81 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x2E86 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x2E98 DUP3 DUP3 DUP7 PUSH3 0x2EA3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x2EB4 JUMPI POP DUP2 PUSH3 0x2D53 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x2EC5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x562 SWAP2 SWAP1 PUSH3 0x3925 JUMP JUMPDEST PUSH2 0x555 DUP1 PUSH3 0x4077 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0x2EFC DUP2 PUSH3 0x405D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2F14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x6 SHL DUP6 ADD ADD GT ISZERO PUSH3 0x2F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2F63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH3 0x2F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2FAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x2F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x300D JUMPI PUSH3 0x300D PUSH3 0x4047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x3038 JUMPI PUSH3 0x3038 PUSH3 0x4047 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x3052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x30C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x2D53 DUP2 PUSH3 0x405D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x30E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x2D53 DUP2 PUSH3 0x405D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x3120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH3 0x3145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH3 0x315B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x2D53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x140 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x31AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x31BA DUP10 DUP10 PUSH3 0x3072 JUMP JUMPDEST SWAP7 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH3 0x31CC DUP2 PUSH3 0x405D JUMP JUMPDEST SWAP6 POP PUSH3 0x31DC PUSH1 0xE0 DUP10 ADD PUSH3 0x309E JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3209 DUP12 DUP4 DUP13 ADD PUSH3 0x2F98 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x120 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3233 DUP11 DUP3 DUP12 ADD PUSH3 0x2F98 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x325C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3268 DUP6 DUP6 PUSH3 0x3072 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3293 DUP7 DUP3 DUP8 ADD PUSH3 0x2F01 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x32BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x32C9 DUP10 DUP10 PUSH3 0x3072 JUMP JUMPDEST SWAP7 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x32E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x32F5 DUP12 DUP4 DUP13 ADD PUSH3 0x2F01 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x330F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x331D DUP12 DUP4 DUP13 ADD PUSH3 0x2F01 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x100 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3233 DUP11 DUP3 DUP12 ADD PUSH3 0x2F50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x335D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3369 DUP6 DUP6 PUSH3 0x3072 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3293 DUP7 DUP3 DUP8 ADD PUSH3 0x2F50 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE0 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x33A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x33B4 DUP5 DUP5 PUSH3 0x3072 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH3 0x33C6 DUP2 PUSH3 0x405D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x120 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x33E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x33F2 DUP5 DUP5 PUSH3 0x3072 JUMP JUMPDEST SWAP2 POP PUSH3 0x3403 DUP5 PUSH1 0xC0 DUP6 ADD PUSH3 0x308B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x180 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x3429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3435 DUP10 DUP10 PUSH3 0x3072 JUMP JUMPDEST SWAP7 POP PUSH3 0x3446 DUP10 PUSH1 0xC0 DUP11 ADD PUSH3 0x308B JUMP JUMPDEST SWAP6 POP PUSH3 0x3457 PUSH2 0x120 DUP10 ADD PUSH3 0x309E JUMP JUMPDEST SWAP5 POP PUSH2 0x140 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x3476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3484 DUP12 DUP4 DUP13 ADD PUSH3 0x2F98 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x160 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x34B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x34CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x34DA DUP5 PUSH3 0x309E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x34F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3506 DUP8 DUP4 DUP9 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x351D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x352C DUP7 DUP3 DUP8 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x3552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x355D DUP9 PUSH3 0x309E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x357B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3589 DUP12 DUP4 DUP13 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x35A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35AE DUP12 DUP4 DUP13 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x35C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x35D4 DUP11 DUP3 DUP12 ADD PUSH3 0x2F98 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH3 0x35F1 DUP2 PUSH3 0x405D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x3621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x362C DUP11 PUSH3 0x309E JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x364A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3658 DUP14 DUP4 DUP15 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x366F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x367D DUP14 DUP4 DUP15 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x36A3 DUP13 DUP3 DUP14 ADD PUSH3 0x2F98 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH3 0x36BE PUSH1 0xA0 DUP12 ADD PUSH3 0x2EEF JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH3 0x36D5 PUSH1 0xE0 DUP12 ADD PUSH3 0x2EEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x36FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3708 DUP7 PUSH3 0x309E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x3726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3734 DUP10 DUP4 DUP11 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x374B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x375A DUP9 DUP3 DUP10 ADD PUSH3 0x2FDD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH3 0x376D DUP2 PUSH3 0x405D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x37CB JUMPI DUP2 CALLDATALOAD DUP8 MSTORE DUP3 DUP3 ADD CALLDATALOAD PUSH3 0x37AA DUP2 PUSH3 0x405D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 ADD MSTORE PUSH1 0x40 SWAP7 DUP8 ADD SWAP7 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x378E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x37CB JUMPI DUP2 CALLDATALOAD PUSH3 0x37FC DUP2 PUSH3 0x405D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE DUP3 DUP5 ADD CALLDATALOAD SWAP1 PUSH3 0x3819 DUP3 PUSH3 0x405D JUMP JUMPDEST AND DUP8 DUP5 ADD MSTORE PUSH1 0x40 SWAP7 DUP8 ADD SWAP7 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x37E6 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x0 DUP2 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH3 0x386A JUMPI PUSH3 0x3856 DUP7 DUP4 PUSH3 0x38CB JUMP JUMPDEST PUSH1 0x60 SWAP6 DUP7 ADD SWAP6 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x3841 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x38B7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x3FCE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0x38D8 DUP2 PUSH3 0x405D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP1 PUSH3 0x38F6 DUP3 PUSH3 0x405D JUMP JUMPDEST AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x391B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x3FCE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x2D53 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x389D JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD DUP4 CALLDATALOAD PUSH3 0x394B DUP2 PUSH3 0x405D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH3 0x3992 DUP3 PUSH3 0x405D JUMP JUMPDEST AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 PUSH3 0x39F8 DUP4 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP9 AND PUSH1 0xE0 DUP5 ADD MSTORE DUP1 PUSH2 0x100 DUP5 ADD MSTORE PUSH3 0x3A29 DUP2 DUP5 ADD DUP8 DUP10 PUSH3 0x3874 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH2 0x120 DUP5 ADD MSTORE PUSH3 0x3A41 DUP2 DUP6 DUP8 PUSH3 0x3874 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x3A9C DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3AB5 PUSH1 0xE0 DUP4 ADD DUP5 DUP7 PUSH3 0x377E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 PUSH3 0x3B10 DUP4 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH3 0x3B25 DUP2 DUP5 ADD DUP10 DUP12 PUSH3 0x377E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH3 0x3B3C DUP2 DUP8 DUP10 PUSH3 0x37D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH3 0x3A41 DUP2 DUP6 DUP8 PUSH3 0x3832 JUMP JUMPDEST PUSH3 0x3BA1 DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3AB5 PUSH1 0xE0 DUP4 ADD DUP5 DUP7 PUSH3 0x37D6 JUMP JUMPDEST PUSH3 0x3C07 DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3AB5 PUSH1 0xE0 DUP4 ADD DUP5 DUP7 PUSH3 0x3832 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH3 0x3C71 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP2 ADD PUSH3 0x3CD9 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH3 0x2D53 PUSH1 0xC0 DUP4 ADD DUP5 PUSH3 0x38CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 PUSH3 0x3D3A DUP4 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH3 0x3D49 PUSH1 0xC0 DUP5 ADD DUP11 PUSH3 0x38CB JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP9 AND PUSH2 0x120 DUP5 ADD MSTORE DUP1 PUSH2 0x140 DUP5 ADD MSTORE PUSH3 0x3D6C DUP2 DUP5 ADD DUP8 DUP10 PUSH3 0x3874 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH2 0x160 DUP5 ADD MSTORE PUSH3 0x3A41 DUP2 DUP6 DUP8 PUSH3 0x3874 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP7 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3DA6 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH3 0x3874 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x3DBB DUP2 DUP6 DUP8 PUSH3 0x3874 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP9 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3DE9 PUSH1 0xA0 DUP4 ADD DUP9 DUP11 PUSH3 0x3874 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x3DFE DUP2 DUP8 DUP10 PUSH3 0x3874 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3E3F PUSH1 0xA0 DUP4 ADD DUP8 PUSH3 0x389D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x3E53 DUP2 DUP8 PUSH3 0x389D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 PUSH4 0xFFFFFFFF DUP13 AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x3E93 DUP2 DUP5 ADD DUP13 PUSH3 0x389D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x3EA9 DUP2 DUP12 PUSH3 0x389D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x60 DUP6 ADD MSTORE DUP9 PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x3ED6 DUP3 DUP9 DUP11 PUSH3 0x3874 JUMP JUMPDEST SWAP3 POP DUP6 PUSH1 0xC0 DUP6 ADD MSTORE DUP1 DUP6 AND PUSH1 0xE0 DUP6 ADD MSTORE POP POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3F17 PUSH1 0x80 DUP4 ADD DUP7 PUSH3 0x389D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x3F2B DUP2 DUP7 PUSH3 0x389D JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP10 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x3F5E PUSH1 0xE0 DUP4 ADD DUP11 PUSH3 0x389D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x3F72 DUP2 DUP11 PUSH3 0x389D JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x3F8F DUP2 DUP8 DUP10 PUSH3 0x3874 JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x3FC9 JUMPI PUSH3 0x3FC9 PUSH3 0x401B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3FEB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x3FD1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x16FB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x4014 JUMPI PUSH3 0x4014 PUSH3 0x401B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x555 CODESIZE SUB DUP1 PUSH2 0x555 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1E6 JUMP JUMPDEST CALLER PUSH1 0x60 SHL PUSH1 0x80 MSTORE PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1BD JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x228 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x310 PUSH2 0x245 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x68 ADD MSTORE PUSH2 0x310 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF109A0BE EQ PUSH2 0x2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x28B JUMP JUMPDEST PUSH2 0x50 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x243 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 CHAINID RETURNDATACOPY 0xC6 0x49 SWAP12 0x2F CHAINID LOG0 DUP14 REVERT 0xC1 0xCC RETURNDATASIZE 0x5C SELFBALANCE DUP10 LOG4 SWAP3 0xCC MSIZE SWAP9 BALANCE NUMBER 0xB5 DUP1 0x2B PUSH23 0xA92D2B4A64736F6C63430008070033A264697066735822 SLT KECCAK256 0x2D GASLIMIT DUP15 0xD1 0x4C 0xE1 DUP9 0xDD DIFFICULTY 0x2A CREATE2 ADDRESS INVALID 0xAA 0xAD OR SSTORE CALLDATASIZE 0x5E SUB 0xEC 0x28 0x5F 0xB3 SWAP2 PUSH10 0xF144CF536A1464736F6C PUSH4 0x43000807 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1BB"
    },
    "13": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "14": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "SHR",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x63E7334B"
    },
    "26": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "27": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF3"
    },
    "31": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8D95E559"
    },
    "38": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x95"
    },
    "43": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "45": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB03B6A57"
    },
    "50": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "51": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6C"
    },
    "55": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "56": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "57": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB03B6A57"
    },
    "62": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x481"
    },
    "67": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "68": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "69": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE4D2F59B"
    },
    "74": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4A6"
    },
    "79": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "80": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE6400BBE"
    },
    "86": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4CB"
    },
    "91": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "92": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "93": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF545FAB9"
    },
    "98": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4E3"
    },
    "103": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "104": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "106": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "107": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "108": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "109": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8D95E559"
    },
    "115": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "116": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x43A"
    },
    "120": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "121": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "122": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x91495FBC"
    },
    "127": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "128": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x452"
    },
    "132": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "133": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "134": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAAE9BA43"
    },
    "139": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "140": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x469"
    },
    "144": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "149": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "150": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "151": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x765849B9"
    },
    "156": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "157": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCA"
    },
    "161": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "162": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "163": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x765849B9"
    },
    "168": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "169": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3CF"
    },
    "173": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "174": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "175": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x774D6801"
    },
    "180": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "181": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3F0"
    },
    "185": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "186": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "187": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x79C83AD7"
    },
    "192": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "193": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x415"
    },
    "197": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "198": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "200": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "201": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "202": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "203": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "204": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x63E7334B"
    },
    "209": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "210": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x360"
    },
    "214": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "215": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "216": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x674BDFE2"
    },
    "221": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "222": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x385"
    },
    "226": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "227": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "228": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7484606F"
    },
    "233": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "234": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3AA"
    },
    "238": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "239": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "241": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "242": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "243": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "244": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "245": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x420E6759"
    },
    "250": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "251": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x15D"
    },
    "255": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "256": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "257": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x561DC4C8"
    },
    "262": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "263": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x134"
    },
    "267": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "268": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "269": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x561DC4C8"
    },
    "274": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "275": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2F5"
    },
    "279": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "280": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "281": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5942B3BC"
    },
    "286": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "287": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x316"
    },
    "291": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "292": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "293": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x59DC4A09"
    },
    "298": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "299": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x33B"
    },
    "303": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "304": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "306": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "307": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "308": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "309": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "310": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x420E6759"
    },
    "315": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "316": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x298"
    },
    "320": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "321": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "322": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4B0CFC00"
    },
    "327": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "328": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2BD"
    },
    "332": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "333": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "334": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4FC07D75"
    },
    "339": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "340": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2DD"
    },
    "344": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "345": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "348": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "349": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "350": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "351": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x29B74201"
    },
    "356": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "GT",
      "path": "13"
    },
    "357": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x192"
    },
    "361": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "362": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "363": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x29B74201"
    },
    "368": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "369": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x211"
    },
    "373": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "374": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "375": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x386E8FE5"
    },
    "380": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "381": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x242"
    },
    "385": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "386": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "387": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3F87B30F"
    },
    "392": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "393": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x267"
    },
    "397": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "398": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "400": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "401": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "402": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "403": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "404": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x46F7DA2"
    },
    "409": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "410": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1C8"
    },
    "414": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "415": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "416": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xEBF1FE9"
    },
    "421": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "422": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E2"
    },
    "426": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "427": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "428": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x27610A60"
    },
    "433": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "EQ",
      "path": "13"
    },
    "434": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1FA"
    },
    "438": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "439": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "441": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "442": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "443": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "444": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "445": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1C3"
    },
    "449": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "450": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "STOP",
      "path": "13"
    },
    "451": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "452": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "454": {
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "DUP1",
      "path": "13"
    },
    "455": {
      "first_revert": true,
      "fn": null,
      "offset": [
        675,
        30871
      ],
      "op": "REVERT",
      "path": "13"
    },
    "456": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "457": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "458": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "DUP1",
      "path": "9"
    },
    "459": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "460": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1D5"
    },
    "464": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "465": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "467": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "DUP1",
      "path": "9"
    },
    "468": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "REVERT",
      "path": "9"
    },
    "469": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "470": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "POP",
      "path": "9"
    },
    "471": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E0"
    },
    "475": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x4FB"
    },
    "479": {
      "fn": "GovernanceCommunityGuarded.resume",
      "jump": "i",
      "offset": [
        3238,
        3367
      ],
      "op": "JUMP",
      "path": "9"
    },
    "480": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "481": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "STOP",
      "path": "9"
    },
    "482": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "483": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "484": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "DUP1",
      "path": "13"
    },
    "485": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "486": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1EF"
    },
    "490": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "491": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "493": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "DUP1",
      "path": "13"
    },
    "494": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "REVERT",
      "path": "13"
    },
    "495": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "496": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "POP",
      "path": "13"
    },
    "497": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E0"
    },
    "501": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x624"
    },
    "505": {
      "fn": "Vault.enablexCalls",
      "jump": "i",
      "offset": [
        28528,
        28670
      ],
      "op": "JUMP",
      "path": "13"
    },
    "506": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "507": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E0"
    },
    "511": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x20B"
    },
    "515": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "516": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "518": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x34B9"
    },
    "522": {
      "fn": "Vault.xSwapNative",
      "jump": "i",
      "offset": [
        14580,
        14850
      ],
      "op": "JUMP",
      "path": "13"
    },
    "523": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "524": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x74C"
    },
    "528": {
      "fn": "Vault.xSwapNative",
      "jump": "i",
      "offset": [
        14580,
        14850
      ],
      "op": "JUMP",
      "path": "13"
    },
    "529": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "530": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "531": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "DUP1",
      "path": "9"
    },
    "532": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "533": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x21E"
    },
    "537": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "538": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "540": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "DUP1",
      "path": "9"
    },
    "541": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "REVERT",
      "path": "9"
    },
    "542": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4293,
        4297
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "546": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4316,
        4326
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 0
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4316,
        4326
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "553": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4316,
        4326
      ],
      "op": "DIV",
      "path": "9"
    },
    "554": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4316,
        4326
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "556": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4316,
        4326
      ],
      "op": "AND",
      "path": "9"
    },
    "557": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "558": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "560": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "561": {
      "op": "SWAP1"
    },
    "562": {
      "op": "ISZERO"
    },
    "563": {
      "op": "ISZERO"
    },
    "564": {
      "op": "DUP2"
    },
    "565": {
      "op": "MSTORE"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "568": {
      "op": "ADD"
    },
    "569": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "570": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "572": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "573": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "DUP1",
      "path": "9"
    },
    "574": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "575": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "SUB",
      "path": "9"
    },
    "576": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "577": {
      "fn": "GovernanceCommunityGuarded.getSuspendedState",
      "offset": [
        4232,
        4333
      ],
      "op": "RETURN",
      "path": "9"
    },
    "578": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "579": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "580": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "DUP1",
      "path": "13"
    },
    "581": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "582": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x24F"
    },
    "586": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "587": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "589": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "DUP1",
      "path": "13"
    },
    "590": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "REVERT",
      "path": "13"
    },
    "591": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "592": {
      "op": "POP"
    },
    "593": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E0"
    },
    "597": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x261"
    },
    "601": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "602": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "604": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3601"
    },
    "608": {
      "fn": "Vault.xCallToken",
      "jump": "i",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMP",
      "path": "13"
    },
    "609": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "610": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x83F"
    },
    "614": {
      "fn": "Vault.xCallToken",
      "jump": "i",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMP",
      "path": "13"
    },
    "615": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "616": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "617": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "DUP1",
      "path": "9"
    },
    "618": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "619": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x274"
    },
    "623": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "624": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "626": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "DUP1",
      "path": "9"
    },
    "627": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "REVERT",
      "path": "9"
    },
    "628": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "629": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "POP",
      "path": "9"
    },
    "630": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x27F"
    },
    "634": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x9B4"
    },
    "638": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "jump": "i",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "639": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "640": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "642": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "SUB"
    },
    "651": {
      "op": "SWAP1"
    },
    "652": {
      "op": "SWAP2"
    },
    "653": {
      "op": "AND"
    },
    "654": {
      "op": "DUP2"
    },
    "655": {
      "op": "MSTORE"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "PUSH3",
      "value": "0x239"
    },
    "663": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "664": {
      "op": "JUMPDEST"
    },
    "665": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "666": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "DUP1",
      "path": "6"
    },
    "667": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "668": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2A5"
    },
    "672": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "673": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "675": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "DUP1",
      "path": "6"
    },
    "676": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "REVERT",
      "path": "6"
    },
    "677": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "678": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "POP",
      "path": "6"
    },
    "679": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "683": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2B7"
    },
    "687": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "688": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "690": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x3394"
    },
    "694": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "JUMP",
      "path": "6"
    },
    "695": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "jump": "i",
      "offset": [
        1512,
        2090
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "696": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x9C5"
    },
    "700": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "JUMP",
      "path": "6"
    },
    "701": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "jump": "i",
      "offset": [
        1512,
        2090
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "702": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "703": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "DUP1",
      "path": "6"
    },
    "704": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "705": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2CA"
    },
    "709": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "710": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "712": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "DUP1",
      "path": "6"
    },
    "713": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "REVERT",
      "path": "6"
    },
    "714": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "715": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "POP",
      "path": "6"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "718": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2630,
        2641
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "719": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "op": "AND"
    },
    "728": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x27F"
    },
    "732": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "JUMP",
      "path": "6"
    },
    "733": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2575,
        2678
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "734": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "735": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "DUP1",
      "path": "9"
    },
    "736": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "737": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2EA"
    },
    "741": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "742": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "744": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "DUP1",
      "path": "9"
    },
    "745": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "REVERT",
      "path": "9"
    },
    "746": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "747": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "POP",
      "path": "9"
    },
    "748": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x27F"
    },
    "752": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0xBCA"
    },
    "756": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "JUMP",
      "path": "9"
    },
    "757": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "jump": "i",
      "offset": [
        4429,
        4531
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "758": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "759": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "DUP1",
      "path": "13"
    },
    "760": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "761": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x302"
    },
    "765": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "766": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "768": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "DUP1",
      "path": "13"
    },
    "769": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "REVERT",
      "path": "13"
    },
    "770": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "771": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "POP",
      "path": "13"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "774": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29437,
        29441
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "775": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29460,
        29474
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "op": "SWAP1"
    },
    "781": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29460,
        29474
      ],
      "op": "DIV",
      "path": "13"
    },
    "782": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29460,
        29474
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "784": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29460,
        29474
      ],
      "op": "AND",
      "path": "13"
    },
    "785": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29460,
        29474
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x22D"
    },
    "789": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "JUMP",
      "path": "13"
    },
    "790": {
      "fn": "Vault.getxCallsEnabled",
      "offset": [
        29377,
        29481
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "791": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "792": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "DUP1",
      "path": "13"
    },
    "793": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "794": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x323"
    },
    "798": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "799": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "801": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "DUP1",
      "path": "13"
    },
    "802": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "REVERT",
      "path": "13"
    },
    "803": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "804": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "POP",
      "path": "13"
    },
    "805": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "809": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x335"
    },
    "813": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "814": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "816": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x36E4"
    },
    "820": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "JUMP",
      "path": "13"
    },
    "821": {
      "fn": "Vault.xSwapToken",
      "jump": "i",
      "offset": [
        15758,
        16150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "822": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xBD6"
    },
    "826": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "JUMP",
      "path": "13"
    },
    "827": {
      "fn": "Vault.xSwapToken",
      "jump": "i",
      "offset": [
        15758,
        16150
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "828": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "829": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "DUP1",
      "path": "13"
    },
    "830": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "831": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x348"
    },
    "835": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "836": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "838": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "DUP1",
      "path": "13"
    },
    "839": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "REVERT",
      "path": "13"
    },
    "840": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "841": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "POP",
      "path": "13"
    },
    "842": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "846": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x35A"
    },
    "850": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "851": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "853": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3246"
    },
    "857": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "JUMP",
      "path": "13"
    },
    "858": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "i",
      "offset": [
        10950,
        11531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "859": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xCE4"
    },
    "863": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "JUMP",
      "path": "13"
    },
    "864": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "i",
      "offset": [
        10950,
        11531
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "865": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "866": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "DUP1",
      "path": "13"
    },
    "867": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "868": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x36D"
    },
    "872": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "873": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "875": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "DUP1",
      "path": "13"
    },
    "876": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "REVERT",
      "path": "13"
    },
    "877": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "878": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "POP",
      "path": "13"
    },
    "879": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "883": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x37F"
    },
    "887": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "888": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "890": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x32A0"
    },
    "894": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "JUMP",
      "path": "13"
    },
    "895": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5005,
        5976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "896": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xE88"
    },
    "900": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "JUMP",
      "path": "13"
    },
    "901": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5005,
        5976
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "902": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "903": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "DUP1",
      "path": "13"
    },
    "904": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "905": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x392"
    },
    "909": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "910": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "912": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "DUP1",
      "path": "13"
    },
    "913": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "REVERT",
      "path": "13"
    },
    "914": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "915": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "POP",
      "path": "13"
    },
    "916": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "920": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3A4"
    },
    "924": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "925": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "927": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3191"
    },
    "931": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMP",
      "path": "13"
    },
    "932": {
      "fn": "Vault.executexCall",
      "jump": "i",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "933": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1050"
    },
    "937": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMP",
      "path": "13"
    },
    "938": {
      "fn": "Vault.executexCall",
      "jump": "i",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "939": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "940": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "DUP1",
      "path": "13"
    },
    "941": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "942": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3B7"
    },
    "946": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "947": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "949": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "DUP1",
      "path": "13"
    },
    "950": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "REVERT",
      "path": "13"
    },
    "951": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "952": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "POP",
      "path": "13"
    },
    "953": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "957": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3C9"
    },
    "961": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "962": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "964": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30F3"
    },
    "968": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMP",
      "path": "13"
    },
    "969": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "970": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12D1"
    },
    "974": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMP",
      "path": "13"
    },
    "975": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "976": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "977": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "DUP1",
      "path": "9"
    },
    "978": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "979": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x3DC"
    },
    "983": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "984": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "986": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "DUP1",
      "path": "9"
    },
    "987": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "REVERT",
      "path": "9"
    },
    "988": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "989": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "POP",
      "path": "9"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "992": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4085,
        4089
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "993": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4108,
        4131
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 3,
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "op": "SWAP1"
    },
    "999": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4108,
        4131
      ],
      "op": "DIV",
      "path": "9"
    },
    "1000": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4108,
        4131
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1002": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4108,
        4131
      ],
      "op": "AND",
      "path": "9"
    },
    "1003": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4108,
        4131
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x22D"
    },
    "1007": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1008": {
      "fn": "GovernanceCommunityGuarded.getCommunityGuardDisabled",
      "offset": [
        4016,
        4138
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1009": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1010": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1011": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1012": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3FD"
    },
    "1016": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1017": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1019": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1020": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1021": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1022": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "1023": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "1027": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x40F"
    },
    "1031": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1032": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1034": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x340C"
    },
    "1038": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1039": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1040": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1701"
    },
    "1044": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1045": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1046": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1047": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1048": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1049": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x422"
    },
    "1053": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1054": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1056": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1057": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1058": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1059": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "POP",
      "path": "13"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "1064": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x434"
    },
    "1068": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1069": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1071": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3246"
    },
    "1075": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1076": {
      "fn": "Vault.fetchBatch",
      "jump": "i",
      "offset": [
        12378,
        12908
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1077": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x19DD"
    },
    "1081": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1082": {
      "fn": "Vault.fetchBatch",
      "jump": "i",
      "offset": [
        12378,
        12908
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1083": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1084": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1085": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1086": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x447"
    },
    "1090": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1091": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1093": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1094": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1095": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1096": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "POP",
      "path": "9"
    },
    "1097": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E0"
    },
    "1101": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1B7A"
    },
    "1105": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1106": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "jump": "i",
      "offset": [
        2447,
        2633
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1107": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E0"
    },
    "1111": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x463"
    },
    "1115": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1116": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1118": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3536"
    },
    "1122": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1123": {
      "fn": "Vault.xCallNative",
      "jump": "i",
      "offset": [
        18175,
        18591
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1124": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1CA6"
    },
    "1128": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1129": {
      "fn": "Vault.xCallNative",
      "jump": "i",
      "offset": [
        18175,
        18591
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1130": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1131": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1132": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1133": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x476"
    },
    "1137": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1138": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1140": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1141": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1142": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1143": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "POP",
      "path": "9"
    },
    "1144": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E0"
    },
    "1148": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E00"
    },
    "1152": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1153": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "jump": "i",
      "offset": [
        2695,
        2879
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1154": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1155": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1156": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1157": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x48E"
    },
    "1161": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1162": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1164": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1165": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1166": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1167": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "POP",
      "path": "13"
    },
    "1168": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "1172": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4A0"
    },
    "1176": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1177": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1179": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x33D1"
    },
    "1183": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1184": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        6709,
        7399
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1185": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1F4D"
    },
    "1189": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1190": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        6709,
        7399
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1191": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1192": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1193": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1194": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4B3"
    },
    "1198": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1199": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1201": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1202": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1203": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1204": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "POP",
      "path": "13"
    },
    "1205": {
      "op": "PUSH3",
      "value": "0x1E0"
    },
    "1209": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4C5"
    },
    "1213": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1214": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1216": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3347"
    },
    "1220": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1221": {
      "fn": "Vault.transferBatch",
      "jump": "i",
      "offset": [
        7804,
        8355
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1222": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x223C"
    },
    "1226": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1227": {
      "fn": "Vault.transferBatch",
      "jump": "i",
      "offset": [
        7804,
        8355
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1228": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1229": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1230": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1231": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x4D8"
    },
    "1235": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1236": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1238": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1239": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1240": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1241": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "POP",
      "path": "9"
    },
    "1242": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E0"
    },
    "1246": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x23D9"
    },
    "1250": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1251": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "jump": "i",
      "offset": [
        3039,
        3170
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1252": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1253": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1254": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1255": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4F0"
    },
    "1259": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1260": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1262": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1263": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1264": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1265": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "POP",
      "path": "13"
    },
    "1266": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1E0"
    },
    "1270": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x24F9"
    },
    "1274": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1275": {
      "fn": "Vault.disablexCalls",
      "jump": "i",
      "offset": [
        28800,
        28944
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1276": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3238,
        3367
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x505"
    },
    "1280": {
      "offset": [
        5711,
        5725
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2619"
    },
    "1284": {
      "offset": [
        5711,
        5723
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1285": {
      "jump": "i",
      "offset": [
        5711,
        5725
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1286": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5711,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "op": "SUB"
    },
    "1294": {
      "op": "AND"
    },
    "1295": {
      "offset": [
        5697,
        5725
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1296": {
      "offset": [
        5697,
        5707
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1298": {
      "offset": [
        5697,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1300": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1302": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "SHL",
      "path": "9"
    },
    "1303": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "SUB",
      "path": "9"
    },
    "1304": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "AND",
      "path": "9"
    },
    "1305": {
      "op": "EQ"
    },
    "1306": {
      "op": "PUSH3",
      "value": "0x56B"
    },
    "1310": {
      "op": "JUMPI"
    },
    "1311": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1313": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1318": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "1320": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "SHL",
      "path": "9"
    },
    "1321": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1322": {
      "op": "MSTORE"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1327": {
      "op": "DUP3"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "MSTORE"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1334": {
      "op": "DUP3"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH32",
      "value": "0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1372": {
      "offset": [
        5689,
        5754
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1373": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1374": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1375": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "1377": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1378": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1379": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1381": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1382": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5689,
        5754
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1383": {
      "offset": [
        5865,
        5875
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1384": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5865,
        5875
      ],
      "op": "SUB",
      "path": "9"
    },
    "1385": {
      "op": "SWAP1"
    },
    "1386": {
      "op": "REVERT"
    },
    "1387": {
      "op": "JUMPDEST"
    },
    "1388": {
      "offset": [
        5865,
        5875
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1390": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5865,
        5875
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1391": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5865,
        5875
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1393": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5865,
        5875
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "1395": {
      "offset": [
        5857,
        5905
      ],
      "op": "SHL",
      "path": "9"
    },
    "1396": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5857,
        5905
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1397": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5857,
        5905
      ],
      "op": "DIV",
      "path": "9"
    },
    "1398": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1400": {
      "op": "AND"
    },
    "1401": {
      "op": "PUSH3",
      "value": "0x5C6"
    },
    "1405": {
      "op": "JUMPI"
    },
    "1406": {
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1408": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5857,
        5905
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1413": {
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "1415": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5857,
        5905
      ],
      "op": "SHL",
      "path": "9"
    },
    "1416": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        5857,
        5905
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1422": {
      "op": "DUP3"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "op": "MSTORE"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1429": {
      "op": "DUP3"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "PUSH32",
      "value": "0x476F7665726E616E63653A206E6F742073757370656E64656400000000000000"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1467": {
      "offset": [
        5857,
        5905
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "offset": [
        5857,
        5905
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1470": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3324,
        3329
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 4,
      "value": "0x64"
    },
    "1472": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3311,
        3329
      ],
      "op": "ADD",
      "path": "9"
    },
    "1473": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3311,
        3329
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "1477": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3311,
        3329
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1478": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3311,
        3329
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1479": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3311,
        3329
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1481": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3311,
        3329
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1482": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 5
    },
    "1483": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1516": {
      "op": "AND"
    },
    "1517": {
      "op": "DUP2"
    },
    "1518": {
      "op": "SSTORE"
    },
    "1519": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1521": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1522": {
      "op": "SWAP1"
    },
    "1523": {
      "op": "DUP2"
    },
    "1524": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1525": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x58E6C20B68C19F4D8DBC6206267AF40B288342464B433205BB41E5B65C4016DA"
    },
    "1558": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1559": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1561": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "ADD",
      "path": "9"
    },
    "1562": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1563": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1565": {
      "fn": "GovernanceCommunityGuarded.resume",
      "offset": [
        3344,
        3360
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1566": {
      "fn": "GovernanceCommunityGuarded.resume",
      "jump": "o",
      "offset": [
        3238,
        3367
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1567": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28528,
        28670
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1568": {
      "offset": [
        5711,
        5725
      ],
      "op": "SUB",
      "path": "9"
    },
    "1569": {
      "offset": [
        5711,
        5723
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1570": {
      "jump": "i",
      "offset": [
        5711,
        5725
      ],
      "op": "LOG1",
      "path": "9"
    },
    "1571": {
      "fn": "Vault.enablexCalls",
      "offset": [
        5711,
        5725
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1572": {
      "op": "JUMPDEST"
    },
    "1573": {
      "op": "PUSH3",
      "value": "0x62E"
    },
    "1577": {
      "op": "PUSH3",
      "value": "0x2619"
    },
    "1581": {
      "op": "JUMP"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "offset": [
        5697,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1585": {
      "offset": [
        5697,
        5707
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1587": {
      "offset": [
        5697,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "1589": {
      "offset": [
        5689,
        5754
      ],
      "op": "SHL",
      "path": "9"
    },
    "1590": {
      "fn": "Vault.enablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "SUB",
      "path": "9"
    },
    "1591": {
      "fn": "Vault.enablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "AND",
      "path": "9"
    },
    "1592": {
      "fn": "Vault.enablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "offset": [
        5689,
        5754
      ],
      "op": "SHL",
      "path": "9"
    },
    "1600": {
      "fn": "Vault.enablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "SUB",
      "path": "9"
    },
    "1601": {
      "op": "AND"
    },
    "1602": {
      "offset": [
        5689,
        5754
      ],
      "op": "EQ",
      "path": "9"
    },
    "1603": {
      "fn": "Vault.enablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x690"
    },
    "1607": {
      "offset": [
        5689,
        5754
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1610": {
      "op": "MLOAD"
    },
    "1611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "op": "DUP2"
    },
    "1619": {
      "op": "MSTORE"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1624": {
      "op": "DUP3"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "op": "MSTORE"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1629": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1631": {
      "op": "DUP3"
    },
    "1632": {
      "offset": [
        5689,
        5754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1633": {
      "offset": [
        30374,
        30388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1634": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30374,
        30388
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1669": {
      "op": "DUP3"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "offset": [
        30374,
        30388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1672": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30374,
        30388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "1674": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30374,
        30388
      ],
      "op": "ADD",
      "path": "13"
    },
    "1675": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30374,
        30388
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "1679": {
      "offset": [
        30373,
        30388
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1680": {
      "offset": [
        30365,
        30414
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1681": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30365,
        30414
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1683": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30365,
        30414
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1684": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30365,
        30414
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "op": "SWAP1"
    },
    "1690": {
      "offset": [
        30365,
        30414
      ],
      "op": "DIV",
      "path": "13"
    },
    "1691": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30365,
        30414
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1693": {
      "op": "AND"
    },
    "1694": {
      "offset": [
        30365,
        30414
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1695": {
      "fn": "Vault.enablexCalls",
      "offset": [
        30365,
        30414
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x6EC"
    },
    "1699": {
      "offset": [
        30365,
        30414
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1702": {
      "op": "MLOAD"
    },
    "1703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "DUP2"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1716": {
      "op": "DUP3"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "MSTORE"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1721": {
      "offset": [
        30365,
        30414
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "offset": [
        30365,
        30414
      ],
      "op": "ADD",
      "path": "13"
    },
    "1725": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28622
      ],
      "op": "MSTORE",
      "path": "13",
      "statement": 6
    },
    "1726": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x5661756C743A207843616C6C7320656E61626C65640000000000000000000000"
    },
    "1759": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1761": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1762": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "ADD",
      "path": "13"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "1771": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1772": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28608,
        28629
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1773": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28644,
        28663
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x0"
    },
    "1775": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28644,
        28663
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1776": {
      "op": "SLOAD"
    },
    "1777": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1810": {
      "op": "AND"
    },
    "1811": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28644,
        28663
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1813": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28644,
        28663
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB0"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "op": "OR"
    },
    "1817": {
      "fn": "Vault.enablexCalls",
      "offset": [
        28644,
        28663
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1818": {
      "op": "SSTORE"
    },
    "1819": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1821": {
      "offset": [
        6024,
        6034
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1822": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1824": {
      "op": "DUP2"
    },
    "1825": {
      "op": "MSTORE"
    },
    "1826": {
      "op": "PUSH32",
      "value": "0x55F83E6FCE30D9FD43A6CA0101BC68CF99B4944A9D9EB39A961533C04BFA3966"
    },
    "1859": {
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1860": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1862": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6024,
        6034
      ],
      "op": "ADD",
      "path": "9"
    },
    "1863": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x61A"
    },
    "1867": {
      "offset": [
        6023,
        6034
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1868": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1869": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1871": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6015,
        6060
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1872": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SWAP1"
    },
    "1878": {
      "offset": [
        6015,
        6060
      ],
      "op": "DIV",
      "path": "9"
    },
    "1879": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1881": {
      "op": "AND"
    },
    "1882": {
      "offset": [
        6015,
        6060
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1883": {
      "fn": "Vault.xSwapNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x7A0"
    },
    "1887": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1890": {
      "op": "MLOAD"
    },
    "1891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "DUP2"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1904": {
      "op": "DUP3"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "op": "MSTORE"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1911": {
      "op": "DUP3"
    },
    "1912": {
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "1913": {
      "op": "MSTORE"
    },
    "1914": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH21",
      "path": "9",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "1936": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14750,
        14759
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5A"
    },
    "1938": {
      "offset": [
        731,
        737
      ],
      "op": "SHL",
      "path": "16"
    },
    "1939": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1941": {
      "fn": "Vault.xSwapNative",
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1942": {
      "fn": "Vault.xSwapNative",
      "offset": [
        723,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "1943": {
      "fn": "Vault.xSwapNative",
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1946": {
      "op": "ADD"
    },
    "1947": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "1951": {
      "offset": [
        723,
        769
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1952": {
      "fn": "Vault.xSwapNative",
      "offset": [
        723,
        769
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1953": {
      "op": "CALLVALUE"
    },
    "1954": {
      "offset": [
        723,
        769
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1955": {
      "fn": "Vault.xSwapNative",
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x7F0"
    },
    "1959": {
      "offset": [
        723,
        769
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1962": {
      "op": "MLOAD"
    },
    "1963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "DUP2"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1976": {
      "op": "DUP3"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1981": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1983": {
      "op": "DUP3"
    },
    "1984": {
      "offset": [
        723,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "1985": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "MSTORE",
      "path": "13",
      "statement": 8
    },
    "1986": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x5368617265643A2075696E7420696E70757420697320656D7074790000000000"
    },
    "2019": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14832,
        14842
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2021": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14832,
        14842
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2022": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "ADD",
      "path": "13"
    },
    "2023": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2024": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2026": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "ADD",
      "path": "13"
    },
    "2027": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14787,
        14795
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "2031": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14787,
        14795
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2032": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14797,
        14807
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2033": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14797,
        14807
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2034": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14809,
        14819
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2036": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14809,
        14819
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2038": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14821,
        14830
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "2040": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14821,
        14830
      ],
      "op": "SHL",
      "path": "13"
    },
    "2041": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "SUB",
      "path": "13"
    },
    "2042": {
      "fn": "Vault.xSwapNative",
      "jump": "i",
      "offset": [
        14776,
        14843
      ],
      "op": "AND",
      "path": "13"
    },
    "2043": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x4DE49A59404BAF7C2B0D3DB254297AF01DC258CBC5D78CA37B8CF5A98CFDC200"
    },
    "2076": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2077": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2078": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2079": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2080": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2082": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2083": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14776,
        14843
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x831"
    },
    "2087": {
      "offset": [
        6070,
        6071
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2088": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2089": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2090": {
      "fn": "Vault.xSwapNative",
      "offset": [
        14580,
        14850
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2091": {
      "fn": "Vault.xSwapNative",
      "jump": "o",
      "offset": [
        14580,
        14850
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2092": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3EF6"
    },
    "2096": {
      "offset": [
        6024,
        6034
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2097": {
      "fn": "Vault.xCallToken",
      "offset": [
        6024,
        6034
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2100": {
      "op": "MLOAD"
    },
    "2101": {
      "op": "DUP1"
    },
    "2102": {
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2103": {
      "fn": "Vault.xCallToken",
      "offset": [
        6024,
        6034
      ],
      "op": "SUB",
      "path": "9"
    },
    "2104": {
      "fn": "Vault.xCallToken",
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2105": {
      "fn": "Vault.xCallToken",
      "offset": [
        6024,
        6034
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2106": {
      "offset": [
        6023,
        6034
      ],
      "op": "POP",
      "path": "9"
    },
    "2107": {
      "offset": [
        6015,
        6060
      ],
      "op": "POP",
      "path": "9"
    },
    "2108": {
      "fn": "Vault.xCallToken",
      "offset": [
        6015,
        6060
      ],
      "op": "POP",
      "path": "9"
    },
    "2109": {
      "fn": "Vault.xCallToken",
      "offset": [
        6015,
        6060
      ],
      "op": "POP",
      "path": "9"
    },
    "2110": {
      "fn": "Vault.xCallToken",
      "offset": [
        6015,
        6060
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2111": {
      "op": "JUMPDEST"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2114": {
      "op": "SLOAD"
    },
    "2115": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2117": {
      "fn": "Vault.xCallToken",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "offset": [
        6015,
        6060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2121": {
      "fn": "Vault.xCallToken",
      "offset": [
        6015,
        6060
      ],
      "op": "DIV",
      "path": "9"
    },
    "2122": {
      "fn": "Vault.xCallToken",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2124": {
      "op": "AND"
    },
    "2125": {
      "op": "ISZERO"
    },
    "2126": {
      "op": "PUSH3",
      "value": "0x893"
    },
    "2130": {
      "op": "JUMPI"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2133": {
      "op": "MLOAD"
    },
    "2134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "op": "DUP2"
    },
    "2142": {
      "op": "MSTORE"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2152": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2154": {
      "offset": [
        30214,
        30228
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2155": {
      "fn": "Vault.xCallToken",
      "offset": [
        30214,
        30228
      ],
      "op": "ADD",
      "path": "13"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH21",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "2181": {
      "offset": [
        30214,
        30228
      ],
      "op": "SHL",
      "path": "13"
    },
    "2182": {
      "fn": "Vault.xCallToken",
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2184": {
      "fn": "Vault.xCallToken",
      "offset": [
        30214,
        30228
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2185": {
      "fn": "Vault.xCallToken",
      "offset": [
        30214,
        30228
      ],
      "op": "ADD",
      "path": "13"
    },
    "2186": {
      "offset": [
        30206,
        30258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2187": {
      "fn": "Vault.xCallToken",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2189": {
      "fn": "Vault.xCallToken",
      "offset": [
        30206,
        30258
      ],
      "op": "ADD",
      "path": "13"
    },
    "2190": {
      "fn": "Vault.xCallToken",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "2194": {
      "op": "JUMP"
    },
    "2195": {
      "op": "JUMPDEST"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2198": {
      "offset": [
        30206,
        30258
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2199": {
      "fn": "Vault.xCallToken",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2203": {
      "offset": [
        30206,
        30258
      ],
      "op": "SHL",
      "path": "13"
    },
    "2204": {
      "fn": "Vault.xCallToken",
      "offset": [
        30206,
        30258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2205": {
      "fn": "Vault.xCallToken",
      "offset": [
        30206,
        30258
      ],
      "op": "DIV",
      "path": "13"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2208": {
      "op": "AND"
    },
    "2209": {
      "op": "PUSH3",
      "value": "0x8EE"
    },
    "2213": {
      "op": "JUMPI"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2216": {
      "op": "MLOAD"
    },
    "2217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2223": {
      "op": "SHL"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "MSTORE"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2230": {
      "offset": [
        30206,
        30258
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "offset": [
        30206,
        30258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2233": {
      "fn": "Vault.xCallToken",
      "offset": [
        20859,
        20865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x19"
    },
    "2235": {
      "offset": [
        731,
        737
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2237": {
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2238": {
      "fn": "Vault.xCallToken",
      "offset": [
        723,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "2239": {
      "fn": "Vault.xCallToken",
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2240": {
      "fn": "Vault.xCallToken",
      "offset": [
        723,
        769
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5661756C743A207843616C6C73206E6F7420656E61626C656400000000000000"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2275": {
      "op": "DUP3"
    },
    "2276": {
      "op": "ADD"
    },
    "2277": {
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2278": {
      "fn": "Vault.xCallToken",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2280": {
      "op": "ADD"
    },
    "2281": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x562"
    },
    "2285": {
      "fn": "Vault.xCallToken",
      "offset": [
        723,
        769
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2286": {
      "fn": "Vault.xCallToken",
      "offset": [
        723,
        769
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2287": {
      "op": "DUP2"
    },
    "2288": {
      "op": "DUP1"
    },
    "2289": {
      "op": "PUSH3",
      "value": "0x93E"
    },
    "2293": {
      "op": "JUMPI"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2296": {
      "op": "MLOAD"
    },
    "2297": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "DUP2"
    },
    "2305": {
      "op": "MSTORE"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2310": {
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2311": {
      "op": "ADD"
    },
    "2312": {
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2313": {
      "fn": "Vault.xCallToken",
      "offset": [
        20877,
        20937
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x1B"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2317": {
      "op": "DUP3"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "MSTORE"
    },
    "2320": {
      "op": "PUSH32",
      "value": "0x5368617265643A2075696E7420696E70757420697320656D7074790000000000"
    },
    "2353": {
      "fn": "Vault.xCallToken",
      "offset": [
        20877,
        20902
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2355": {
      "fn": "Vault.xCallToken",
      "offset": [
        20877,
        20902
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2356": {
      "fn": "Vault.xCallToken",
      "offset": [
        20903,
        20913
      ],
      "op": "ADD",
      "path": "13"
    },
    "2357": {
      "fn": "Vault.xCallToken",
      "offset": [
        20923,
        20927
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2358": {
      "fn": "Vault.xCallToken",
      "offset": [
        20930,
        20936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2360": {
      "fn": "Vault.xCallToken",
      "offset": [
        20877,
        20902
      ],
      "op": "ADD",
      "path": "13"
    },
    "2361": {
      "fn": "Vault.xCallToken",
      "jump": "i",
      "offset": [
        20877,
        20937
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "2365": {
      "fn": "Vault.xCallToken",
      "offset": [
        20877,
        20937
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2366": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "JUMPDEST",
      "path": "13",
      "statement": 10
    },
    "2367": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x955"
    },
    "2371": {
      "fn": "Vault.xCallToken",
      "offset": [
        21097,
        21107
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2373": {
      "fn": "Vault.xCallToken",
      "offset": [
        21097,
        21107
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2375": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "2377": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "SHL",
      "path": "13"
    },
    "2378": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "SUB",
      "path": "13"
    },
    "2379": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2380": {
      "fn": "Vault.xCallToken",
      "offset": [
        20976,
        20984
      ],
      "op": "AND",
      "path": "13"
    },
    "2381": {
      "fn": "Vault.xCallToken",
      "offset": [
        20976,
        20984
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2382": {
      "fn": "Vault.xCallToken",
      "offset": [
        20998,
        21008
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2383": {
      "fn": "Vault.xCallToken",
      "offset": [
        20998,
        21008
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2384": {
      "fn": "Vault.xCallToken",
      "offset": [
        21022,
        21032
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x269A"
    },
    "2388": {
      "fn": "Vault.xCallToken",
      "offset": [
        21022,
        21032
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2389": {
      "fn": "Vault.xCallToken",
      "offset": [
        21054,
        21062
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2390": {
      "fn": "Vault.xCallToken",
      "offset": [
        21054,
        21062
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2391": {
      "fn": "Vault.xCallToken",
      "offset": [
        21077,
        21083
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2393": {
      "fn": "Vault.xCallToken",
      "offset": [
        21077,
        21083
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2395": {
      "fn": "Vault.xCallToken",
      "offset": [
        21121,
        21128
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "2397": {
      "fn": "Vault.xCallToken",
      "offset": [
        21121,
        21128
      ],
      "op": "SHL",
      "path": "13"
    },
    "2398": {
      "fn": "Vault.xCallToken",
      "offset": [
        21121,
        21128
      ],
      "op": "SUB",
      "path": "13"
    },
    "2399": {
      "fn": "Vault.xCallToken",
      "offset": [
        21121,
        21128
      ],
      "op": "AND",
      "path": "13"
    },
    "2400": {
      "fn": "Vault.xCallToken",
      "offset": [
        21142,
        21154
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x98D5C453EB58C7CE3C927A1B55FFBFDA38DF699446DA57678D54839D8B21E667"
    },
    "2433": {
      "fn": "Vault.xCallToken",
      "offset": [
        21142,
        21154
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2434": {
      "fn": "Vault.xCallToken",
      "offset": [
        21168,
        21181
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2435": {
      "fn": "Vault.xCallToken",
      "offset": [
        21168,
        21181
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2436": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2437": {
      "fn": "Vault.xCallToken",
      "jump": "i",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2438": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP14",
      "path": "13"
    },
    "2439": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP14",
      "path": "13"
    },
    "2440": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP14",
      "path": "13"
    },
    "2441": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2442": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2444": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2445": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x9A0"
    },
    "2449": {
      "fn": "Vault.xCallToken",
      "offset": [
        20952,
        21191
      ],
      "op": "SWAP10",
      "path": "13"
    },
    "2450": {
      "offset": [
        30268,
        30269
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "2451": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "2452": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "2453": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2454": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2455": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2456": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2457": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2458": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2459": {
      "fn": "Vault.xCallToken",
      "offset": [
        20542,
        21198
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3E71"
    },
    "2463": {
      "fn": "Vault.xCallToken",
      "jump": "o",
      "offset": [
        20542,
        21198
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2464": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2465": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3855,
        3862
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2467": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3881,
        3899
      ],
      "op": "MLOAD",
      "path": "9",
      "statement": 11
    },
    "2468": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3881,
        3897
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2469": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "jump": "i",
      "offset": [
        3881,
        3899
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2470": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3881,
        3899
      ],
      "op": "SUB",
      "path": "9"
    },
    "2471": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3874,
        3899
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2472": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3874,
        3899
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2473": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "offset": [
        3796,
        3906
      ],
      "op": "POP",
      "path": "9"
    },
    "2474": {
      "fn": "GovernanceCommunityGuarded.getCommunityKey",
      "jump": "o",
      "offset": [
        3796,
        3906
      ],
      "op": "POP",
      "path": "9"
    },
    "2475": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "POP",
      "path": "6"
    },
    "2476": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1645,
        1655
      ],
      "op": "POP",
      "path": "6"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "offset": [
        894,
        909
      ],
      "op": "POP",
      "path": "16"
    },
    "2483": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        894,
        909
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2484": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2485": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2487": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x9C0"
    },
    "2491": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2720"
    },
    "2495": {
      "op": "JUMP"
    },
    "2496": {
      "op": "JUMPDEST"
    },
    "2497": {
      "op": "SWAP1"
    },
    "2498": {
      "offset": [
        886,
        944
      ],
      "op": "POP",
      "path": "16"
    },
    "2499": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        886,
        944
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2500": {
      "op": "JUMP"
    },
    "2501": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2502": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        886,
        944
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2503": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "SUB"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "AND"
    },
    "2513": {
      "op": "PUSH3",
      "value": "0xA1E"
    },
    "2517": {
      "op": "JUMPI"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2520": {
      "op": "MLOAD"
    },
    "2521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "offset": [
        886,
        944
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2532": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2534": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2535": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2536": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2537": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1E"
    },
    "2539": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "2541": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2542": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2543": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2544": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1696,
        1703
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5368617265643A206164647265737320696E70757420697320656D7074790000"
    },
    "2577": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1696,
        1703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "2579": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1788,
        1818
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2580": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1788,
        1818
      ],
      "op": "ADD",
      "path": "6"
    },
    "2581": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2582": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1848,
        1866
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "2584": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1848,
        1866
      ],
      "op": "ADD",
      "path": "6"
    },
    "2585": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1848,
        1866
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x562"
    },
    "2589": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1848,
        1866
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2590": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1696,
        1703
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2591": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1848,
        1866
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2593": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "jump": "i",
      "offset": [
        1848,
        1866
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2594": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1848,
        1866
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2597": {
      "op": "DUP2"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "SWAP1"
    },
    "2600": {
      "op": "SWAP2"
    },
    "2601": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2602": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2603": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2604": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x420E675900000000000000000000000000000000000000000000000000000000"
    },
    "2637": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2638": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2639": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1868,
        1883
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xA5D"
    },
    "2643": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1868,
        1883
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2645": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1868,
        1883
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2646": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1868,
        1883
      ],
      "op": "ADD",
      "path": "6"
    },
    "2647": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2648": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x30B3"
    },
    "2652": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2653": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2658": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "2660": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "SHL",
      "path": "6"
    },
    "2661": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "SUB",
      "path": "6"
    },
    "2662": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "AND",
      "path": "6"
    },
    "2663": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2664": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2665": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2667": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2668": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2669": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2671": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2672": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "2673": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2674": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2675": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1891,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2677": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1891,
        1904
      ],
      "op": "ADD",
      "path": "6"
    },
    "2678": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1891,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2680": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1891,
        1904
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2681": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2682": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2684": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2685": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2687": {
      "op": "DUP2"
    },
    "2688": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2689": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2691": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2692": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2693": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2695": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1840,
        1917
      ],
      "op": "ADD",
      "path": "6"
    },
    "2696": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "2697": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2698": {
      "op": "MSTORE"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2704": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2706": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2708": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "2710": {
      "op": "SHL"
    },
    "2711": {
      "op": "SUB"
    },
    "2712": {
      "op": "AND"
    },
    "2713": {
      "op": "DUP2"
    },
    "2714": {
      "op": "MSTORE"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "op": "DUP5"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2719": {
      "op": "MLOAD"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "PUSH3",
      "value": "0xAAF"
    },
    "2727": {
      "op": "SWAP3"
    },
    "2728": {
      "op": "SWAP2"
    },
    "2729": {
      "op": "SWAP1"
    },
    "2730": {
      "op": "PUSH3",
      "value": "0x3C20"
    },
    "2734": {
      "op": "JUMP"
    },
    "2735": {
      "op": "JUMPDEST"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2738": {
      "op": "DUP1"
    },
    "2739": {
      "op": "MLOAD"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2742": {
      "op": "NOT"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "DUP5"
    },
    "2745": {
      "op": "SUB"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "DUP2"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "op": "SWAP2"
    },
    "2750": {
      "op": "SWAP1"
    },
    "2751": {
      "op": "MSTORE"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2754": {
      "op": "DUP2"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "DUP1"
    },
    "2757": {
      "op": "MLOAD"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2764": {
      "op": "SHL"
    },
    "2765": {
      "op": "SUB"
    },
    "2766": {
      "op": "AND"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2773": {
      "op": "SHL"
    },
    "2774": {
      "op": "SUB"
    },
    "2775": {
      "op": "NOT"
    },
    "2776": {
      "op": "SWAP1"
    },
    "2777": {
      "op": "SWAP4"
    },
    "2778": {
      "op": "AND"
    },
    "2779": {
      "op": "SWAP3"
    },
    "2780": {
      "op": "SWAP1"
    },
    "2781": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2782": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "OR",
      "path": "6"
    },
    "2783": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2784": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2785": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2786": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2787": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2788": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xAF6"
    },
    "2792": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2794": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SUB",
      "path": "6"
    },
    "2803": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "AND",
      "path": "6"
    },
    "2804": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2805": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2806": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2807": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2809": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "op": "SUB"
    },
    "2815": {
      "op": "AND"
    },
    "2816": {
      "op": "PUSH4",
      "value": "0xA58A3F1D"
    },
    "2821": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2822": {
      "op": "DUP4"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2825": {
      "op": "MLOAD"
    },
    "2826": {
      "op": "DUP4"
    },
    "2827": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2832": {
      "op": "AND"
    },
    "2833": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2835": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SHL",
      "path": "6"
    },
    "2836": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2837": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2838": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2840": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "ADD",
      "path": "6"
    },
    "2841": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xB25"
    },
    "2845": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2846": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2847": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1744,
        1967
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2848": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x393A"
    },
    "2852": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2853": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2854": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2856": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2858": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2859": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2860": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2861": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "2862": {
      "op": "DUP2"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2865": {
      "op": "DUP8"
    },
    "2866": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2867": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2868": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2869": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2870": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2871": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xB40"
    },
    "2875": {
      "op": "JUMPI"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2878": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2879": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2880": {
      "offset": [
        3192,
        3199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2881": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "POP",
      "path": "6"
    },
    "2882": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "GAS",
      "path": "6"
    },
    "2883": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1717,
        1981
      ],
      "op": "CALL",
      "path": "6"
    },
    "2884": {
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2885": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2886": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2887": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xB55"
    },
    "2891": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2892": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2893": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2895": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2896": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2897": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2898": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2900": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2901": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2902": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "2903": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "2904": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2906": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2907": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2908": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "2941": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "2942": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2944": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2946": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "2948": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "2949": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "2950": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2951": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "2952": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2953": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2954": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "OR",
      "path": "6"
    },
    "2955": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2956": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2957": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2958": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2960": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2961": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2962": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2963": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2964": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xD18040E514983D65F088430E69091AEA9BF07FEAED3696A3FAAC1CCC34B5E3BC"
    },
    "2997": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2998": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3001": {
      "op": "ADD"
    },
    "3002": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2017
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 12
    },
    "3003": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "POP",
      "path": "6"
    },
    "3004": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3006": {
      "op": "MLOAD"
    },
    "3007": {
      "op": "DUP1"
    },
    "3008": {
      "op": "SWAP2"
    },
    "3009": {
      "op": "SUB"
    },
    "3010": {
      "op": "SWAP1"
    },
    "3011": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "LOG1",
      "path": "6"
    },
    "3012": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "POP",
      "path": "6"
    },
    "3013": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "POP",
      "path": "6"
    },
    "3014": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "POP",
      "path": "6"
    },
    "3015": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "POP",
      "path": "6"
    },
    "3016": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "POP",
      "path": "6"
    },
    "3017": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3018": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3019": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3021": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x9C0"
    },
    "3025": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2006,
        2030
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2619"
    },
    "3029": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "JUMP",
      "path": "6",
      "statement": 13
    },
    "3030": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3031": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3033": {
      "op": "SLOAD"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3038": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "SHL",
      "path": "6"
    },
    "3039": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3040": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "DIV",
      "path": "6"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3043": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "AND",
      "path": "6"
    },
    "3044": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3045": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xC2A"
    },
    "3049": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3052": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3053": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x461BCD"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3059": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        2045,
        2083
      ],
      "op": "SHL",
      "path": "6"
    },
    "3060": {
      "offset": [
        954,
        955
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3061": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        954,
        955
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3062": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3064": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3066": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "offset": [
        1512,
        2090
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3067": {
      "fn": "AggKeyNonceConsumer.updateKeyManager",
      "jump": "o",
      "offset": [
        1512,
        2090
      ],
      "op": "ADD",
      "path": "6"
    },
    "3068": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4429,
        4531
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3069": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4484,
        4491
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x15"
    },
    "3071": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4510,
        4524
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 14,
      "value": "0x24"
    },
    "3073": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "offset": [
        4510,
        4522
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3074": {
      "fn": "GovernanceCommunityGuarded.getGovernor",
      "jump": "i",
      "offset": [
        4510,
        4524
      ],
      "op": "ADD",
      "path": "9"
    },
    "3075": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3076": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH21",
      "path": "9",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "3098": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5A"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "offset": [
        6024,
        6034
      ],
      "op": "ADD",
      "path": "9"
    },
    "3105": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6024,
        6034
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3106": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3108": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6024,
        6034
      ],
      "op": "ADD",
      "path": "9"
    },
    "3109": {
      "offset": [
        6023,
        6034
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "3113": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3114": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3115": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3116": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3117": {
      "op": "PUSH3",
      "value": "0xC7A"
    },
    "3121": {
      "op": "JUMPI"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3124": {
      "offset": [
        6015,
        6060
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3125": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x461BCD"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3131": {
      "offset": [
        6015,
        6060
      ],
      "op": "SHL",
      "path": "9"
    },
    "3132": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3133": {
      "fn": "Vault.xSwapToken",
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3138": {
      "op": "DUP3"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "op": "MSTORE"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3145": {
      "op": "DUP3"
    },
    "3146": {
      "op": "ADD"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "PUSH32",
      "value": "0x5368617265643A2075696E7420696E70757420697320656D7074790000000000"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3183": {
      "op": "DUP3"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "3193": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15968,
        15974
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3194": {
      "offset": [
        731,
        737
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3195": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xC91"
    },
    "3199": {
      "fn": "Vault.xSwapToken",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3201": {
      "fn": "Vault.xSwapToken",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3203": {
      "fn": "Vault.xSwapToken",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "op": "DUP5"
    },
    "3208": {
      "offset": [
        723,
        769
      ],
      "op": "AND",
      "path": "16"
    },
    "3209": {
      "fn": "Vault.xSwapToken",
      "offset": [
        723,
        769
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3210": {
      "op": "ADDRESS"
    },
    "3211": {
      "offset": [
        723,
        769
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3212": {
      "fn": "Vault.xSwapToken",
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x269A"
    },
    "3216": {
      "fn": "Vault.xSwapToken",
      "offset": [
        723,
        769
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3217": {
      "op": "JUMPDEST"
    },
    "3218": {
      "op": "CALLER"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3225": {
      "op": "SHL"
    },
    "3226": {
      "op": "SUB"
    },
    "3227": {
      "op": "AND"
    },
    "3228": {
      "op": "PUSH32",
      "value": "0x1E7B21F751C6D9FA3F98A51B607C124A07DF7C3C54EE98D0A37854AAA4F864D0"
    },
    "3261": {
      "op": "DUP8"
    },
    "3262": {
      "op": "DUP8"
    },
    "3263": {
      "op": "DUP8"
    },
    "3264": {
      "op": "DUP8"
    },
    "3265": {
      "offset": [
        723,
        769
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3268": {
      "offset": [
        723,
        769
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3269": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15986,
        16046
      ],
      "op": "PUSH3",
      "path": "13",
      "statement": 15,
      "value": "0xCD4"
    },
    "3273": {
      "op": "SWAP6"
    },
    "3274": {
      "op": "SWAP5"
    },
    "3275": {
      "op": "SWAP4"
    },
    "3276": {
      "op": "SWAP3"
    },
    "3277": {
      "op": "SWAP2"
    },
    "3278": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15986,
        16011
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3279": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15986,
        16011
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3E1E"
    },
    "3283": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16012,
        16022
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3284": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16032,
        16036
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3285": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16039,
        16045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3287": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15986,
        16011
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3288": {
      "fn": "Vault.xSwapToken",
      "jump": "i",
      "offset": [
        15986,
        16046
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3289": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15986,
        16046
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3290": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "SUB",
      "path": "13",
      "statement": 16
    },
    "3291": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3292": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16132,
        16142
      ],
      "op": "LOG2",
      "path": "13"
    },
    "3293": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16132,
        16142
      ],
      "op": "POP",
      "path": "13"
    },
    "3294": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "POP",
      "path": "13"
    },
    "3295": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "POP",
      "path": "13"
    },
    "3296": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "POP",
      "path": "13"
    },
    "3297": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "POP",
      "path": "13"
    },
    "3298": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16071,
        16079
      ],
      "op": "POP",
      "path": "13"
    },
    "3299": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16071,
        16079
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3300": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16081,
        16091
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3301": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16081,
        16091
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3303": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16093,
        16103
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3304": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16093,
        16103
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3306": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16113,
        16121
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA8"
    },
    "3308": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16113,
        16121
      ],
      "op": "SHL",
      "path": "13"
    },
    "3309": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16124,
        16130
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3310": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16124,
        16130
      ],
      "op": "DIV",
      "path": "13"
    },
    "3311": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3313": {
      "fn": "Vault.xSwapToken",
      "jump": "i",
      "offset": [
        16061,
        16143
      ],
      "op": "AND",
      "path": "13"
    },
    "3314": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3315": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xD38"
    },
    "3319": {
      "offset": [
        16061,
        16143
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3320": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3322": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3323": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "3327": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "3329": {
      "fn": "Vault.xSwapToken",
      "offset": [
        16061,
        16143
      ],
      "op": "SHL",
      "path": "13"
    },
    "3330": {
      "offset": [
        6070,
        6071
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3331": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3332": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3334": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3336": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3337": {
      "fn": "Vault.xSwapToken",
      "offset": [
        15758,
        16150
      ],
      "op": "ADD",
      "path": "13"
    },
    "3338": {
      "fn": "Vault.xSwapToken",
      "jump": "o",
      "offset": [
        15758,
        16150
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3339": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x15"
    },
    "3341": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3343": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH21",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "3368": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5A"
    },
    "3370": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "SHL",
      "path": "9"
    },
    "3371": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "3373": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3374": {
      "offset": [
        6023,
        6034
      ],
      "op": "ADD",
      "path": "9"
    },
    "3375": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3376": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3378": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "3379": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "3383": {
      "op": "JUMP"
    },
    "3384": {
      "op": "JUMPDEST"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3387": {
      "offset": [
        6015,
        6060
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3388": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3391": {
      "offset": [
        6015,
        6060
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3392": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "3393": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3394": {
      "op": "SWAP2"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "DUP4"
    },
    "3397": {
      "op": "SWAP1"
    },
    "3398": {
      "op": "PUSH32",
      "value": "0x59DC4A0900000000000000000000000000000000000000000000000000000000"
    },
    "3431": {
      "op": "SWAP1"
    },
    "3432": {
      "op": "DUP1"
    },
    "3433": {
      "op": "PUSH3",
      "value": "0xD77"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3439": {
      "op": "DUP6"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "DUP6"
    },
    "3442": {
      "op": "PUSH3",
      "value": "0x30B3"
    },
    "3446": {
      "op": "JUMP"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3452": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "3454": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SHL",
      "path": "13"
    },
    "3455": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SUB",
      "path": "13"
    },
    "3456": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "AND",
      "path": "13"
    },
    "3457": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3458": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3459": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3461": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "ADD",
      "path": "13"
    },
    "3462": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3463": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3465": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11155,
        11162
      ],
      "op": "ADD",
      "path": "13"
    },
    "3466": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11155,
        11162
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "3467": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11247,
        11280
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3468": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11247,
        11280
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3469": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3471": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11310,
        11328
      ],
      "op": "ADD",
      "path": "13"
    },
    "3472": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11310,
        11328
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3474": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11310,
        11328
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3475": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11310,
        11328
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3476": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11155,
        11162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3478": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11310,
        11328
      ],
      "op": "ADD",
      "path": "13"
    },
    "3479": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11310,
        11328
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3481": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11310,
        11328
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3482": {
      "op": "MSTORE"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3485": {
      "op": "ADD"
    },
    "3486": {
      "op": "DUP7"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3489": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "ADD",
      "path": "13"
    },
    "3490": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "3491": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3492": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3493": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11330,
        11345
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3495": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11330,
        11345
      ],
      "op": "ADD",
      "path": "13"
    },
    "3496": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11330,
        11345
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3498": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11330,
        11345
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3500": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3502": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "3504": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SHL",
      "path": "13"
    },
    "3505": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SUB",
      "path": "13"
    },
    "3506": {
      "op": "AND"
    },
    "3507": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3508": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3509": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "POP",
      "path": "13"
    },
    "3510": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3511": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3512": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3514": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3515": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3517": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "ADD",
      "path": "13"
    },
    "3518": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xDCB"
    },
    "3522": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3523": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3524": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3525": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3526": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11353,
        11366
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3A4F"
    },
    "3530": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11353,
        11366
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3531": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11353,
        11366
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3532": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11353,
        11366
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3534": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3535": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3536": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3538": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "NOT",
      "path": "13"
    },
    "3539": {
      "op": "DUP2"
    },
    "3540": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3541": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "SUB",
      "path": "13"
    },
    "3542": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "ADD",
      "path": "13"
    },
    "3543": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11302,
        11379
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3544": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3545": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3546": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3547": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3548": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11401,
        11423
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3550": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11401,
        11423
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3551": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11401,
        11423
      ],
      "op": "ADD",
      "path": "13"
    },
    "3552": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11401,
        11423
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3553": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3554": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3556": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3558": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "3560": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SHL",
      "path": "13"
    },
    "3561": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SUB",
      "path": "13"
    },
    "3562": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "AND",
      "path": "13"
    },
    "3563": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3569": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SHL",
      "path": "13"
    },
    "3570": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SUB",
      "path": "13"
    },
    "3571": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "NOT",
      "path": "13"
    },
    "3572": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3573": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3574": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "AND",
      "path": "13"
    },
    "3575": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3576": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3577": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3578": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "OR",
      "path": "13"
    },
    "3579": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3580": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3581": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3582": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3583": {
      "op": "KECCAK256"
    },
    "3584": {
      "op": "PUSH3",
      "value": "0xE12"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "SLOAD"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "op": "SUB"
    },
    "3599": {
      "op": "AND"
    },
    "3600": {
      "op": "SWAP1"
    },
    "3601": {
      "op": "JUMP"
    },
    "3602": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3603": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3605": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3607": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "3609": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SHL",
      "path": "13"
    },
    "3610": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "SUB",
      "path": "13"
    },
    "3611": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "AND",
      "path": "13"
    },
    "3612": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA58A3F1D"
    },
    "3617": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3618": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11203,
        11441
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3619": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3621": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3622": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3623": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "3628": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "AND",
      "path": "13"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3631": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SHL",
      "path": "6"
    },
    "3632": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3633": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3636": {
      "op": "ADD"
    },
    "3637": {
      "op": "PUSH3",
      "value": "0xE41"
    },
    "3641": {
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3642": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3643": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3644": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x393A"
    },
    "3648": {
      "op": "JUMP"
    },
    "3649": {
      "op": "JUMPDEST"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3654": {
      "op": "MLOAD"
    },
    "3655": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3656": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3657": {
      "op": "SUB"
    },
    "3658": {
      "op": "DUP2"
    },
    "3659": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3661": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3662": {
      "offset": [
        3192,
        3199
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3663": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3664": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3665": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11176,
        11455
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3666": {
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3667": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xE5C"
    },
    "3671": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3672": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3674": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3675": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3676": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3677": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3678": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "GAS",
      "path": "6"
    },
    "3679": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "CALL",
      "path": "6"
    },
    "3680": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3681": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3682": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3683": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xE71"
    },
    "3687": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3688": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3689": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3691": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3692": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3693": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3694": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3696": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3697": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3698": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3699": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3700": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3701": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3702": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xE81"
    },
    "3706": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3707": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3708": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2766"
    },
    "3712": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3713": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3714": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3715": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3716": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3717": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3718": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "3719": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3720": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3721": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3723": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3724": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3726": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA8"
    },
    "3728": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "3729": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11480,
        11524
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 17
    },
    "3730": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11501,
        11523
      ],
      "op": "DIV",
      "path": "13"
    },
    "3731": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11501,
        11523
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3733": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11480,
        11500
      ],
      "op": "AND",
      "path": "13"
    },
    "3734": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11480,
        11524
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3735": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        11480,
        11524
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xEDC"
    },
    "3739": {
      "offset": [
        6070,
        6071
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3740": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        6070,
        6071
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3742": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3743": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "3747": {
      "fn": "Vault.deployAndFetchBatch",
      "offset": [
        10950,
        11531
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "3749": {
      "fn": "Vault.deployAndFetchBatch",
      "jump": "o",
      "offset": [
        10950,
        11531
      ],
      "op": "SHL",
      "path": "13"
    },
    "3750": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3751": {
      "offset": [
        6024,
        6034
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3752": {
      "fn": "Vault.allBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3756": {
      "op": "DUP3"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "offset": [
        6024,
        6034
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3759": {
      "fn": "Vault.allBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x15"
    },
    "3761": {
      "fn": "Vault.allBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3763": {
      "fn": "Vault.allBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3764": {
      "offset": [
        6023,
        6034
      ],
      "op": "ADD",
      "path": "9"
    },
    "3765": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3766": {
      "fn": "Vault.allBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH21",
      "path": "9",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "3788": {
      "fn": "Vault.allBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5A"
    },
    "3790": {
      "fn": "Vault.allBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "SHL",
      "path": "9"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3793": {
      "op": "DUP3"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3796": {
      "fn": "Vault.allBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3798": {
      "op": "ADD"
    },
    "3799": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "3803": {
      "fn": "Vault.allBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3804": {
      "fn": "Vault.allBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3807": {
      "op": "DUP1"
    },
    "3808": {
      "op": "MLOAD"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3811": {
      "op": "DUP2"
    },
    "3812": {
      "op": "ADD"
    },
    "3813": {
      "op": "SWAP1"
    },
    "3814": {
      "op": "SWAP2"
    },
    "3815": {
      "op": "MSTORE"
    },
    "3816": {
      "op": "DUP8"
    },
    "3817": {
      "op": "SWAP1"
    },
    "3818": {
      "op": "PUSH32",
      "value": "0x63E7334B00000000000000000000000000000000000000000000000000000000"
    },
    "3851": {
      "op": "SWAP1"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "PUSH3",
      "value": "0xF1B"
    },
    "3857": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3859": {
      "op": "DUP6"
    },
    "3860": {
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "3861": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3862": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "3866": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3867": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3868": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3870": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3872": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "3874": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SHL",
      "path": "13"
    },
    "3875": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SUB",
      "path": "13"
    },
    "3876": {
      "fn": "Vault.allBatch",
      "offset": [
        5325,
        5332
      ],
      "op": "AND",
      "path": "13"
    },
    "3877": {
      "fn": "Vault.allBatch",
      "offset": [
        5325,
        5332
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3878": {
      "fn": "Vault.allBatch",
      "offset": [
        5417,
        5439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3879": {
      "fn": "Vault.allBatch",
      "offset": [
        5417,
        5439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3881": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "ADD",
      "path": "13"
    },
    "3882": {
      "fn": "Vault.allBatch",
      "offset": [
        5469,
        5487
      ],
      "op": "DUP11",
      "path": "13"
    },
    "3883": {
      "fn": "Vault.allBatch",
      "offset": [
        5469,
        5487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3885": {
      "fn": "Vault.allBatch",
      "offset": [
        5469,
        5487
      ],
      "op": "ADD",
      "path": "13"
    },
    "3886": {
      "fn": "Vault.allBatch",
      "offset": [
        5469,
        5487
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "3887": {
      "fn": "Vault.allBatch",
      "offset": [
        5325,
        5332
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3888": {
      "fn": "Vault.allBatch",
      "offset": [
        5469,
        5487
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3889": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5469,
        5487
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3891": {
      "fn": "Vault.allBatch",
      "offset": [
        5469,
        5487
      ],
      "op": "ADD",
      "path": "13"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3894": {
      "op": "DUP2"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3898": {
      "op": "ADD"
    },
    "3899": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3901": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3902": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3903": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3905": {
      "fn": "Vault.allBatch",
      "offset": [
        5489,
        5504
      ],
      "op": "ADD",
      "path": "13"
    },
    "3906": {
      "fn": "Vault.allBatch",
      "offset": [
        5489,
        5504
      ],
      "op": "DUP11",
      "path": "13"
    },
    "3907": {
      "fn": "Vault.allBatch",
      "offset": [
        5489,
        5504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "3909": {
      "fn": "Vault.allBatch",
      "offset": [
        5489,
        5504
      ],
      "op": "ADD",
      "path": "13"
    },
    "3910": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "3911": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3912": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3913": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3918": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3920": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3922": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "3924": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SHL",
      "path": "13"
    },
    "3925": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SUB",
      "path": "13"
    },
    "3926": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "AND",
      "path": "13"
    },
    "3927": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3928": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3929": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "POP",
      "path": "13"
    },
    "3930": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3931": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3932": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3933": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3934": {
      "fn": "Vault.allBatch",
      "offset": [
        5512,
        5525
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3935": {
      "fn": "Vault.allBatch",
      "offset": [
        5512,
        5525
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3936": {
      "fn": "Vault.allBatch",
      "offset": [
        5512,
        5525
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3938": {
      "fn": "Vault.allBatch",
      "offset": [
        5512,
        5525
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3939": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3941": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "ADD",
      "path": "13"
    },
    "3942": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xF77"
    },
    "3946": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "3947": {
      "op": "SWAP7"
    },
    "3948": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "3949": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "3950": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3951": {
      "fn": "Vault.allBatch",
      "offset": [
        5461,
        5538
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3952": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3953": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3954": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3ABE"
    },
    "3958": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3959": {
      "fn": "Vault.allBatch",
      "offset": [
        5560,
        5582
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3960": {
      "fn": "Vault.allBatch",
      "offset": [
        5560,
        5582
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3962": {
      "fn": "Vault.allBatch",
      "offset": [
        5560,
        5582
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3963": {
      "fn": "Vault.allBatch",
      "offset": [
        5560,
        5582
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3964": {
      "fn": "Vault.allBatch",
      "offset": [
        5604,
        5620
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3966": {
      "fn": "Vault.allBatch",
      "offset": [
        5604,
        5620
      ],
      "op": "NOT",
      "path": "13"
    },
    "3967": {
      "fn": "Vault.allBatch",
      "offset": [
        5604,
        5620
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3968": {
      "fn": "Vault.allBatch",
      "offset": [
        5604,
        5620
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3969": {
      "fn": "Vault.allBatch",
      "offset": [
        5642,
        5661
      ],
      "op": "SUB",
      "path": "13"
    },
    "3970": {
      "fn": "Vault.allBatch",
      "offset": [
        5642,
        5661
      ],
      "op": "ADD",
      "path": "13"
    },
    "3971": {
      "fn": "Vault.allBatch",
      "offset": [
        5642,
        5661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3972": {
      "fn": "Vault.allBatch",
      "offset": [
        5642,
        5661
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3973": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3974": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3975": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3976": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3978": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3979": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "ADD",
      "path": "13"
    },
    "3980": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3981": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "3988": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SHL",
      "path": "13"
    },
    "3989": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SUB",
      "path": "13"
    },
    "3990": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "AND",
      "path": "13"
    },
    "3991": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3993": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3995": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "3997": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SHL",
      "path": "13"
    },
    "3998": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SUB",
      "path": "13"
    },
    "3999": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "NOT",
      "path": "13"
    },
    "4000": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4001": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "4002": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "AND",
      "path": "13"
    },
    "4003": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4004": {
      "op": "SWAP1"
    },
    "4005": {
      "op": "SWAP3"
    },
    "4006": {
      "op": "OR"
    },
    "4007": {
      "op": "DUP3"
    },
    "4008": {
      "op": "MSTORE"
    },
    "4009": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "KECCAK256"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0xFBE"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4018": {
      "op": "SLOAD"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4023": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "4025": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SHL",
      "path": "13"
    },
    "4026": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SUB",
      "path": "13"
    },
    "4027": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "AND",
      "path": "13"
    },
    "4028": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4029": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4030": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4031": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4033": {
      "fn": "Vault.allBatch",
      "offset": [
        5373,
        5679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4035": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "4037": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "SHL",
      "path": "13"
    },
    "4038": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "SUB",
      "path": "13"
    },
    "4039": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "AND",
      "path": "13"
    },
    "4040": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA58A3F1D"
    },
    "4045": {
      "op": "DUP4"
    },
    "4046": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4047": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4049": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4050": {
      "op": "DUP4"
    },
    "4051": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4056": {
      "op": "AND"
    },
    "4057": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "4059": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "4060": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4061": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "PUSH3",
      "value": "0xFED"
    },
    "4069": {
      "op": "SWAP3"
    },
    "4070": {
      "op": "SWAP2"
    },
    "4071": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4072": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x393A"
    },
    "4076": {
      "op": "JUMP"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4080": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4082": {
      "offset": [
        3192,
        3199
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4083": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4084": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4085": {
      "fn": "Vault.allBatch",
      "offset": [
        5346,
        5693
      ],
      "op": "SUB",
      "path": "13"
    },
    "4086": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4087": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4089": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4090": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4091": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4092": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4093": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4094": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4095": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1008"
    },
    "4099": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4100": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4102": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4103": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4104": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4105": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4106": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "GAS",
      "path": "6"
    },
    "4107": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "CALL",
      "path": "6"
    },
    "4108": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4109": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4110": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4111": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x101D"
    },
    "4115": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4116": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4117": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4119": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4120": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4121": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4122": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4124": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4125": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4126": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4127": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4128": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4129": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4130": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x102D"
    },
    "4134": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4135": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4136": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2766"
    },
    "4140": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4141": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4142": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1039"
    },
    "4146": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4147": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4148": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x280B"
    },
    "4152": {
      "fn": "Vault.allBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4153": {
      "fn": "Vault.allBatch",
      "offset": [
        5761,
        5805
      ],
      "op": "JUMPDEST",
      "path": "13",
      "statement": 18
    },
    "4154": {
      "fn": "Vault.allBatch",
      "offset": [
        5782,
        5804
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1045"
    },
    "4158": {
      "fn": "Vault.allBatch",
      "offset": [
        5782,
        5804
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4159": {
      "fn": "Vault.allBatch",
      "offset": [
        5761,
        5781
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4160": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5761,
        5805
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x28E9"
    },
    "4164": {
      "fn": "Vault.allBatch",
      "offset": [
        5761,
        5805
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4165": {
      "fn": "Vault.allBatch",
      "offset": [
        5864,
        5893
      ],
      "op": "JUMPDEST",
      "path": "13",
      "statement": 19
    },
    "4166": {
      "fn": "Vault.allBatch",
      "offset": [
        5876,
        5892
      ],
      "op": "POP",
      "path": "13"
    },
    "4167": {
      "fn": "Vault.allBatch",
      "offset": [
        5876,
        5892
      ],
      "op": "POP",
      "path": "13"
    },
    "4168": {
      "fn": "Vault.allBatch",
      "offset": [
        5864,
        5875
      ],
      "op": "POP",
      "path": "13"
    },
    "4169": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5864,
        5893
      ],
      "op": "POP",
      "path": "13"
    },
    "4170": {
      "fn": "Vault.allBatch",
      "offset": [
        5864,
        5893
      ],
      "op": "POP",
      "path": "13"
    },
    "4171": {
      "fn": "Vault.allBatch",
      "offset": [
        5934,
        5969
      ],
      "op": "POP",
      "path": "13",
      "statement": 20
    },
    "4172": {
      "fn": "Vault.allBatch",
      "offset": [
        5949,
        5968
      ],
      "op": "POP",
      "path": "13"
    },
    "4173": {
      "fn": "Vault.allBatch",
      "offset": [
        5949,
        5968
      ],
      "op": "POP",
      "path": "13"
    },
    "4174": {
      "fn": "Vault.allBatch",
      "offset": [
        5934,
        5948
      ],
      "op": "POP",
      "path": "13"
    },
    "4175": {
      "fn": "Vault.allBatch",
      "jump": "i",
      "offset": [
        5934,
        5969
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4176": {
      "fn": "Vault.allBatch",
      "offset": [
        5934,
        5969
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4177": {
      "offset": [
        6070,
        6071
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4179": {
      "fn": "Vault.allBatch",
      "offset": [
        6070,
        6071
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4180": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4182": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA8"
    },
    "4184": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "SHL",
      "path": "13"
    },
    "4185": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4186": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "DIV",
      "path": "13"
    },
    "4187": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4189": {
      "fn": "Vault.allBatch",
      "offset": [
        5005,
        5976
      ],
      "op": "AND",
      "path": "13"
    },
    "4190": {
      "fn": "Vault.allBatch",
      "jump": "o",
      "offset": [
        5005,
        5976
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4191": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x10A4"
    },
    "4195": {
      "offset": [
        6024,
        6034
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4196": {
      "fn": "Vault.executexCall",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4198": {
      "op": "MLOAD"
    },
    "4199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4205": {
      "offset": [
        6024,
        6034
      ],
      "op": "SHL",
      "path": "9"
    },
    "4206": {
      "fn": "Vault.executexCall",
      "offset": [
        6024,
        6034
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4207": {
      "fn": "Vault.executexCall",
      "offset": [
        6024,
        6034
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4208": {
      "fn": "Vault.executexCall",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4210": {
      "offset": [
        6023,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4212": {
      "offset": [
        6015,
        6060
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4213": {
      "fn": "Vault.executexCall",
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "4214": {
      "fn": "Vault.executexCall",
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4215": {
      "fn": "Vault.executexCall",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x15"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4219": {
      "op": "DUP3"
    },
    "4220": {
      "op": "ADD"
    },
    "4221": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4222": {
      "fn": "Vault.executexCall",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH21",
      "path": "9",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4246": {
      "offset": [
        6015,
        6060
      ],
      "op": "SHL",
      "path": "9"
    },
    "4247": {
      "fn": "Vault.executexCall",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4249": {
      "fn": "Vault.executexCall",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4254": {
      "op": "ADD"
    },
    "4255": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "4259": {
      "op": "JUMP"
    },
    "4260": {
      "op": "JUMPDEST"
    },
    "4261": {
      "op": "DUP6"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4268": {
      "op": "SHL"
    },
    "4269": {
      "op": "SUB"
    },
    "4270": {
      "op": "DUP2"
    },
    "4271": {
      "op": "AND"
    },
    "4272": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x10FD"
    },
    "4276": {
      "op": "JUMPI"
    },
    "4277": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4279": {
      "fn": "Vault.executexCall",
      "offset": [
        26369,
        26378
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4286": {
      "op": "SHL"
    },
    "4287": {
      "op": "DUP2"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "offset": [
        894,
        909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4291": {
      "fn": "Vault.executexCall",
      "offset": [
        894,
        909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4293": {
      "offset": [
        886,
        944
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4294": {
      "fn": "Vault.executexCall",
      "offset": [
        886,
        944
      ],
      "op": "ADD",
      "path": "16"
    },
    "4295": {
      "fn": "Vault.executexCall",
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4296": {
      "fn": "Vault.executexCall",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1E"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4300": {
      "op": "DUP3"
    },
    "4301": {
      "op": "ADD"
    },
    "4302": {
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4303": {
      "fn": "Vault.executexCall",
      "offset": [
        886,
        944
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5368617265643A206164647265737320696E70757420697320656D7074790000"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4338": {
      "offset": [
        886,
        944
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4339": {
      "fn": "Vault.executexCall",
      "offset": [
        886,
        944
      ],
      "op": "ADD",
      "path": "16"
    },
    "4340": {
      "fn": "Vault.executexCall",
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4343": {
      "op": "ADD"
    },
    "4344": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "4348": {
      "op": "JUMP"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4352": {
      "op": "DUP1"
    },
    "4353": {
      "op": "MLOAD"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4356": {
      "op": "DUP2"
    },
    "4357": {
      "op": "ADD"
    },
    "4358": {
      "op": "SWAP1"
    },
    "4359": {
      "op": "SWAP2"
    },
    "4360": {
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4361": {
      "op": "DUP9"
    },
    "4362": {
      "offset": [
        886,
        944
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4363": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x674BDFE200000000000000000000000000000000000000000000000000000000"
    },
    "4396": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4397": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4398": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x113C"
    },
    "4402": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4404": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4405": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "ADD",
      "path": "13"
    },
    "4406": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4407": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "4411": {
      "fn": "Vault.executexCall",
      "offset": [
        26418,
        26425
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4412": {
      "fn": "Vault.executexCall",
      "offset": [
        26418,
        26425
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4413": {
      "fn": "Vault.executexCall",
      "offset": [
        26510,
        26536
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4415": {
      "fn": "Vault.executexCall",
      "offset": [
        26510,
        26536
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4417": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "4419": {
      "fn": "Vault.executexCall",
      "offset": [
        26566,
        26584
      ],
      "op": "SHL",
      "path": "13"
    },
    "4420": {
      "fn": "Vault.executexCall",
      "offset": [
        26566,
        26584
      ],
      "op": "SUB",
      "path": "13"
    },
    "4421": {
      "fn": "Vault.executexCall",
      "offset": [
        26566,
        26584
      ],
      "op": "AND",
      "path": "13"
    },
    "4422": {
      "fn": "Vault.executexCall",
      "offset": [
        26566,
        26584
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4423": {
      "fn": "Vault.executexCall",
      "offset": [
        26418,
        26425
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4424": {
      "fn": "Vault.executexCall",
      "offset": [
        26566,
        26584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4426": {
      "fn": "Vault.executexCall",
      "jump": "i",
      "offset": [
        26566,
        26584
      ],
      "op": "ADD",
      "path": "13"
    },
    "4427": {
      "fn": "Vault.executexCall",
      "offset": [
        26566,
        26584
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "op": "CALLDATALOAD"
    },
    "4432": {
      "op": "DUP2"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4436": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "ADD",
      "path": "13"
    },
    "4437": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4439": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4440": {
      "fn": "Vault.executexCall",
      "offset": [
        26586,
        26601
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4441": {
      "fn": "Vault.executexCall",
      "offset": [
        26586,
        26601
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4443": {
      "fn": "Vault.executexCall",
      "offset": [
        26586,
        26601
      ],
      "op": "ADD",
      "path": "13"
    },
    "4444": {
      "fn": "Vault.executexCall",
      "offset": [
        26586,
        26601
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4446": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4447": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4448": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4450": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "ADD",
      "path": "13"
    },
    "4451": {
      "op": "DUP12"
    },
    "4452": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "4454": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "ADD",
      "path": "13"
    },
    "4455": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "4456": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4457": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4458": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4460": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "ADD",
      "path": "13"
    },
    "4461": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4463": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4465": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4467": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "4469": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "SHL",
      "path": "13"
    },
    "4470": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "SUB",
      "path": "13"
    },
    "4471": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "AND",
      "path": "13"
    },
    "4472": {
      "fn": "Vault.executexCall",
      "offset": [
        26609,
        26622
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4473": {
      "fn": "Vault.executexCall",
      "offset": [
        26609,
        26622
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4474": {
      "fn": "Vault.executexCall",
      "offset": [
        26609,
        26622
      ],
      "op": "POP",
      "path": "13"
    },
    "4475": {
      "fn": "Vault.executexCall",
      "offset": [
        26609,
        26622
      ],
      "op": "DUP10",
      "path": "13"
    },
    "4476": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP10",
      "path": "13"
    },
    "4477": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP10",
      "path": "13"
    },
    "4478": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP10",
      "path": "13"
    },
    "4479": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "DUP10",
      "path": "13"
    },
    "4480": {
      "op": "DUP10"
    },
    "4481": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4483": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4484": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4486": {
      "fn": "Vault.executexCall",
      "offset": [
        26558,
        26635
      ],
      "op": "ADD",
      "path": "13"
    },
    "4487": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1198"
    },
    "4491": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "4492": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "4493": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "4494": {
      "fn": "Vault.executexCall",
      "offset": [
        26657,
        26666
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "4495": {
      "fn": "Vault.executexCall",
      "offset": [
        26657,
        26666
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "4496": {
      "fn": "Vault.executexCall",
      "offset": [
        26688,
        26696
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4497": {
      "fn": "Vault.executexCall",
      "offset": [
        26688,
        26696
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4498": {
      "fn": "Vault.executexCall",
      "offset": [
        26718,
        26728
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4499": {
      "fn": "Vault.executexCall",
      "offset": [
        26718,
        26728
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x39A6"
    },
    "4503": {
      "fn": "Vault.executexCall",
      "offset": [
        26718,
        26728
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4504": {
      "fn": "Vault.executexCall",
      "offset": [
        26718,
        26728
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4505": {
      "fn": "Vault.executexCall",
      "offset": [
        26750,
        26757
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4507": {
      "fn": "Vault.executexCall",
      "offset": [
        26750,
        26757
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4508": {
      "fn": "Vault.executexCall",
      "offset": [
        26750,
        26757
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4509": {
      "fn": "Vault.executexCall",
      "offset": [
        26750,
        26757
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "4511": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "NOT",
      "path": "13"
    },
    "4512": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4513": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4514": {
      "fn": "Vault.executexCall",
      "jump": "i",
      "offset": [
        26466,
        26775
      ],
      "op": "SUB",
      "path": "13"
    },
    "4515": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "ADD",
      "path": "13"
    },
    "4516": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4517": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4518": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4519": {
      "op": "SWAP1"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4523": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4524": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "ADD",
      "path": "13"
    },
    "4525": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4526": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4527": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4529": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4531": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "4533": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SHL",
      "path": "13"
    },
    "4534": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SUB",
      "path": "13"
    },
    "4535": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "AND",
      "path": "13"
    },
    "4536": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4538": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4540": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "4542": {
      "op": "SHL"
    },
    "4543": {
      "op": "SUB"
    },
    "4544": {
      "op": "NOT"
    },
    "4545": {
      "op": "SWAP1"
    },
    "4546": {
      "op": "SWAP4"
    },
    "4547": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "AND",
      "path": "13"
    },
    "4548": {
      "op": "SWAP3"
    },
    "4549": {
      "op": "SWAP1"
    },
    "4550": {
      "op": "SWAP3"
    },
    "4551": {
      "op": "OR"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4555": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4556": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "4557": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11DF"
    },
    "4561": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4563": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4564": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4566": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4568": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "4570": {
      "fn": "Vault.executexCall",
      "offset": [
        26466,
        26775
      ],
      "op": "SHL",
      "path": "13"
    },
    "4571": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "SUB",
      "path": "13"
    },
    "4572": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "AND",
      "path": "13"
    },
    "4573": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4574": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4575": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4580": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "4582": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "op": "AND"
    },
    "4585": {
      "op": "PUSH4",
      "value": "0xA58A3F1D"
    },
    "4590": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4591": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4592": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4594": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4595": {
      "op": "DUP4"
    },
    "4596": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4601": {
      "op": "AND"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4604": {
      "op": "SHL"
    },
    "4605": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4606": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4609": {
      "op": "ADD"
    },
    "4610": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x120E"
    },
    "4614": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4615": {
      "offset": [
        3192,
        3199
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4616": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4617": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x393A"
    },
    "4621": {
      "fn": "Vault.executexCall",
      "offset": [
        26439,
        26789
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4622": {
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4623": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4625": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4627": {
      "fn": "Vault.executexCall",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4628": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4629": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4630": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "4631": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4632": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4634": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4635": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4636": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4637": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4638": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4639": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4640": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1229"
    },
    "4644": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4645": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4647": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4648": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4649": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4650": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4651": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "GAS",
      "path": "6"
    },
    "4652": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "CALL",
      "path": "6"
    },
    "4653": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4654": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4655": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4656": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x123E"
    },
    "4660": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4661": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4662": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4664": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4665": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4666": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4667": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4669": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4670": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4671": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4672": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "4673": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4675": {
      "fn": "Vault.executexCall",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4676": {
      "op": "PUSH32",
      "value": "0x74D6D33300000000000000000000000000000000000000000000000000000000"
    },
    "4709": {
      "op": "DUP2"
    },
    "4710": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "MSTORE",
      "path": "13",
      "statement": 21
    },
    "4711": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4713": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4715": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "4717": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "SHL",
      "path": "13"
    },
    "4718": {
      "op": "SUB"
    },
    "4719": {
      "op": "DUP13"
    },
    "4720": {
      "op": "AND"
    },
    "4721": {
      "op": "SWAP3"
    },
    "4722": {
      "op": "POP"
    },
    "4723": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26851
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x74D6D333"
    },
    "4728": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26851
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4729": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26851
      ],
      "op": "POP",
      "path": "13"
    },
    "4730": {
      "op": "PUSH3",
      "value": "0x1291"
    },
    "4734": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26851
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4735": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26851
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4736": {
      "op": "SWAP1"
    },
    "4737": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4738": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4739": {
      "fn": "Vault.executexCall",
      "offset": [
        26852,
        26860
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4740": {
      "fn": "Vault.executexCall",
      "offset": [
        26852,
        26860
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4741": {
      "fn": "Vault.executexCall",
      "offset": [
        26862,
        26872
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4742": {
      "fn": "Vault.executexCall",
      "offset": [
        26862,
        26872
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4743": {
      "fn": "Vault.executexCall",
      "offset": [
        26862,
        26872
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4744": {
      "fn": "Vault.executexCall",
      "offset": [
        26862,
        26872
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4745": {
      "fn": "Vault.executexCall",
      "offset": [
        26874,
        26881
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4747": {
      "fn": "Vault.executexCall",
      "offset": [
        26874,
        26881
      ],
      "op": "ADD",
      "path": "13"
    },
    "4748": {
      "fn": "Vault.executexCall",
      "offset": [
        26874,
        26881
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3D84"
    },
    "4752": {
      "fn": "Vault.executexCall",
      "offset": [
        26874,
        26881
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4753": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4754": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4756": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4758": {
      "fn": "Vault.executexCall",
      "jump": "i",
      "offset": [
        26814,
        26882
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4759": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4760": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4761": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "SUB",
      "path": "13"
    },
    "4762": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4763": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4765": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4766": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4767": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4768": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4769": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4770": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4771": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12AC"
    },
    "4775": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4776": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4778": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4779": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4780": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4781": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4782": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "GAS",
      "path": "13"
    },
    "4783": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "CALL",
      "path": "13"
    },
    "4784": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4785": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4786": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4787": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12C1"
    },
    "4791": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4792": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4793": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4795": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4796": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "4797": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4798": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4800": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4801": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4802": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4803": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4804": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4805": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4806": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4807": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4808": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4809": {
      "fn": "Vault.executexCall",
      "offset": [
        26814,
        26882
      ],
      "op": "POP",
      "path": "13"
    },
    "4810": {
      "offset": [
        954,
        955
      ],
      "op": "POP",
      "path": "16"
    },
    "4811": {
      "fn": "Vault.executexCall",
      "offset": [
        954,
        955
      ],
      "op": "POP",
      "path": "16"
    },
    "4812": {
      "offset": [
        6070,
        6071
      ],
      "op": "POP",
      "path": "9"
    },
    "4813": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "POP",
      "path": "13"
    },
    "4814": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "POP",
      "path": "13"
    },
    "4815": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "POP",
      "path": "13"
    },
    "4816": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4817": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4818": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x12DB"
    },
    "4822": {
      "fn": "Vault.executexCall",
      "offset": [
        26113,
        26889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2619"
    },
    "4826": {
      "fn": "Vault.executexCall",
      "jump": "o",
      "offset": [
        26113,
        26889
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4827": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4828": {
      "offset": [
        5711,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4830": {
      "offset": [
        5711,
        5723
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4832": {
      "jump": "i",
      "offset": [
        5711,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "4834": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5711,
        5725
      ],
      "op": "SHL",
      "path": "9"
    },
    "4835": {
      "op": "SUB"
    },
    "4836": {
      "op": "AND"
    },
    "4837": {
      "op": "CALLER"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "offset": [
        5697,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "4844": {
      "offset": [
        5697,
        5707
      ],
      "op": "SHL",
      "path": "9"
    },
    "4845": {
      "offset": [
        5697,
        5725
      ],
      "op": "SUB",
      "path": "9"
    },
    "4846": {
      "offset": [
        5689,
        5754
      ],
      "op": "AND",
      "path": "9"
    },
    "4847": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5689,
        5754
      ],
      "op": "EQ",
      "path": "9"
    },
    "4848": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x133D"
    },
    "4852": {
      "offset": [
        5689,
        5754
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4855": {
      "op": "MLOAD"
    },
    "4856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4860": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "4862": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5689,
        5754
      ],
      "op": "SHL",
      "path": "9"
    },
    "4863": {
      "op": "DUP2"
    },
    "4864": {
      "offset": [
        5689,
        5754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4865": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4867": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4869": {
      "op": "DUP3"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "MSTORE"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4876": {
      "op": "DUP3"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "MSTORE"
    },
    "4879": {
      "op": "PUSH32",
      "value": "0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4914": {
      "op": "DUP3"
    },
    "4915": {
      "op": "ADD"
    },
    "4916": {
      "op": "MSTORE"
    },
    "4917": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4919": {
      "op": "ADD"
    },
    "4920": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "4924": {
      "offset": [
        5204,
        5227
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4925": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5204,
        5227
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4928": {
      "op": "SLOAD"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "offset": [
        5204,
        5227
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "4933": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5204,
        5227
      ],
      "op": "SHL",
      "path": "9"
    },
    "4934": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5204,
        5227
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4935": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5204,
        5227
      ],
      "op": "DIV",
      "path": "9"
    },
    "4936": {
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4938": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5196,
        5267
      ],
      "op": "AND",
      "path": "9"
    },
    "4939": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x13A4"
    },
    "4943": {
      "offset": [
        5196,
        5267
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4946": {
      "op": "MLOAD"
    },
    "4947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4951": {
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "4953": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5196,
        5267
      ],
      "op": "SHL",
      "path": "9"
    },
    "4954": {
      "op": "DUP2"
    },
    "4955": {
      "offset": [
        5196,
        5267
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4956": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4958": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4960": {
      "op": "DUP3"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "MSTORE"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4967": {
      "op": "DUP3"
    },
    "4968": {
      "op": "ADD"
    },
    "4969": {
      "op": "MSTORE"
    },
    "4970": {
      "op": "PUSH32",
      "value": "0x476F7665726E616E63653A20636F6D6D756E69747920677561726420656E6162"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5005": {
      "op": "DUP3"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "op": "MSTORE"
    },
    "5008": {
      "op": "PUSH3",
      "value": "0x1B1959"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "5014": {
      "op": "SHL"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5017": {
      "op": "DUP3"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "op": "MSTORE"
    },
    "5020": {
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x84"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "5027": {
      "offset": [
        5865,
        5875
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5028": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5865,
        5875
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5031": {
      "op": "SLOAD"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5034": {
      "offset": [
        5865,
        5875
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "5036": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5865,
        5875
      ],
      "op": "SHL",
      "path": "9"
    },
    "5037": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5865,
        5875
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5038": {
      "branch": 67,
      "fn": "Vault.govWithdraw",
      "offset": [
        5865,
        5875
      ],
      "op": "DIV",
      "path": "9"
    },
    "5039": {
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "5041": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5857,
        5905
      ],
      "op": "AND",
      "path": "9"
    },
    "5042": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x13FF"
    },
    "5046": {
      "branch": 67,
      "offset": [
        5857,
        5905
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5049": {
      "op": "MLOAD"
    },
    "5050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5054": {
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "5056": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5857,
        5905
      ],
      "op": "SHL",
      "path": "9"
    },
    "5057": {
      "op": "DUP2"
    },
    "5058": {
      "offset": [
        5857,
        5905
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5059": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5061": {
      "fn": "Vault.govWithdraw",
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5063": {
      "op": "DUP3"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "MSTORE"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5070": {
      "op": "DUP3"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "MSTORE"
    },
    "5073": {
      "op": "PUSH32",
      "value": "0x476F7665726E616E63653A206E6F742073757370656E64656400000000000000"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5108": {
      "op": "DUP3"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "MSTORE"
    },
    "5111": {
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "5113": {
      "op": "ADD"
    },
    "5114": {
      "offset": [
        5857,
        5905
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "5118": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2630,
        2641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5119": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5120": {
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x127500"
    },
    "5124": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1416"
    },
    "5128": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5130": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5131": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5133": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5135": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "5137": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "SHL",
      "path": "13"
    },
    "5138": {
      "offset": [
        842,
        849
      ],
      "op": "SUB",
      "path": "13"
    },
    "5139": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        842,
        849
      ],
      "op": "AND",
      "path": "13"
    },
    "5140": {
      "op": "SWAP1"
    },
    "5141": {
      "op": "JUMP"
    },
    "5142": {
      "op": "JUMPDEST"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5147": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "5149": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SHL",
      "path": "6"
    },
    "5150": {
      "offset": [
        29986,
        30021
      ],
      "op": "SUB",
      "path": "13"
    },
    "5151": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30021
      ],
      "op": "AND",
      "path": "13"
    },
    "5152": {
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x53F0BB61"
    },
    "5157": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5159": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5160": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5161": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "5166": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "AND",
      "path": "13"
    },
    "5167": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "5169": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "SHL",
      "path": "13"
    },
    "5170": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5171": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5172": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5174": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ADD",
      "path": "13"
    },
    "5175": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5177": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5179": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5180": {
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5181": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5182": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "SUB",
      "path": "13"
    },
    "5183": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5184": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP7",
      "path": "13"
    },
    "5185": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5186": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "5187": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5188": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5189": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5190": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x144F"
    },
    "5194": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5195": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5197": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5198": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "13"
    },
    "5199": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5200": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "POP",
      "path": "13"
    },
    "5201": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "GAS",
      "path": "13"
    },
    "5202": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "5203": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5204": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5205": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5206": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1464"
    },
    "5210": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5211": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5212": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5214": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5215": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "5216": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5217": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5219": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "REVERT",
      "path": "13"
    },
    "5220": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5221": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "POP",
      "path": "13"
    },
    "5222": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "POP",
      "path": "13"
    },
    "5223": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "POP",
      "path": "13"
    },
    "5224": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "POP",
      "path": "13"
    },
    "5225": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5227": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5228": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5229": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5231": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "NOT",
      "path": "13"
    },
    "5232": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5234": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5235": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ADD",
      "path": "13"
    },
    "5236": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "AND",
      "path": "13"
    },
    "5237": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5238": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ADD",
      "path": "13"
    },
    "5239": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5240": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5242": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5243": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "POP",
      "path": "13"
    },
    "5244": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5245": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "ADD",
      "path": "13"
    },
    "5246": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "jump": "i",
      "offset": [
        29986,
        30023
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5247": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29986,
        30023
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x148A"
    },
    "5251": {
      "offset": [
        29968,
        30023
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5252": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29968,
        30023
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5253": {
      "offset": [
        29968,
        29983
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x349F"
    },
    "5257": {
      "offset": [
        29968,
        30023
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5258": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "jump": "i",
      "offset": [
        29968,
        30023
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5259": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29968,
        30023
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1496"
    },
    "5263": {
      "offset": [
        29968,
        30053
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5264": {
      "branch": 60,
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29968,
        30053
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "5265": {
      "offset": [
        29947,
        30101
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3FB4"
    },
    "5269": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29947,
        30101
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5270": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29947,
        30101
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5271": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29947,
        30101
      ],
      "op": "LT",
      "path": "13"
    },
    "5272": {
      "op": "ISZERO"
    },
    "5273": {
      "op": "PUSH3",
      "value": "0x14E6"
    },
    "5277": {
      "op": "JUMPI"
    },
    "5278": {
      "offset": [
        29947,
        30101
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5280": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29947,
        30101
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5285": {
      "offset": [
        29947,
        30101
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "5287": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29947,
        30101
      ],
      "op": "SHL",
      "path": "13"
    },
    "5288": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        29947,
        30101
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5289": {
      "op": "MSTORE"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5294": {
      "op": "DUP3"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "op": "MSTORE"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5301": {
      "op": "DUP3"
    },
    "5302": {
      "op": "ADD"
    },
    "5303": {
      "op": "MSTORE"
    },
    "5304": {
      "op": "PUSH32",
      "value": "0x5661756C743A206E6F7420656E6F7567682074696D6500000000000000000000"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5339": {
      "offset": [
        29947,
        30101
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5340": {
      "op": "ADD"
    },
    "5341": {
      "offset": [
        29947,
        30101
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5342": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27961,
        27986
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "5344": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "ADD",
      "path": "6"
    },
    "5345": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x562"
    },
    "5349": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5350": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5351": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5353": {
      "op": "DUP1"
    },
    "5354": {
      "op": "SLOAD"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5357": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5359": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "5361": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SHL",
      "path": "13"
    },
    "5362": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SUB",
      "path": "13"
    },
    "5363": {
      "op": "AND"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5370": {
      "op": "SHL"
    },
    "5371": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SUB",
      "path": "6"
    },
    "5372": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "AND",
      "path": "6"
    },
    "5373": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCD1B4D20"
    },
    "5378": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5380": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28029
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5381": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28029
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5382": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "5387": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "AND",
      "path": "13"
    },
    "5388": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "5390": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SHL",
      "path": "13"
    },
    "5391": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5392": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5393": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5395": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ADD",
      "path": "13"
    },
    "5396": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5398": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5400": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5401": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5402": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5403": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SUB",
      "path": "13"
    },
    "5404": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5405": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5406": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5407": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "5408": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5409": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5410": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5411": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x152C"
    },
    "5415": {
      "branch": 60,
      "offset": [
        27997,
        28031
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5416": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5418": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5419": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "REVERT",
      "path": "13"
    },
    "5420": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5421": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "POP",
      "path": "13"
    },
    "5422": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "GAS",
      "path": "13"
    },
    "5423": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "5424": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5425": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5426": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5427": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1541"
    },
    "5431": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5432": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5433": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5435": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5436": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "5437": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5438": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5440": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "REVERT",
      "path": "13"
    },
    "5441": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5442": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "POP",
      "path": "13"
    },
    "5443": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "POP",
      "path": "13"
    },
    "5444": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "POP",
      "path": "13"
    },
    "5445": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "POP",
      "path": "13"
    },
    "5446": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5448": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5449": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5450": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5452": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "NOT",
      "path": "13"
    },
    "5453": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5455": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5456": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ADD",
      "path": "13"
    },
    "5457": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "AND",
      "path": "13"
    },
    "5458": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5459": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ADD",
      "path": "13"
    },
    "5460": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5461": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5463": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5464": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "POP",
      "path": "13"
    },
    "5465": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5466": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "ADD",
      "path": "13"
    },
    "5467": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5468": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1567"
    },
    "5472": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5473": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5474": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30D3"
    },
    "5478": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5479": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27997,
        28031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5480": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27961,
        28032
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5481": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27961,
        28032
      ],
      "op": "POP",
      "path": "13"
    },
    "5482": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28096,
        28105
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5484": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5485": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28111,
        28128
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5486": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28111,
        28128
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5487": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28111,
        28128
      ],
      "op": "LT",
      "path": "13"
    },
    "5488": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5489": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16FB"
    },
    "5493": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5494": {
      "offset": [
        444,
        486
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "5515": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28159
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5516": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28159
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5517": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28160,
        28161
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5518": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5519": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5520": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "LT",
      "path": "13"
    },
    "5521": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x159F"
    },
    "5525": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5526": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x159F"
    },
    "5530": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "5534": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28153,
        28162
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5535": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5536": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5537": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "POP",
      "path": "13"
    },
    "5538": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5540": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "MUL",
      "path": "13"
    },
    "5541": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "ADD",
      "path": "13"
    },
    "5542": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5544": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5545": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "ADD",
      "path": "13"
    },
    "5546": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5547": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x15B6"
    },
    "5551": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5552": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5553": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "5557": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28153,
        28162
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5558": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28162
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5565": {
      "op": "SHL"
    },
    "5566": {
      "op": "SUB"
    },
    "5567": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28178
      ],
      "op": "AND",
      "path": "13"
    },
    "5568": {
      "branch": 61,
      "fn": "Vault.govWithdraw",
      "offset": [
        28153,
        28178
      ],
      "op": "EQ",
      "path": "13"
    },
    "5569": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28149,
        28384
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5570": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28149,
        28384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x15ED"
    },
    "5574": {
      "branch": 61,
      "fn": "Vault.govWithdraw",
      "offset": [
        28149,
        28384
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5575": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28198,
        28255
      ],
      "op": "PUSH3",
      "path": "13",
      "statement": 22,
      "value": "0x15E7"
    },
    "5579": {
      "offset": [
        444,
        486
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "5600": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28222,
        28231
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5601": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28233,
        28254
      ],
      "op": "SELFBALANCE",
      "path": "13"
    },
    "5602": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28198,
        28207
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2984"
    },
    "5606": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28198,
        28255
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5607": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28198,
        28255
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5608": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28149,
        28384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16E6"
    },
    "5612": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28149,
        28384
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5613": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28149,
        28384
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5614": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28294,
        28369
      ],
      "op": "PUSH3",
      "path": "13",
      "statement": 23,
      "value": "0x16E6"
    },
    "5618": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28310
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5619": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28310
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5620": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28311,
        28312
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5621": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5622": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5623": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "LT",
      "path": "13"
    },
    "5624": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1606"
    },
    "5628": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5629": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1606"
    },
    "5633": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "5637": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28304,
        28313
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5638": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5639": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5640": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "POP",
      "path": "13"
    },
    "5641": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5643": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "MUL",
      "path": "13"
    },
    "5644": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "ADD",
      "path": "13"
    },
    "5645": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5647": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5648": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "ADD",
      "path": "13"
    },
    "5649": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5650": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x161D"
    },
    "5654": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5655": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5656": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "5660": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28304,
        28313
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5661": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28304,
        28313
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5662": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28315,
        28324
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5663": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28339
      ],
      "op": "DUP7",
      "path": "13"
    },
    "5664": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28339
      ],
      "op": "DUP7",
      "path": "13"
    },
    "5665": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28340,
        28341
      ],
      "op": "DUP6",
      "path": "13"
    },
    "5666": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5667": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5668": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "LT",
      "path": "13"
    },
    "5669": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1633"
    },
    "5673": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5674": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1633"
    },
    "5678": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "5682": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28333,
        28342
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5683": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5684": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5685": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "POP",
      "path": "13"
    },
    "5686": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5688": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "MUL",
      "path": "13"
    },
    "5689": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "ADD",
      "path": "13"
    },
    "5690": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5692": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5693": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "ADD",
      "path": "13"
    },
    "5694": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5695": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x164A"
    },
    "5699": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5700": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5701": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "5705": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28333,
        28342
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5706": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28333,
        28342
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5707": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5709": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5710": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x70A0823100000000000000000000000000000000000000000000000000000000"
    },
    "5743": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5744": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5745": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28362,
        28366
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "5746": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5748": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5749": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ADD",
      "path": "13"
    },
    "5750": {
      "op": "MSTORE"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5757": {
      "op": "SHL"
    },
    "5758": {
      "op": "SUB"
    },
    "5759": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5760": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5761": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5762": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "AND",
      "path": "13"
    },
    "5763": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5764": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "5769": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28353
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5772": {
      "op": "ADD"
    },
    "5773": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5775": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5777": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5778": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5779": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5780": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "SUB",
      "path": "13"
    },
    "5781": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5782": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP7",
      "path": "13"
    },
    "5783": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5784": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "5785": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5786": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5787": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5788": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16A5"
    },
    "5792": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5793": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5795": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5796": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "REVERT",
      "path": "13"
    },
    "5797": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5798": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "POP",
      "path": "13"
    },
    "5799": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "GAS",
      "path": "13"
    },
    "5800": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "5801": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5802": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5803": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5804": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16BA"
    },
    "5808": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5809": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5810": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5812": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5813": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "5814": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5815": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5817": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "REVERT",
      "path": "13"
    },
    "5818": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5819": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "POP",
      "path": "13"
    },
    "5820": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "POP",
      "path": "13"
    },
    "5821": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "POP",
      "path": "13"
    },
    "5822": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "POP",
      "path": "13"
    },
    "5823": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5825": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5826": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "5827": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5829": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "NOT",
      "path": "13"
    },
    "5830": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "5832": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5833": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ADD",
      "path": "13"
    },
    "5834": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "AND",
      "path": "13"
    },
    "5835": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5836": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ADD",
      "path": "13"
    },
    "5837": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5838": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5840": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5841": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "POP",
      "path": "13"
    },
    "5842": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5843": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "ADD",
      "path": "13"
    },
    "5844": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5845": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16E0"
    },
    "5849": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5850": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5851": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x349F"
    },
    "5855": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28326,
        28368
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5856": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28326,
        28368
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5857": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28294,
        28303
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2984"
    },
    "5861": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28294,
        28369
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5862": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28294,
        28369
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5863": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 24
    },
    "5864": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16F2"
    },
    "5868": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5869": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3FFD"
    },
    "5873": {
      "fn": "Vault.govWithdraw",
      "jump": "i",
      "offset": [
        28130,
        28133
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5874": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5875": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5876": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "POP",
      "path": "13"
    },
    "5877": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28130,
        28133
      ],
      "op": "POP",
      "path": "13"
    },
    "5878": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x156C"
    },
    "5882": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5883": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5884": {
      "fn": "Vault.govWithdraw",
      "offset": [
        28091,
        28394
      ],
      "op": "POP",
      "path": "13"
    },
    "5885": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27852,
        28400
      ],
      "op": "POP",
      "path": "13"
    },
    "5886": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "POP",
      "path": "13"
    },
    "5887": {
      "fn": "Vault.govWithdraw",
      "offset": [
        27663,
        28400
      ],
      "op": "POP",
      "path": "13"
    },
    "5888": {
      "fn": "Vault.govWithdraw",
      "jump": "o",
      "offset": [
        27663,
        28400
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5889": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5890": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5892": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6024,
        6034
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5897": {
      "op": "SHL"
    },
    "5898": {
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5899": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6024,
        6034
      ],
      "op": "DIV",
      "path": "9"
    },
    "5900": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "5902": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6024,
        6034
      ],
      "op": "AND",
      "path": "9"
    },
    "5903": {
      "offset": [
        6023,
        6034
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5904": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1755"
    },
    "5908": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5909": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5911": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6015,
        6060
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5918": {
      "op": "SHL"
    },
    "5919": {
      "offset": [
        6015,
        6060
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5920": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5923": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5925": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5926": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "5927": {
      "op": "MSTORE"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "ADD"
    },
    "5934": {
      "op": "MSTORE"
    },
    "5935": {
      "op": "PUSH21",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "5959": {
      "op": "SHL"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5962": {
      "op": "DUP3"
    },
    "5963": {
      "op": "ADD"
    },
    "5964": {
      "op": "MSTORE"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5967": {
      "op": "ADD"
    },
    "5968": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "5972": {
      "op": "JUMP"
    },
    "5973": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5974": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22770
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1764"
    },
    "5978": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22770
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5980": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22770
      ],
      "op": "DUP8",
      "path": "13"
    },
    "5981": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22770
      ],
      "op": "ADD",
      "path": "13"
    },
    "5982": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22764
      ],
      "op": "DUP8",
      "path": "13"
    },
    "5983": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22770
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "5987": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        22750,
        22770
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5988": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22750,
        22770
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5995": {
      "op": "SHL"
    },
    "5996": {
      "op": "SUB"
    },
    "5997": {
      "offset": [
        894,
        909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5998": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        894,
        909
      ],
      "op": "AND",
      "path": "16"
    },
    "5999": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x17BC"
    },
    "6003": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6004": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6006": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6013": {
      "op": "SHL"
    },
    "6014": {
      "offset": [
        886,
        944
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6015": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6018": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6020": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6021": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "ADD",
      "path": "16"
    },
    "6022": {
      "op": "MSTORE"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6027": {
      "op": "DUP3"
    },
    "6028": {
      "op": "ADD"
    },
    "6029": {
      "op": "MSTORE"
    },
    "6030": {
      "op": "PUSH32",
      "value": "0x5368617265643A206164647265737320696E70757420697320656D7074790000"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6065": {
      "op": "DUP3"
    },
    "6066": {
      "op": "ADD"
    },
    "6067": {
      "op": "MSTORE"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6070": {
      "op": "ADD"
    },
    "6071": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x562"
    },
    "6075": {
      "op": "JUMP"
    },
    "6076": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6077": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x17CE"
    },
    "6081": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6083": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "DUP9",
      "path": "13"
    },
    "6084": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "ADD",
      "path": "13"
    },
    "6085": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6087": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "DUP10",
      "path": "13"
    },
    "6088": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "ADD",
      "path": "13"
    },
    "6089": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "6093": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        22787,
        22811
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6094": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22787,
        22811
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6101": {
      "op": "SHL"
    },
    "6102": {
      "op": "SUB"
    },
    "6103": {
      "offset": [
        894,
        909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6104": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        894,
        909
      ],
      "op": "AND",
      "path": "16"
    },
    "6105": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x1826"
    },
    "6109": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6110": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6112": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "offset": [
        886,
        944
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6121": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6124": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6126": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6127": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        886,
        944
      ],
      "op": "ADD",
      "path": "16"
    },
    "6128": {
      "op": "MSTORE"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6133": {
      "op": "DUP3"
    },
    "6134": {
      "op": "ADD"
    },
    "6135": {
      "op": "MSTORE"
    },
    "6136": {
      "op": "PUSH32",
      "value": "0x5368617265643A206164647265737320696E70757420697320656D7074790000"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6171": {
      "op": "DUP3"
    },
    "6172": {
      "op": "ADD"
    },
    "6173": {
      "op": "MSTORE"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6176": {
      "op": "ADD"
    },
    "6177": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x562"
    },
    "6181": {
      "op": "JUMP"
    },
    "6182": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6183": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22828,
        22849
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6185": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22828,
        22849
      ],
      "op": "DUP9",
      "path": "13"
    },
    "6186": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22828,
        22849
      ],
      "op": "ADD",
      "path": "13"
    },
    "6187": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22828,
        22849
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "6188": {
      "offset": [
        731,
        737
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6189": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x187A"
    },
    "6193": {
      "offset": [
        723,
        769
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6194": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6196": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        723,
        769
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6203": {
      "op": "SHL"
    },
    "6204": {
      "offset": [
        723,
        769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6205": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6208": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6210": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6211": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        723,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "6212": {
      "op": "MSTORE"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6217": {
      "op": "DUP3"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "PUSH32",
      "value": "0x5368617265643A2075696E7420696E70757420697320656D7074790000000000"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6255": {
      "op": "DUP3"
    },
    "6256": {
      "op": "ADD"
    },
    "6257": {
      "op": "MSTORE"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6260": {
      "op": "ADD"
    },
    "6261": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x562"
    },
    "6265": {
      "op": "JUMP"
    },
    "6266": {
      "offset": [
        723,
        769
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6267": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6269": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6270": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6271": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "6273": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6274": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "ADD",
      "path": "13"
    },
    "6275": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6276": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6277": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6278": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22889,
        22896
      ],
      "op": "DUP11",
      "path": "13"
    },
    "6279": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22889,
        22896
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6280": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22981,
        23014
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x774D680100000000000000000000000000000000000000000000000000000000"
    },
    "6313": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22981,
        23014
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6314": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6315": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23044,
        23062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x18B9"
    },
    "6319": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23044,
        23062
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6321": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23044,
        23062
      ],
      "op": "DUP6",
      "path": "13"
    },
    "6322": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23044,
        23062
      ],
      "op": "ADD",
      "path": "13"
    },
    "6323": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22889,
        22896
      ],
      "op": "DUP6",
      "path": "13"
    },
    "6324": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23044,
        23062
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "6328": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        23044,
        23062
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6329": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23044,
        23062
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6336": {
      "op": "SHL"
    },
    "6337": {
      "op": "SUB"
    },
    "6338": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "AND",
      "path": "13"
    },
    "6339": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6340": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6341": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6343": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "ADD",
      "path": "13"
    },
    "6344": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23064,
        23071
      ],
      "op": "DUP14",
      "path": "13"
    },
    "6345": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23064,
        23079
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6347": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23064,
        23079
      ],
      "op": "ADD",
      "path": "13"
    },
    "6348": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23064,
        23079
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "6349": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6350": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6351": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6353": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "ADD",
      "path": "13"
    },
    "6354": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23081,
        23082
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6356": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6357": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6358": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6360": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "ADD",
      "path": "13"
    },
    "6361": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23084,
        23085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6363": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6364": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6365": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6367": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "ADD",
      "path": "13"
    },
    "6368": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23087,
        23094
      ],
      "op": "DUP14",
      "path": "13"
    },
    "6369": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23087,
        23100
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "6371": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23087,
        23100
      ],
      "op": "ADD",
      "path": "13"
    },
    "6372": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23087,
        23100
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "6373": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6374": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6375": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6377": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "ADD",
      "path": "13"
    },
    "6378": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23110,
        23111
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6386": {
      "op": "SHL"
    },
    "6387": {
      "op": "SUB"
    },
    "6388": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "AND",
      "path": "13"
    },
    "6389": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6390": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6391": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23036,
        23113
      ],
      "op": "POP",
      "path": "13"
    },
    "6392": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23135,
        23149
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6393": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23171,
        23179
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6394": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23201,
        23211
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6395": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23201,
        23211
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6396": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23233,
        23240
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6397": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23233,
        23240
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6398": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6400": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6401": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6403": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "ADD",
      "path": "13"
    },
    "6404": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1915"
    },
    "6408": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "6409": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "6410": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "6411": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "6412": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "6413": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6414": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6415": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6416": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3CE8"
    },
    "6420": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        22937,
        23258
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6421": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6422": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6424": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6425": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6428": {
      "op": "NOT"
    },
    "6429": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6430": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP5",
      "path": "13"
    },
    "6431": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SUB",
      "path": "13"
    },
    "6432": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "ADD",
      "path": "13"
    },
    "6433": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6434": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6435": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6436": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6437": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6438": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6440": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6441": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "ADD",
      "path": "13"
    },
    "6442": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6443": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6450": {
      "op": "SHL"
    },
    "6451": {
      "op": "SUB"
    },
    "6452": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "AND",
      "path": "13"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6459": {
      "op": "SHL"
    },
    "6460": {
      "op": "SUB"
    },
    "6461": {
      "op": "NOT"
    },
    "6462": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6463": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "6464": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "AND",
      "path": "13"
    },
    "6465": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6466": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6467": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6468": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "OR",
      "path": "13"
    },
    "6469": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6470": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6471": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22937,
        23258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6472": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6473": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6474": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x195C"
    },
    "6478": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6480": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6483": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6485": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "6487": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "6488": {
      "op": "SUB"
    },
    "6489": {
      "op": "AND"
    },
    "6490": {
      "op": "SWAP1"
    },
    "6491": {
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6492": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6493": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6495": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6499": {
      "op": "SHL"
    },
    "6500": {
      "op": "SUB"
    },
    "6501": {
      "op": "AND"
    },
    "6502": {
      "op": "PUSH4",
      "value": "0xA58A3F1D"
    },
    "6507": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6508": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6511": {
      "op": "MLOAD"
    },
    "6512": {
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6513": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "6518": {
      "offset": [
        3192,
        3199
      ],
      "op": "AND",
      "path": "6"
    },
    "6519": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "6521": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "SHL",
      "path": "13"
    },
    "6522": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22910,
        23272
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6523": {
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6524": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6526": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ADD",
      "path": "6"
    },
    "6527": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x198B"
    },
    "6531": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6532": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6533": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6534": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x393A"
    },
    "6538": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6539": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6540": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6542": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6544": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6545": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6546": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6547": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "6548": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6549": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6551": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6552": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6553": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "6554": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6555": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6556": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6557": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x19A6"
    },
    "6561": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6562": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6564": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6565": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6566": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6567": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "6568": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "GAS",
      "path": "6"
    },
    "6569": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "CALL",
      "path": "6"
    },
    "6570": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6571": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6572": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6573": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x19BB"
    },
    "6577": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6578": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6579": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6581": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6582": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "6583": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6584": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6586": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6587": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23375,
        23442
      ],
      "op": "JUMPDEST",
      "path": "13",
      "statement": 25
    },
    "6588": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23396,
        23410
      ],
      "op": "POP",
      "path": "13"
    },
    "6589": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23412,
        23420
      ],
      "op": "POP",
      "path": "13"
    },
    "6590": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23422,
        23432
      ],
      "op": "POP",
      "path": "13"
    },
    "6591": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23422,
        23432
      ],
      "op": "POP",
      "path": "13"
    },
    "6592": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23434,
        23441
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x19CF"
    },
    "6596": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23434,
        23441
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6597": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23375,
        23395
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6598": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "i",
      "offset": [
        23375,
        23442
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6599": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        23375,
        23442
      ],
      "op": "DUP12",
      "path": "13"
    },
    "6600": {
      "offset": [
        779,
        780
      ],
      "op": "DUP12",
      "path": "16"
    },
    "6601": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        779,
        780
      ],
      "op": "DUP12",
      "path": "16"
    },
    "6602": {
      "offset": [
        954,
        955
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2A63"
    },
    "6606": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        954,
        955
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6607": {
      "offset": [
        6070,
        6071
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6608": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6609": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6610": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6611": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6612": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6613": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6614": {
      "fn": "Vault.executexSwapAndCall",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6615": {
      "fn": "Vault.executexSwapAndCall",
      "jump": "o",
      "offset": [
        22466,
        23449
      ],
      "op": "POP",
      "path": "13"
    },
    "6616": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12378,
        12908
      ],
      "op": "POP",
      "path": "13"
    },
    "6617": {
      "offset": [
        6024,
        6034
      ],
      "op": "POP",
      "path": "9"
    },
    "6618": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "POP",
      "path": "9"
    },
    "6619": {
      "op": "POP"
    },
    "6620": {
      "op": "JUMP"
    },
    "6621": {
      "op": "JUMPDEST"
    },
    "6622": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6624": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6625": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6627": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "6629": {
      "offset": [
        6023,
        6034
      ],
      "op": "SHL",
      "path": "9"
    },
    "6630": {
      "offset": [
        6015,
        6060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6631": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "DIV",
      "path": "9"
    },
    "6632": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "6634": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "AND",
      "path": "9"
    },
    "6635": {
      "op": "ISZERO"
    },
    "6636": {
      "op": "PUSH3",
      "value": "0x1A31"
    },
    "6640": {
      "op": "JUMPI"
    },
    "6641": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6643": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6648": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "6650": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "SHL",
      "path": "9"
    },
    "6651": {
      "fn": "Vault.fetchBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6652": {
      "op": "MSTORE"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6655": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6657": {
      "op": "DUP3"
    },
    "6658": {
      "op": "ADD"
    },
    "6659": {
      "op": "MSTORE"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6664": {
      "op": "DUP3"
    },
    "6665": {
      "op": "ADD"
    },
    "6666": {
      "op": "MSTORE"
    },
    "6667": {
      "op": "PUSH21",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6691": {
      "op": "SHL"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6694": {
      "offset": [
        6015,
        6060
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6697": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "6699": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "ADD",
      "path": "13"
    },
    "6700": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "6704": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6705": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6706": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6708": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6709": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6710": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "6712": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12562,
        12569
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6713": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12562,
        12569
      ],
      "op": "ADD",
      "path": "13"
    },
    "6714": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12654,
        12678
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6715": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12654,
        12678
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6716": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6717": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12708,
        12726
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6718": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12708,
        12726
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6719": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12708,
        12726
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x79C83AD700000000000000000000000000000000000000000000000000000000"
    },
    "6752": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12708,
        12726
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6753": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12562,
        12569
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6754": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12708,
        12726
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1A70"
    },
    "6758": {
      "fn": "Vault.fetchBatch",
      "jump": "i",
      "offset": [
        12708,
        12726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6760": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12708,
        12726
      ],
      "op": "DUP6",
      "path": "13"
    },
    "6761": {
      "op": "ADD"
    },
    "6762": {
      "op": "DUP6"
    },
    "6763": {
      "op": "PUSH3",
      "value": "0x30B3"
    },
    "6767": {
      "op": "JUMP"
    },
    "6768": {
      "op": "JUMPDEST"
    },
    "6769": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6771": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6773": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "6775": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "SHL",
      "path": "13"
    },
    "6776": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12728,
        12743
      ],
      "op": "SUB",
      "path": "13"
    },
    "6777": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12728,
        12743
      ],
      "op": "AND",
      "path": "13"
    },
    "6778": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12728,
        12743
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6779": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12728,
        12743
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6780": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6782": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "ADD",
      "path": "13"
    },
    "6783": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "DUP7",
      "path": "13"
    },
    "6784": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6786": {
      "op": "ADD"
    },
    "6787": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "6788": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6789": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6790": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6792": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "ADD",
      "path": "13"
    },
    "6793": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6795": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6796": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6797": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6799": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "ADD",
      "path": "13"
    },
    "6800": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6802": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6803": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6804": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6806": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12751,
        12764
      ],
      "op": "ADD",
      "path": "13"
    },
    "6807": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12751,
        12764
      ],
      "op": "DUP7",
      "path": "13"
    },
    "6808": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12751,
        12764
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "6810": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12751,
        12764
      ],
      "op": "ADD",
      "path": "13"
    },
    "6811": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "6812": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6813": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6814": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6816": {
      "op": "ADD"
    },
    "6817": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6819": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6821": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6823": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12700,
        12777
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "6825": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SHL",
      "path": "13"
    },
    "6826": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SUB",
      "path": "13"
    },
    "6827": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "AND",
      "path": "13"
    },
    "6828": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6829": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12799,
        12815
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6830": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12799,
        12815
      ],
      "op": "POP",
      "path": "13"
    },
    "6831": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12799,
        12815
      ],
      "op": "DUP5",
      "path": "13"
    },
    "6832": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12799,
        12815
      ],
      "op": "DUP5",
      "path": "13"
    },
    "6833": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6835": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6836": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "6838": {
      "fn": "Vault.fetchBatch",
      "jump": "i",
      "offset": [
        12610,
        12833
      ],
      "op": "ADD",
      "path": "13"
    },
    "6839": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1AC4"
    },
    "6843": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "6844": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6845": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6846": {
      "op": "SWAP1"
    },
    "6847": {
      "op": "PUSH3",
      "value": "0x3B54"
    },
    "6851": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6852": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6853": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6855": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6856": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6857": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "6859": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "NOT",
      "path": "13"
    },
    "6860": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6861": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "DUP5",
      "path": "13"
    },
    "6862": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SUB",
      "path": "13"
    },
    "6863": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "ADD",
      "path": "13"
    },
    "6864": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6865": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6866": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6867": {
      "op": "SWAP1"
    },
    "6868": {
      "op": "MSTORE"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6871": {
      "op": "DUP2"
    },
    "6872": {
      "op": "ADD"
    },
    "6873": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6874": {
      "op": "MLOAD"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6881": {
      "op": "SHL"
    },
    "6882": {
      "op": "SUB"
    },
    "6883": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "AND",
      "path": "13"
    },
    "6884": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6886": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6888": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "6890": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SHL",
      "path": "13"
    },
    "6891": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SUB",
      "path": "13"
    },
    "6892": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "NOT",
      "path": "13"
    },
    "6893": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6894": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "6895": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12610,
        12833
      ],
      "op": "AND",
      "path": "13"
    },
    "6896": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6897": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6898": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6899": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "OR",
      "path": "13"
    },
    "6900": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6901": {
      "op": "MSTORE"
    },
    "6902": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6903": {
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6904": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6905": {
      "op": "PUSH3",
      "value": "0x1B0B"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6911": {
      "op": "SLOAD"
    },
    "6912": {
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6914": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6916": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "6918": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "SHL",
      "path": "13"
    },
    "6919": {
      "op": "SUB"
    },
    "6920": {
      "op": "AND"
    },
    "6921": {
      "op": "SWAP1"
    },
    "6922": {
      "op": "JUMP"
    },
    "6923": {
      "op": "JUMPDEST"
    },
    "6924": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6926": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6930": {
      "op": "SHL"
    },
    "6931": {
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "6932": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "6933": {
      "offset": [
        3192,
        3199
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA58A3F1D"
    },
    "6938": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6939": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6940": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12583,
        12847
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6942": {
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6943": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6944": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "6949": {
      "fn": "Vault.fetchBatch",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "6950": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "6952": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "6953": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6954": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6955": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6957": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ADD",
      "path": "6"
    },
    "6958": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1B3A"
    },
    "6962": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6963": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6964": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6965": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x393A"
    },
    "6969": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6970": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6971": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6973": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6975": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6976": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6977": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6978": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "6979": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6980": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6982": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6983": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6984": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "6985": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6986": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6987": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6988": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1B55"
    },
    "6992": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6993": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6995": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6996": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6997": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6998": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "POP",
      "path": "6"
    },
    "6999": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "GAS",
      "path": "6"
    },
    "7000": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "CALL",
      "path": "6"
    },
    "7001": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7002": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7003": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7004": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x1B6A"
    },
    "7008": {
      "fn": "Vault.fetchBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7009": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12872,
        12901
      ],
      "op": "RETURNDATASIZE",
      "path": "13",
      "statement": 26
    },
    "7010": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12884,
        12900
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7012": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12884,
        12900
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7013": {
      "fn": "Vault.fetchBatch",
      "offset": [
        12872,
        12883
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "7014": {
      "fn": "Vault.fetchBatch",
      "jump": "i",
      "offset": [
        12872,
        12901
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "7015": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2447,
        2633
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7017": {
      "offset": [
        5001,
        5019
      ],
      "op": "REVERT",
      "path": "9"
    },
    "7018": {
      "offset": [
        5001,
        5017
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7019": {
      "jump": "i",
      "offset": [
        5001,
        5019
      ],
      "op": "POP",
      "path": "9"
    },
    "7020": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5001,
        5019
      ],
      "op": "POP",
      "path": "9"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "POP"
    },
    "7023": {
      "op": "PUSH3",
      "value": "0xE81"
    },
    "7027": {
      "op": "DUP5"
    },
    "7028": {
      "op": "DUP5"
    },
    "7029": {
      "offset": [
        4987,
        5019
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x280B"
    },
    "7033": {
      "offset": [
        4987,
        4997
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7034": {
      "offset": [
        4987,
        5019
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7035": {
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1B84"
    },
    "7039": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2720"
    },
    "7043": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7044": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7051": {
      "offset": [
        4979,
        5053
      ],
      "op": "SHL",
      "path": "9"
    },
    "7052": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "SUB",
      "path": "9"
    },
    "7053": {
      "op": "AND"
    },
    "7054": {
      "offset": [
        4979,
        5053
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7055": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7057": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "op": "SUB"
    },
    "7063": {
      "op": "AND"
    },
    "7064": {
      "op": "EQ"
    },
    "7065": {
      "op": "PUSH3",
      "value": "0x1BE6"
    },
    "7069": {
      "op": "JUMPI"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7072": {
      "op": "MLOAD"
    },
    "7073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7079": {
      "op": "SHL"
    },
    "7080": {
      "op": "DUP2"
    },
    "7081": {
      "offset": [
        4979,
        5053
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7084": {
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7086": {
      "offset": [
        5204,
        5227
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7087": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5204,
        5227
      ],
      "op": "ADD",
      "path": "9"
    },
    "7088": {
      "op": "MSTORE"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7093": {
      "offset": [
        5204,
        5227
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7094": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5204,
        5227
      ],
      "op": "ADD",
      "path": "9"
    },
    "7095": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5204,
        5227
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7096": {
      "branch": 68,
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5204,
        5227
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x476F7665726E616E63653A206E6F7420436F6D6D756E697479204B6579000000"
    },
    "7129": {
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "7131": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5196,
        5267
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7132": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5196,
        5267
      ],
      "op": "ADD",
      "path": "9"
    },
    "7133": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5196,
        5267
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "7141": {
      "offset": [
        5196,
        5267
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7142": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5196,
        5267
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7145": {
      "offset": [
        5196,
        5267
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7146": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7148": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "7150": {
      "op": "SHL"
    },
    "7151": {
      "op": "SWAP1"
    },
    "7152": {
      "op": "DIV"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7155": {
      "op": "AND"
    },
    "7156": {
      "op": "PUSH3",
      "value": "0x1C4D"
    },
    "7160": {
      "op": "JUMPI"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7163": {
      "op": "MLOAD"
    },
    "7164": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7170": {
      "op": "SHL"
    },
    "7171": {
      "op": "DUP2"
    },
    "7172": {
      "op": "MSTORE"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7177": {
      "op": "DUP3"
    },
    "7178": {
      "op": "ADD"
    },
    "7179": {
      "op": "MSTORE"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7182": {
      "offset": [
        5196,
        5267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "7184": {
      "op": "DUP3"
    },
    "7185": {
      "offset": [
        5196,
        5267
      ],
      "op": "ADD",
      "path": "9"
    },
    "7186": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2577,
        2582
      ],
      "op": "MSTORE",
      "path": "9",
      "statement": 27
    },
    "7187": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2551,
        2582
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x476F7665726E616E63653A20636F6D6D756E69747920677561726420656E6162"
    },
    "7220": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2551,
        2582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "7222": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2551,
        2582
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7223": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2551,
        2582
      ],
      "op": "ADD",
      "path": "9"
    },
    "7224": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2551,
        2582
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7225": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2551,
        2582
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1B1959"
    },
    "7229": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2597,
        2626
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 28,
      "value": "0xEA"
    },
    "7231": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2597,
        2626
      ],
      "op": "SHL",
      "path": "9"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7234": {
      "op": "DUP3"
    },
    "7235": {
      "op": "ADD"
    },
    "7236": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2597,
        2626
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7237": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2597,
        2626
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x84"
    },
    "7239": {
      "op": "ADD"
    },
    "7240": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "7244": {
      "fn": "GovernanceCommunityGuarded.enableCommunityGuard",
      "offset": [
        2597,
        2626
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7245": {
      "op": "JUMPDEST"
    },
    "7246": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7248": {
      "offset": [
        6024,
        6034
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7249": {
      "fn": "Vault.xCallNative",
      "offset": [
        6024,
        6034
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7250": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7283": {
      "op": "AND"
    },
    "7284": {
      "op": "DUP2"
    },
    "7285": {
      "offset": [
        6024,
        6034
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "7286": {
      "fn": "Vault.xCallNative",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7288": {
      "fn": "Vault.xCallNative",
      "offset": [
        6024,
        6034
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7289": {
      "fn": "Vault.xCallNative",
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7290": {
      "offset": [
        6023,
        6034
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7291": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7292": {
      "fn": "Vault.xCallNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x57C4CB09F128960151F04372028154ACDA40272F16360154961672989B59BAD"
    },
    "7325": {
      "fn": "Vault.xCallNative",
      "offset": [
        6015,
        6060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7326": {
      "fn": "Vault.xCallNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7328": {
      "op": "ADD"
    },
    "7329": {
      "op": "PUSH3",
      "value": "0x61A"
    },
    "7333": {
      "op": "JUMP"
    },
    "7334": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7335": {
      "fn": "Vault.xCallNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7337": {
      "op": "SLOAD"
    },
    "7338": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7340": {
      "fn": "Vault.xCallNative",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "7342": {
      "fn": "Vault.xCallNative",
      "offset": [
        6015,
        6060
      ],
      "op": "SHL",
      "path": "9"
    },
    "7343": {
      "op": "SWAP1"
    },
    "7344": {
      "op": "DIV"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7347": {
      "op": "AND"
    },
    "7348": {
      "op": "ISZERO"
    },
    "7349": {
      "op": "PUSH3",
      "value": "0x1CFA"
    },
    "7353": {
      "op": "JUMPI"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7356": {
      "op": "MLOAD"
    },
    "7357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7363": {
      "op": "SHL"
    },
    "7364": {
      "op": "DUP2"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7368": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7370": {
      "op": "DUP3"
    },
    "7371": {
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "7372": {
      "offset": [
        30214,
        30228
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7373": {
      "fn": "Vault.xCallNative",
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x15"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7377": {
      "op": "DUP3"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "offset": [
        30214,
        30228
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7380": {
      "fn": "Vault.xCallNative",
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH21",
      "path": "13",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "7402": {
      "fn": "Vault.xCallNative",
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5A"
    },
    "7404": {
      "fn": "Vault.xCallNative",
      "offset": [
        30214,
        30228
      ],
      "op": "SHL",
      "path": "13"
    },
    "7405": {
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7407": {
      "fn": "Vault.xCallNative",
      "offset": [
        30206,
        30258
      ],
      "op": "DUP3",
      "path": "13"
    },
    "7408": {
      "fn": "Vault.xCallNative",
      "offset": [
        30206,
        30258
      ],
      "op": "ADD",
      "path": "13"
    },
    "7409": {
      "fn": "Vault.xCallNative",
      "offset": [
        30206,
        30258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "7417": {
      "offset": [
        30206,
        30258
      ],
      "op": "JUMP",
      "path": "13"
    },
    "7418": {
      "fn": "Vault.xCallNative",
      "offset": [
        30206,
        30258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7421": {
      "offset": [
        30206,
        30258
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "7422": {
      "fn": "Vault.xCallNative",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "7424": {
      "fn": "Vault.xCallNative",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB0"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "op": "SWAP1"
    },
    "7428": {
      "op": "DIV"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7431": {
      "op": "AND"
    },
    "7432": {
      "op": "PUSH3",
      "value": "0x1D55"
    },
    "7436": {
      "op": "JUMPI"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7439": {
      "op": "MLOAD"
    },
    "7440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7446": {
      "op": "SHL"
    },
    "7447": {
      "op": "DUP2"
    },
    "7448": {
      "offset": [
        30206,
        30258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7451": {
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7453": {
      "fn": "Vault.xCallNative",
      "offset": [
        18452,
        18461
      ],
      "op": "DUP3",
      "path": "13"
    },
    "7454": {
      "offset": [
        731,
        737
      ],
      "op": "ADD",
      "path": "16"
    },
    "7455": {
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7456": {
      "fn": "Vault.xCallNative",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x19"
    },
    "7458": {
      "fn": "Vault.xCallNative",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "7460": {
      "fn": "Vault.xCallNative",
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7461": {
      "op": "ADD"
    },
    "7462": {
      "op": "MSTORE"
    },
    "7463": {
      "op": "PUSH32",
      "value": "0x5661756C743A207843616C6C73206E6F7420656E61626C656400000000000000"
    },
    "7496": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "7498": {
      "fn": "Vault.xCallNative",
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7499": {
      "op": "ADD"
    },
    "7500": {
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7501": {
      "fn": "Vault.xCallNative",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "7503": {
      "fn": "Vault.xCallNative",
      "offset": [
        723,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "7504": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "7508": {
      "op": "JUMP"
    },
    "7509": {
      "op": "JUMPDEST"
    },
    "7510": {
      "op": "CALLVALUE"
    },
    "7511": {
      "op": "DUP1"
    },
    "7512": {
      "op": "PUSH3",
      "value": "0x1DA5"
    },
    "7516": {
      "op": "JUMPI"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7519": {
      "op": "MLOAD"
    },
    "7520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7526": {
      "op": "SHL"
    },
    "7527": {
      "op": "DUP2"
    },
    "7528": {
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7531": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7533": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 29
    },
    "7534": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "ADD",
      "path": "13"
    },
    "7535": {
      "fn": "Vault.xCallNative",
      "offset": [
        18535,
        18545
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7536": {
      "fn": "Vault.xCallNative",
      "offset": [
        18535,
        18545
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1B"
    },
    "7538": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "7540": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP3",
      "path": "13"
    },
    "7541": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "ADD",
      "path": "13"
    },
    "7542": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7543": {
      "fn": "Vault.xCallNative",
      "offset": [
        18490,
        18498
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x5368617265643A2075696E7420696E70757420697320656D7074790000000000"
    },
    "7576": {
      "fn": "Vault.xCallNative",
      "offset": [
        18490,
        18498
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "7578": {
      "fn": "Vault.xCallNative",
      "offset": [
        18500,
        18510
      ],
      "op": "DUP3",
      "path": "13"
    },
    "7579": {
      "fn": "Vault.xCallNative",
      "offset": [
        18500,
        18510
      ],
      "op": "ADD",
      "path": "13"
    },
    "7580": {
      "fn": "Vault.xCallNative",
      "offset": [
        18512,
        18522
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7581": {
      "fn": "Vault.xCallNative",
      "offset": [
        18512,
        18522
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "7583": {
      "fn": "Vault.xCallNative",
      "offset": [
        18524,
        18533
      ],
      "op": "ADD",
      "path": "13"
    },
    "7584": {
      "fn": "Vault.xCallNative",
      "offset": [
        18524,
        18533
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "7588": {
      "fn": "Vault.xCallNative",
      "offset": [
        18547,
        18554
      ],
      "op": "JUMP",
      "path": "13"
    },
    "7589": {
      "fn": "Vault.xCallNative",
      "offset": [
        18547,
        18554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7590": {
      "fn": "Vault.xCallNative",
      "offset": [
        18547,
        18554
      ],
      "op": "CALLER",
      "path": "13"
    },
    "7591": {
      "fn": "Vault.xCallNative",
      "offset": [
        18547,
        18554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "7593": {
      "fn": "Vault.xCallNative",
      "offset": [
        18556,
        18568
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "7595": {
      "fn": "Vault.xCallNative",
      "offset": [
        18556,
        18568
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "7597": {
      "fn": "Vault.xCallNative",
      "offset": [
        18570,
        18583
      ],
      "op": "SHL",
      "path": "13"
    },
    "7598": {
      "fn": "Vault.xCallNative",
      "offset": [
        18570,
        18583
      ],
      "op": "SUB",
      "path": "13"
    },
    "7599": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "AND",
      "path": "13"
    },
    "7600": {
      "fn": "Vault.xCallNative",
      "jump": "i",
      "offset": [
        18478,
        18584
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x7E8C5BDA8A909414B3B3D5430E67E10A1965826D1DBEFA6BD2EC6915BCDC8D7D"
    },
    "7633": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP10",
      "path": "13"
    },
    "7634": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP10",
      "path": "13"
    },
    "7635": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP10",
      "path": "13"
    },
    "7636": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "7637": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP11",
      "path": "13"
    },
    "7638": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP11",
      "path": "13"
    },
    "7639": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP11",
      "path": "13"
    },
    "7640": {
      "fn": "Vault.xCallNative",
      "offset": [
        18478,
        18584
      ],
      "op": "DUP11",
      "path": "13"
    },
    "7641": {
      "offset": [
        30268,
        30269
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7643": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "7644": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1DEE"
    },
    "7648": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "7649": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "7650": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "7651": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "7652": {
      "fn": "Vault.xCallNative",
      "offset": [
        18175,
        18591
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "7653": {
      "fn": "Vault.xCallNative",
      "jump": "o",
      "offset": [
        18175,
        18591
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "7654": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2695,
        2879
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "7655": {
      "offset": [
        5001,
        5019
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7656": {
      "offset": [
        5001,
        5017
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7657": {
      "jump": "i",
      "offset": [
        5001,
        5019
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x3F3D"
    },
    "7661": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5001,
        5019
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7662": {
      "op": "JUMPDEST"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7665": {
      "op": "MLOAD"
    },
    "7666": {
      "op": "DUP1"
    },
    "7667": {
      "op": "SWAP2"
    },
    "7668": {
      "offset": [
        4987,
        5019
      ],
      "op": "SUB",
      "path": "9"
    },
    "7669": {
      "offset": [
        4987,
        4997
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7670": {
      "offset": [
        4987,
        5019
      ],
      "op": "LOG2",
      "path": "9"
    },
    "7671": {
      "offset": [
        4979,
        5053
      ],
      "op": "POP",
      "path": "9"
    },
    "7672": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "POP",
      "path": "9"
    },
    "7673": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "POP",
      "path": "9"
    },
    "7674": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "POP",
      "path": "9"
    },
    "7675": {
      "op": "POP"
    },
    "7676": {
      "op": "POP"
    },
    "7677": {
      "op": "POP"
    },
    "7678": {
      "offset": [
        4979,
        5053
      ],
      "op": "POP",
      "path": "9"
    },
    "7679": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7680": {
      "op": "JUMPDEST"
    },
    "7681": {
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E0A"
    },
    "7685": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2720"
    },
    "7689": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        4979,
        5053
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7690": {
      "op": "JUMPDEST"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7697": {
      "op": "SHL"
    },
    "7698": {
      "op": "SUB"
    },
    "7699": {
      "op": "AND"
    },
    "7700": {
      "op": "CALLER"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7707": {
      "op": "SHL"
    },
    "7708": {
      "op": "SUB"
    },
    "7709": {
      "offset": [
        4979,
        5053
      ],
      "op": "AND",
      "path": "9"
    },
    "7710": {
      "op": "EQ"
    },
    "7711": {
      "offset": [
        4979,
        5053
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1E6C"
    },
    "7715": {
      "branch": 68,
      "offset": [
        5418,
        5441
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7716": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5418,
        5441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7718": {
      "op": "MLOAD"
    },
    "7719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7725": {
      "offset": [
        5418,
        5441
      ],
      "op": "SHL",
      "path": "9"
    },
    "7726": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5418,
        5441
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7727": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5418,
        5441
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7728": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5418,
        5441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7730": {
      "offset": [
        5417,
        5441
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7732": {
      "offset": [
        5409,
        5482
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7733": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5409,
        5482
      ],
      "op": "ADD",
      "path": "9"
    },
    "7734": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5409,
        5482
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7735": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5409,
        5482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1D"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7739": {
      "op": "DUP3"
    },
    "7740": {
      "op": "ADD"
    },
    "7741": {
      "offset": [
        5409,
        5482
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7742": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5409,
        5482
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x476F7665726E616E63653A206E6F7420436F6D6D756E697479204B6579000000"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7777": {
      "offset": [
        5409,
        5482
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7778": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5409,
        5482
      ],
      "op": "ADD",
      "path": "9"
    },
    "7779": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        5409,
        5482
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7782": {
      "op": "ADD"
    },
    "7783": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "7787": {
      "op": "JUMP"
    },
    "7788": {
      "op": "JUMPDEST"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7791": {
      "op": "SLOAD"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7796": {
      "op": "SHL"
    },
    "7797": {
      "op": "SWAP1"
    },
    "7798": {
      "op": "DIV"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7801": {
      "op": "AND"
    },
    "7802": {
      "op": "ISZERO"
    },
    "7803": {
      "op": "PUSH3",
      "value": "0x1EED"
    },
    "7807": {
      "op": "JUMPI"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7810": {
      "offset": [
        5409,
        5482
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7815": {
      "offset": [
        5409,
        5482
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE5"
    },
    "7817": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2822
      ],
      "op": "SHL",
      "path": "9",
      "statement": 30
    },
    "7818": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7819": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7820": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7822": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7824": {
      "op": "DUP3"
    },
    "7825": {
      "op": "ADD"
    },
    "7826": {
      "op": "MSTORE"
    },
    "7827": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "7829": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7830": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2799,
        2829
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7831": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2844,
        2872
      ],
      "op": "ADD",
      "path": "9",
      "statement": 31
    },
    "7832": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2844,
        2872
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7833": {
      "op": "PUSH32",
      "value": "0x476F7665726E616E63653A20636F6D6D756E6974792067756172642064697361"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7868": {
      "op": "DUP3"
    },
    "7869": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2844,
        2872
      ],
      "op": "ADD",
      "path": "9"
    },
    "7870": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2844,
        2872
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7871": {
      "op": "PUSH32",
      "value": "0x626C656400000000000000000000000000000000000000000000000000000000"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7906": {
      "fn": "GovernanceCommunityGuarded.disableCommunityGuard",
      "offset": [
        2844,
        2872
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7907": {
      "op": "ADD"
    },
    "7908": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7909": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x84"
    },
    "7911": {
      "fn": "Vault.transfer",
      "offset": [
        6024,
        6034
      ],
      "op": "ADD",
      "path": "9"
    },
    "7912": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "7916": {
      "op": "JUMP"
    },
    "7917": {
      "op": "JUMPDEST"
    },
    "7918": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7920": {
      "fn": "Vault.transfer",
      "offset": [
        6024,
        6034
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7921": {
      "fn": "Vault.transfer",
      "offset": [
        6024,
        6034
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7922": {
      "fn": "Vault.transfer",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7955": {
      "offset": [
        6023,
        6034
      ],
      "op": "AND",
      "path": "9"
    },
    "7956": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7958": {
      "fn": "Vault.transfer",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "7960": {
      "fn": "Vault.transfer",
      "offset": [
        6015,
        6060
      ],
      "op": "SHL",
      "path": "9"
    },
    "7961": {
      "fn": "Vault.transfer",
      "offset": [
        6015,
        6060
      ],
      "op": "OR",
      "path": "9"
    },
    "7962": {
      "op": "SWAP1"
    },
    "7963": {
      "op": "SSTORE"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7966": {
      "offset": [
        6015,
        6060
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7967": {
      "fn": "Vault.transfer",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7969": {
      "op": "DUP2"
    },
    "7970": {
      "offset": [
        6015,
        6060
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7971": {
      "fn": "Vault.transfer",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x57C4CB09F128960151F04372028154ACDA40272F16360154961672989B59BAD"
    },
    "8004": {
      "fn": "Vault.transfer",
      "offset": [
        6015,
        6060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8007": {
      "op": "ADD"
    },
    "8008": {
      "op": "PUSH3",
      "value": "0x61A"
    },
    "8012": {
      "op": "JUMP"
    },
    "8013": {
      "op": "JUMPDEST"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8016": {
      "op": "SLOAD"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8021": {
      "op": "SHL"
    },
    "8022": {
      "op": "SWAP1"
    },
    "8023": {
      "op": "DIV"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8026": {
      "op": "AND"
    },
    "8027": {
      "op": "ISZERO"
    },
    "8028": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x1FA1"
    },
    "8032": {
      "op": "JUMPI"
    },
    "8033": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8035": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6887
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8036": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6887
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "8040": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6887
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "8042": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6887
      ],
      "op": "SHL",
      "path": "13"
    },
    "8043": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6881
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8044": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6887
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8045": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        6867,
        6887
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8047": {
      "fn": "Vault.transfer",
      "offset": [
        6867,
        6887
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8049": {
      "op": "DUP3"
    },
    "8050": {
      "op": "ADD"
    },
    "8051": {
      "op": "MSTORE"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8056": {
      "offset": [
        894,
        909
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8057": {
      "fn": "Vault.transfer",
      "offset": [
        894,
        909
      ],
      "op": "ADD",
      "path": "16"
    },
    "8058": {
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8059": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH21",
      "path": "16",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "8081": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5A"
    },
    "8083": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "SHL",
      "path": "16"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8086": {
      "op": "DUP3"
    },
    "8087": {
      "op": "ADD"
    },
    "8088": {
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8089": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "8091": {
      "op": "ADD"
    },
    "8092": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x562"
    },
    "8096": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8097": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8098": {
      "op": "PUSH3",
      "value": "0x1FB0"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8104": {
      "op": "DUP3"
    },
    "8105": {
      "op": "ADD"
    },
    "8106": {
      "op": "DUP3"
    },
    "8107": {
      "op": "PUSH3",
      "value": "0x30B3"
    },
    "8111": {
      "op": "JUMP"
    },
    "8112": {
      "op": "JUMPDEST"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8119": {
      "op": "SHL"
    },
    "8120": {
      "op": "SUB"
    },
    "8121": {
      "offset": [
        886,
        944
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8122": {
      "op": "AND"
    },
    "8123": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2008"
    },
    "8127": {
      "offset": [
        6904,
        6928
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8128": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8130": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8131": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "8135": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "8137": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "SHL",
      "path": "13"
    },
    "8138": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8139": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8140": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        6904,
        6928
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8142": {
      "fn": "Vault.transfer",
      "offset": [
        6904,
        6928
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8144": {
      "op": "DUP3"
    },
    "8145": {
      "op": "ADD"
    },
    "8146": {
      "op": "MSTORE"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8151": {
      "offset": [
        894,
        909
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8152": {
      "fn": "Vault.transfer",
      "offset": [
        894,
        909
      ],
      "op": "ADD",
      "path": "16"
    },
    "8153": {
      "offset": [
        886,
        944
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8154": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5368617265643A206164647265737320696E70757420697320656D7074790000"
    },
    "8187": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "8189": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8190": {
      "op": "ADD"
    },
    "8191": {
      "op": "MSTORE"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8194": {
      "offset": [
        886,
        944
      ],
      "op": "ADD",
      "path": "16"
    },
    "8195": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x562"
    },
    "8199": {
      "op": "JUMP"
    },
    "8200": {
      "offset": [
        886,
        944
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8201": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x201A"
    },
    "8205": {
      "fn": "Vault.transfer",
      "offset": [
        886,
        944
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8207": {
      "op": "DUP4"
    },
    "8208": {
      "op": "ADD"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8211": {
      "op": "DUP5"
    },
    "8212": {
      "op": "ADD"
    },
    "8213": {
      "op": "PUSH3",
      "value": "0x30B3"
    },
    "8217": {
      "op": "JUMP"
    },
    "8218": {
      "op": "JUMPDEST"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8225": {
      "op": "SHL"
    },
    "8226": {
      "op": "SUB"
    },
    "8227": {
      "offset": [
        886,
        944
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8228": {
      "op": "AND"
    },
    "8229": {
      "offset": [
        886,
        944
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x2072"
    },
    "8233": {
      "fn": "Vault.transfer",
      "offset": [
        6945,
        6966
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8234": {
      "fn": "Vault.transfer",
      "offset": [
        6945,
        6966
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8236": {
      "fn": "Vault.transfer",
      "offset": [
        6945,
        6966
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8237": {
      "fn": "Vault.transfer",
      "offset": [
        6945,
        6966
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "8241": {
      "offset": [
        731,
        737
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE5"
    },
    "8243": {
      "offset": [
        723,
        769
      ],
      "op": "SHL",
      "path": "16"
    },
    "8244": {
      "fn": "Vault.transfer",
      "offset": [
        723,
        769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8245": {
      "fn": "Vault.transfer",
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8246": {
      "fn": "Vault.transfer",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8250": {
      "op": "DUP3"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8253": {
      "fn": "Vault.transfer",
      "offset": [
        723,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1E"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8257": {
      "offset": [
        723,
        769
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8258": {
      "fn": "Vault.transfer",
      "offset": [
        723,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "8259": {
      "fn": "Vault.transfer",
      "offset": [
        723,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8260": {
      "op": "PUSH32",
      "value": "0x5368617265643A206164647265737320696E70757420697320656D7074790000"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8295": {
      "op": "DUP3"
    },
    "8296": {
      "op": "ADD"
    },
    "8297": {
      "op": "MSTORE"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8300": {
      "op": "ADD"
    },
    "8301": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "8305": {
      "op": "JUMP"
    },
    "8306": {
      "op": "JUMPDEST"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8309": {
      "op": "DUP4"
    },
    "8310": {
      "op": "ADD"
    },
    "8311": {
      "offset": [
        723,
        769
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "8312": {
      "op": "DUP1"
    },
    "8313": {
      "offset": [
        723,
        769
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x20C6"
    },
    "8317": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8318": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8320": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8321": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "8325": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "8327": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "SHL",
      "path": "13"
    },
    "8328": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8329": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8330": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8332": {
      "fn": "Vault.transfer",
      "offset": [
        7006,
        7013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8334": {
      "fn": "Vault.transfer",
      "offset": [
        7006,
        7013
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8335": {
      "fn": "Vault.transfer",
      "offset": [
        7098,
        7120
      ],
      "op": "ADD",
      "path": "13"
    },
    "8336": {
      "fn": "Vault.transfer",
      "offset": [
        7098,
        7120
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8337": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1B"
    },
    "8339": {
      "fn": "Vault.transfer",
      "offset": [
        7150,
        7168
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "8341": {
      "fn": "Vault.transfer",
      "offset": [
        7150,
        7168
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8342": {
      "fn": "Vault.transfer",
      "offset": [
        7150,
        7168
      ],
      "op": "ADD",
      "path": "13"
    },
    "8343": {
      "fn": "Vault.transfer",
      "offset": [
        7150,
        7168
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8344": {
      "fn": "Vault.transfer",
      "offset": [
        7006,
        7013
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x5368617265643A2075696E7420696E70757420697320656D7074790000000000"
    },
    "8377": {
      "fn": "Vault.transfer",
      "offset": [
        7150,
        7168
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "8379": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        7150,
        7168
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8380": {
      "fn": "Vault.transfer",
      "offset": [
        7150,
        7168
      ],
      "op": "ADD",
      "path": "13"
    },
    "8381": {
      "op": "MSTORE"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8384": {
      "op": "ADD"
    },
    "8385": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "8389": {
      "op": "JUMP"
    },
    "8390": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8391": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8393": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8394": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8395": {
      "fn": "Vault.transfer",
      "offset": [
        7170,
        7185
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "8397": {
      "fn": "Vault.transfer",
      "offset": [
        7170,
        7185
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8398": {
      "fn": "Vault.transfer",
      "offset": [
        7170,
        7185
      ],
      "op": "ADD",
      "path": "13"
    },
    "8399": {
      "fn": "Vault.transfer",
      "offset": [
        7170,
        7185
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8400": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8401": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8402": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8403": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8404": {
      "op": "PUSH32",
      "value": "0xB03B6A5700000000000000000000000000000000000000000000000000000000"
    },
    "8437": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8438": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8439": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2105"
    },
    "8443": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8445": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8446": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "ADD",
      "path": "13"
    },
    "8447": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8448": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "8452": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8453": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8454": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8456": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8458": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "8460": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "SHL",
      "path": "13"
    },
    "8461": {
      "fn": "Vault.transfer",
      "offset": [
        7193,
        7206
      ],
      "op": "SUB",
      "path": "13"
    },
    "8462": {
      "fn": "Vault.transfer",
      "offset": [
        7193,
        7206
      ],
      "op": "AND",
      "path": "13"
    },
    "8463": {
      "fn": "Vault.transfer",
      "offset": [
        7193,
        7206
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8464": {
      "fn": "Vault.transfer",
      "offset": [
        7193,
        7206
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8465": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8467": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "ADD",
      "path": "13"
    },
    "8468": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP9",
      "path": "13"
    },
    "8469": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8471": {
      "op": "ADD"
    },
    "8472": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "8473": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8474": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8475": {
      "fn": "Vault.transfer",
      "offset": [
        7142,
        7219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8477": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "ADD",
      "path": "13"
    },
    "8478": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8480": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8481": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8482": {
      "fn": "Vault.transfer",
      "offset": [
        7241,
        7255
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8484": {
      "fn": "Vault.transfer",
      "offset": [
        7241,
        7255
      ],
      "op": "ADD",
      "path": "13"
    },
    "8485": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8487": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8488": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8489": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8491": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "ADD",
      "path": "13"
    },
    "8492": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP9",
      "path": "13"
    },
    "8493": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "8495": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "ADD",
      "path": "13"
    },
    "8496": {
      "op": "CALLDATALOAD"
    },
    "8497": {
      "op": "DUP2"
    },
    "8498": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8499": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8501": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "ADD",
      "path": "13"
    },
    "8502": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8504": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8506": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8508": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "8510": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "SHL",
      "path": "13"
    },
    "8511": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "SUB",
      "path": "13"
    },
    "8512": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "AND",
      "path": "13"
    },
    "8513": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8514": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8515": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "POP",
      "path": "13"
    },
    "8516": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8519": {
      "op": "MLOAD"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8522": {
      "op": "ADD"
    },
    "8523": {
      "op": "PUSH3",
      "value": "0x2157"
    },
    "8527": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "8528": {
      "op": "SWAP2"
    },
    "8529": {
      "op": "SWAP1"
    },
    "8530": {
      "op": "PUSH3",
      "value": "0x3C87"
    },
    "8534": {
      "op": "JUMP"
    },
    "8535": {
      "op": "JUMPDEST"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8538": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8539": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8540": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "8542": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "NOT",
      "path": "13"
    },
    "8543": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8544": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8545": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "SUB",
      "path": "13"
    },
    "8546": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "ADD",
      "path": "13"
    },
    "8547": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8548": {
      "fn": "Vault.transfer",
      "offset": [
        7054,
        7273
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8549": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8550": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8551": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8552": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8554": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8555": {
      "op": "ADD"
    },
    "8556": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8557": {
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8558": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8564": {
      "op": "SHL"
    },
    "8565": {
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "8566": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "8567": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8569": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8573": {
      "op": "SHL"
    },
    "8574": {
      "op": "SUB"
    },
    "8575": {
      "op": "NOT"
    },
    "8576": {
      "op": "SWAP1"
    },
    "8577": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8578": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "AND",
      "path": "6"
    },
    "8579": {
      "op": "SWAP3"
    },
    "8580": {
      "op": "SWAP1"
    },
    "8581": {
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8582": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "OR",
      "path": "6"
    },
    "8583": {
      "offset": [
        3192,
        3199
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8584": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8585": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8586": {
      "fn": "Vault.transfer",
      "offset": [
        7027,
        7287
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8587": {
      "offset": [
        3160,
        3217
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8588": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x219E"
    },
    "8592": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8594": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8595": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8597": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8599": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "8601": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "8602": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "8603": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "8604": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8605": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8606": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8607": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8609": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8611": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "8613": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "8614": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "8615": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "8616": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA58A3F1D"
    },
    "8621": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8622": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8623": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8625": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8626": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8627": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "8632": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "8633": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "8635": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "8636": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8637": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8638": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8640": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "ADD",
      "path": "6"
    },
    "8641": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x21CD"
    },
    "8645": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8646": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8647": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8648": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x393A"
    },
    "8652": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8653": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8654": {
      "fn": "Vault.transfer",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8658": {
      "fn": "Vault.transfer",
      "offset": [
        7312,
        7392
      ],
      "op": "MLOAD",
      "path": "13",
      "statement": 32
    },
    "8659": {
      "fn": "Vault.transfer",
      "offset": [
        7312,
        7392
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8660": {
      "op": "DUP4"
    },
    "8661": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "SUB",
      "path": "13"
    },
    "8662": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8665": {
      "op": "DUP8"
    },
    "8666": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8667": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "8668": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8669": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7336
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8670": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8671": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        7322,
        7342
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x21E8"
    },
    "8675": {
      "fn": "Vault.transfer",
      "offset": [
        7322,
        7342
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8676": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8678": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8679": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "REVERT",
      "path": "13"
    },
    "8680": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8681": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "POP",
      "path": "13"
    },
    "8682": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "GAS",
      "path": "13"
    },
    "8683": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "CALL",
      "path": "13"
    },
    "8684": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8685": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        7344,
        7368
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8686": {
      "fn": "Vault.transfer",
      "offset": [
        7344,
        7368
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8687": {
      "fn": "Vault.transfer",
      "offset": [
        7370,
        7384
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x21FD"
    },
    "8691": {
      "fn": "Vault.transfer",
      "offset": [
        7370,
        7391
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8692": {
      "fn": "Vault.transfer",
      "offset": [
        7370,
        7391
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "8693": {
      "fn": "Vault.transfer",
      "offset": [
        7370,
        7391
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8695": {
      "fn": "Vault.transfer",
      "offset": [
        7312,
        7321
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8696": {
      "fn": "Vault.transfer",
      "jump": "i",
      "offset": [
        7312,
        7392
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "8697": {
      "fn": "Vault.transfer",
      "offset": [
        7312,
        7392
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "8698": {
      "offset": [
        779,
        780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8700": {
      "fn": "Vault.transfer",
      "offset": [
        779,
        780
      ],
      "op": "REVERT",
      "path": "16"
    },
    "8701": {
      "offset": [
        954,
        955
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8702": {
      "fn": "Vault.transfer",
      "offset": [
        954,
        955
      ],
      "op": "POP",
      "path": "16"
    },
    "8703": {
      "offset": [
        6070,
        6071
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2233"
    },
    "8707": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "8708": {
      "fn": "Vault.transfer",
      "offset": [
        6709,
        7399
      ],
      "op": "POP",
      "path": "13"
    },
    "8709": {
      "fn": "Vault.transfer",
      "jump": "o",
      "offset": [
        6709,
        7399
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2216"
    },
    "8713": {
      "fn": "Vault.transferBatch",
      "offset": [
        7804,
        8355
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8714": {
      "offset": [
        6024,
        6034
      ],
      "op": "POP",
      "path": "9"
    },
    "8715": {
      "fn": "Vault.transferBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "POP",
      "path": "9"
    },
    "8716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8718": {
      "op": "DUP9"
    },
    "8719": {
      "op": "ADD"
    },
    "8720": {
      "offset": [
        6024,
        6034
      ],
      "op": "DUP9",
      "path": "9"
    },
    "8721": {
      "fn": "Vault.transferBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x30B3"
    },
    "8725": {
      "fn": "Vault.transferBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8726": {
      "fn": "Vault.transferBatch",
      "offset": [
        6024,
        6034
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8727": {
      "offset": [
        6023,
        6034
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2228"
    },
    "8731": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8733": {
      "fn": "Vault.transferBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "DUP10",
      "path": "9"
    },
    "8734": {
      "fn": "Vault.transferBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "8735": {
      "fn": "Vault.transferBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "8737": {
      "op": "DUP11"
    },
    "8738": {
      "op": "ADD"
    },
    "8739": {
      "op": "PUSH3",
      "value": "0x30B3"
    },
    "8743": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8744": {
      "fn": "Vault.transferBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8745": {
      "op": "DUP9"
    },
    "8746": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8748": {
      "fn": "Vault.transferBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "ADD",
      "path": "9"
    },
    "8749": {
      "fn": "Vault.transferBatch",
      "offset": [
        6015,
        6060
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "8750": {
      "op": "PUSH3",
      "value": "0x2984"
    },
    "8754": {
      "op": "JUMP"
    },
    "8755": {
      "op": "JUMPDEST"
    },
    "8756": {
      "op": "POP"
    },
    "8757": {
      "op": "POP"
    },
    "8758": {
      "op": "POP"
    },
    "8759": {
      "op": "POP"
    },
    "8760": {
      "op": "POP"
    },
    "8761": {
      "op": "POP"
    },
    "8762": {
      "op": "POP"
    },
    "8763": {
      "op": "JUMP"
    },
    "8764": {
      "op": "JUMPDEST"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8767": {
      "op": "SLOAD"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8770": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "8772": {
      "op": "SHL"
    },
    "8773": {
      "offset": [
        6015,
        6060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8774": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DIV",
      "path": "13"
    },
    "8775": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "8777": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "AND",
      "path": "13"
    },
    "8778": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8779": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2290"
    },
    "8783": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8784": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8786": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8787": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "8791": {
      "fn": "Vault.transferBatch",
      "offset": [
        7997,
        8004
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "8793": {
      "fn": "Vault.transferBatch",
      "offset": [
        7997,
        8004
      ],
      "op": "SHL",
      "path": "13"
    },
    "8794": {
      "fn": "Vault.transferBatch",
      "offset": [
        8089,
        8116
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8795": {
      "fn": "Vault.transferBatch",
      "offset": [
        8089,
        8116
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8796": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8798": {
      "fn": "Vault.transferBatch",
      "offset": [
        8146,
        8164
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8800": {
      "fn": "Vault.transferBatch",
      "offset": [
        8146,
        8164
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8801": {
      "fn": "Vault.transferBatch",
      "offset": [
        8146,
        8164
      ],
      "op": "ADD",
      "path": "13"
    },
    "8802": {
      "fn": "Vault.transferBatch",
      "offset": [
        8146,
        8164
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8803": {
      "fn": "Vault.transferBatch",
      "offset": [
        7997,
        8004
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x15"
    },
    "8805": {
      "fn": "Vault.transferBatch",
      "offset": [
        8146,
        8164
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "8807": {
      "fn": "Vault.transferBatch",
      "jump": "i",
      "offset": [
        8146,
        8164
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8808": {
      "fn": "Vault.transferBatch",
      "offset": [
        8146,
        8164
      ],
      "op": "ADD",
      "path": "13"
    },
    "8809": {
      "op": "MSTORE"
    },
    "8810": {
      "op": "PUSH21",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "8834": {
      "op": "SHL"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8837": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8838": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "ADD",
      "path": "13"
    },
    "8839": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8840": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "8842": {
      "fn": "Vault.transferBatch",
      "offset": [
        8166,
        8181
      ],
      "op": "ADD",
      "path": "13"
    },
    "8843": {
      "fn": "Vault.transferBatch",
      "offset": [
        8166,
        8181
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "8847": {
      "fn": "Vault.transferBatch",
      "offset": [
        8166,
        8181
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8848": {
      "fn": "Vault.transferBatch",
      "offset": [
        8166,
        8181
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8849": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8851": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8852": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8853": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC0"
    },
    "8855": {
      "op": "DUP2"
    },
    "8856": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "ADD",
      "path": "13"
    },
    "8857": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8858": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8859": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8860": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8861": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8862": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xE4D2F59B00000000000000000000000000000000000000000000000000000000"
    },
    "8895": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8896": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8897": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x22CF"
    },
    "8901": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8903": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8904": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "ADD",
      "path": "13"
    },
    "8905": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP6",
      "path": "13"
    },
    "8906": {
      "fn": "Vault.transferBatch",
      "offset": [
        8189,
        8202
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "8910": {
      "fn": "Vault.transferBatch",
      "offset": [
        8189,
        8202
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8911": {
      "fn": "Vault.transferBatch",
      "offset": [
        8189,
        8202
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8912": {
      "fn": "Vault.transferBatch",
      "offset": [
        8189,
        8202
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8914": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8916": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "8918": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "SHL",
      "path": "13"
    },
    "8919": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "SUB",
      "path": "13"
    },
    "8920": {
      "op": "AND"
    },
    "8921": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8922": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8923": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8925": {
      "fn": "Vault.transferBatch",
      "offset": [
        8138,
        8215
      ],
      "op": "ADD",
      "path": "13"
    },
    "8926": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8927": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8929": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "ADD",
      "path": "13"
    },
    "8930": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "8931": {
      "fn": "Vault.transferBatch",
      "offset": [
        8237,
        8256
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8932": {
      "fn": "Vault.transferBatch",
      "offset": [
        8237,
        8256
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8933": {
      "fn": "Vault.transferBatch",
      "offset": [
        8237,
        8256
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8935": {
      "fn": "Vault.transferBatch",
      "offset": [
        8237,
        8256
      ],
      "op": "ADD",
      "path": "13"
    },
    "8936": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8938": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8939": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8940": {
      "fn": "Vault.transferBatch",
      "jump": "i",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8942": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "ADD",
      "path": "13"
    },
    "8943": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8945": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8946": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8949": {
      "op": "ADD"
    },
    "8950": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8951": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "8953": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "ADD",
      "path": "13"
    },
    "8954": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "8955": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8956": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8957": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8959": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "ADD",
      "path": "13"
    },
    "8960": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8962": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8964": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8966": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "8968": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "SHL",
      "path": "13"
    },
    "8969": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "SUB",
      "path": "13"
    },
    "8970": {
      "op": "AND"
    },
    "8971": {
      "op": "DUP2"
    },
    "8972": {
      "op": "MSTORE"
    },
    "8973": {
      "op": "POP"
    },
    "8974": {
      "op": "DUP5"
    },
    "8975": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8978": {
      "op": "MLOAD"
    },
    "8979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8981": {
      "op": "ADD"
    },
    "8982": {
      "op": "PUSH3",
      "value": "0x2323"
    },
    "8986": {
      "op": "SWAP4"
    },
    "8987": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "8988": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8989": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8990": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BBA"
    },
    "8994": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8995": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8996": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8998": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8999": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9000": {
      "fn": "Vault.transferBatch",
      "offset": [
        8045,
        8274
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "9002": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "NOT",
      "path": "13"
    },
    "9003": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9004": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9005": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "SUB",
      "path": "13"
    },
    "9006": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "ADD",
      "path": "13"
    },
    "9007": {
      "op": "DUP2"
    },
    "9008": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9009": {
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9010": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9011": {
      "op": "MSTORE"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9014": {
      "op": "DUP2"
    },
    "9015": {
      "offset": [
        3160,
        3217
      ],
      "op": "ADD",
      "path": "6"
    },
    "9016": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9017": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9018": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9022": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9024": {
      "op": "SHL"
    },
    "9025": {
      "op": "SUB"
    },
    "9026": {
      "op": "AND"
    },
    "9027": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9029": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9033": {
      "op": "SHL"
    },
    "9034": {
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "9035": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3160,
        3217
      ],
      "op": "NOT",
      "path": "6"
    },
    "9036": {
      "offset": [
        3192,
        3199
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9037": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        3192,
        3199
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "9038": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "AND",
      "path": "13"
    },
    "9039": {
      "fn": "Vault.transferBatch",
      "offset": [
        8018,
        8288
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "9040": {
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9041": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9042": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "OR",
      "path": "6"
    },
    "9043": {
      "fn": "Vault.transferBatch",
      "jump": "i",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9044": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9045": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9046": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9047": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9048": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x236A"
    },
    "9052": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9054": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9055": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9057": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9059": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "9061": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "9062": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "9063": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "9064": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9065": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9066": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9067": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9069": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9071": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "9073": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "9074": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SUB",
      "path": "6"
    },
    "9075": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "9076": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA58A3F1D"
    },
    "9081": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9082": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9083": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9085": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9086": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9087": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "9092": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "AND",
      "path": "6"
    },
    "9093": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "9095": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SHL",
      "path": "6"
    },
    "9096": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9097": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9098": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9100": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "ADD",
      "path": "6"
    },
    "9101": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x2399"
    },
    "9105": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9106": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9107": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9108": {
      "fn": "Vault.transferBatch",
      "offset": [
        3160,
        3217
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x393A"
    },
    "9112": {
      "fn": "Vault.transferBatch",
      "offset": [
        8313,
        8348
      ],
      "op": "JUMP",
      "path": "13",
      "statement": 33
    },
    "9113": {
      "fn": "Vault.transferBatch",
      "offset": [
        8328,
        8347
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9114": {
      "fn": "Vault.transferBatch",
      "offset": [
        8328,
        8347
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9116": {
      "fn": "Vault.transferBatch",
      "offset": [
        8313,
        8327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9118": {
      "fn": "Vault.transferBatch",
      "jump": "i",
      "offset": [
        8313,
        8348
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9119": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3039,
        3170
      ],
      "op": "DUP1",
      "path": "9"
    },
    "9120": {
      "offset": [
        5711,
        5725
      ],
      "op": "DUP4",
      "path": "9"
    },
    "9121": {
      "offset": [
        5711,
        5723
      ],
      "op": "SUB",
      "path": "9"
    },
    "9122": {
      "jump": "i",
      "offset": [
        5711,
        5725
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9123": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5711,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "9125": {
      "op": "DUP8"
    },
    "9126": {
      "op": "DUP1"
    },
    "9127": {
      "op": "EXTCODESIZE"
    },
    "9128": {
      "op": "ISZERO"
    },
    "9129": {
      "op": "DUP1"
    },
    "9130": {
      "offset": [
        5697,
        5725
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "9131": {
      "offset": [
        5697,
        5707
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x23B4"
    },
    "9135": {
      "offset": [
        5697,
        5725
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9136": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "9138": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5689,
        5754
      ],
      "op": "DUP1",
      "path": "9"
    },
    "9139": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5689,
        5754
      ],
      "op": "REVERT",
      "path": "9"
    },
    "9140": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5689,
        5754
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9141": {
      "op": "POP"
    },
    "9142": {
      "op": "GAS"
    },
    "9143": {
      "op": "CALL"
    },
    "9144": {
      "offset": [
        5689,
        5754
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "9145": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5689,
        5754
      ],
      "op": "DUP1",
      "path": "9"
    },
    "9146": {
      "op": "ISZERO"
    },
    "9147": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x23C9"
    },
    "9151": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5689,
        5754
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9152": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        5689,
        5754
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9155": {
      "op": "DUP1"
    },
    "9156": {
      "op": "RETURNDATACOPY"
    },
    "9157": {
      "op": "RETURNDATASIZE"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9160": {
      "op": "REVERT"
    },
    "9161": {
      "op": "JUMPDEST"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "POP"
    },
    "9164": {
      "op": "POP"
    },
    "9165": {
      "op": "POP"
    },
    "9166": {
      "op": "PUSH3",
      "value": "0xE81"
    },
    "9170": {
      "op": "DUP5"
    },
    "9171": {
      "offset": [
        5689,
        5754
      ],
      "op": "DUP5",
      "path": "9"
    },
    "9172": {
      "op": "PUSH3",
      "value": "0x28E9"
    },
    "9176": {
      "offset": [
        5689,
        5754
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9177": {
      "offset": [
        6024,
        6034
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9178": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x23E3"
    },
    "9182": {
      "op": "PUSH3",
      "value": "0x2619"
    },
    "9186": {
      "op": "JUMP"
    },
    "9187": {
      "op": "JUMPDEST"
    },
    "9188": {
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9190": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9192": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "9194": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6024,
        6034
      ],
      "op": "SHL",
      "path": "9"
    },
    "9195": {
      "offset": [
        6023,
        6034
      ],
      "op": "SUB",
      "path": "9"
    },
    "9196": {
      "offset": [
        6015,
        6060
      ],
      "op": "AND",
      "path": "9"
    },
    "9197": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6015,
        6060
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9198": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9200": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9204": {
      "op": "SHL"
    },
    "9205": {
      "op": "SUB"
    },
    "9206": {
      "offset": [
        6015,
        6060
      ],
      "op": "AND",
      "path": "9"
    },
    "9207": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6015,
        6060
      ],
      "op": "EQ",
      "path": "9"
    },
    "9208": {
      "op": "PUSH3",
      "value": "0x2445"
    },
    "9212": {
      "offset": [
        6015,
        6060
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "9213": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "9215": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        6015,
        6060
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9222": {
      "op": "SHL"
    },
    "9223": {
      "op": "DUP2"
    },
    "9224": {
      "op": "MSTORE"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9229": {
      "op": "DUP3"
    },
    "9230": {
      "op": "ADD"
    },
    "9231": {
      "op": "MSTORE"
    },
    "9232": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9236": {
      "op": "DUP3"
    },
    "9237": {
      "op": "ADD"
    },
    "9238": {
      "op": "MSTORE"
    },
    "9239": {
      "offset": [
        6015,
        6060
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9274": {
      "offset": [
        6015,
        6060
      ],
      "op": "DUP3",
      "path": "9"
    },
    "9275": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3126
      ],
      "op": "ADD",
      "path": "9",
      "statement": 34
    },
    "9276": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9277": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "9279": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "ADD",
      "path": "9"
    },
    "9280": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "9284": {
      "op": "JUMP"
    },
    "9285": {
      "op": "JUMPDEST"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9288": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "9289": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9291": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3116,
        3133
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "9293": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3148,
        3163
      ],
      "op": "SHL",
      "path": "9",
      "statement": 35
    },
    "9294": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3148,
        3163
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "9295": {
      "op": "DIV"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9298": {
      "op": "AND"
    },
    "9299": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3148,
        3163
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "9300": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3148,
        3163
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x2499"
    },
    "9304": {
      "op": "JUMPI"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9307": {
      "fn": "GovernanceCommunityGuarded.suspend",
      "offset": [
        3148,
        3163
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "9308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9312": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28800,
        28944
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "9314": {
      "offset": [
        5711,
        5725
      ],
      "op": "SHL",
      "path": "9"
    },
    "9315": {
      "offset": [
        5711,
        5723
      ],
      "op": "DUP2",
      "path": "9"
    },
    "9316": {
      "jump": "i",
      "offset": [
        5711,
        5725
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9317": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5711,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9321": {
      "op": "DUP3"
    },
    "9322": {
      "op": "ADD"
    },
    "9323": {
      "op": "MSTORE"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "9326": {
      "offset": [
        5697,
        5725
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "9328": {
      "offset": [
        5697,
        5707
      ],
      "op": "DUP3",
      "path": "9"
    },
    "9329": {
      "offset": [
        5697,
        5725
      ],
      "op": "ADD",
      "path": "9"
    },
    "9330": {
      "offset": [
        5689,
        5754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9331": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH21",
      "path": "9",
      "value": "0x11DBDD995C9B985B98D94E881CDD5CDC195B991959"
    },
    "9353": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5A"
    },
    "9355": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "SHL",
      "path": "9"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9358": {
      "op": "DUP3"
    },
    "9359": {
      "op": "ADD"
    },
    "9360": {
      "offset": [
        5689,
        5754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9361": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "9363": {
      "op": "ADD"
    },
    "9364": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x562"
    },
    "9368": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9369": {
      "fn": "Vault.disablexCalls",
      "offset": [
        5689,
        5754
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9372": {
      "op": "DUP1"
    },
    "9373": {
      "op": "SLOAD"
    },
    "9374": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9407": {
      "op": "AND"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9412": {
      "op": "SHL"
    },
    "9413": {
      "op": "OR"
    },
    "9414": {
      "op": "SWAP1"
    },
    "9415": {
      "op": "SSTORE"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9418": {
      "op": "MLOAD"
    },
    "9419": {
      "offset": [
        5689,
        5754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "9421": {
      "op": "DUP2"
    },
    "9422": {
      "offset": [
        5689,
        5754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "9423": {
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x58E6C20B68C19F4D8DBC6206267AF40B288342464B433205BB41E5B65C4016DA"
    },
    "9456": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30214,
        30228
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9459": {
      "op": "ADD"
    },
    "9460": {
      "op": "PUSH3",
      "value": "0x61A"
    },
    "9464": {
      "offset": [
        30214,
        30228
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9465": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30214,
        30228
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9466": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2503"
    },
    "9470": {
      "branch": 62,
      "fn": "Vault.disablexCalls",
      "offset": [
        30214,
        30228
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2619"
    },
    "9474": {
      "offset": [
        30206,
        30258
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9475": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30206,
        30258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9476": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9478": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9482": {
      "op": "SHL"
    },
    "9483": {
      "op": "SUB"
    },
    "9484": {
      "offset": [
        30206,
        30258
      ],
      "op": "AND",
      "path": "13"
    },
    "9485": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30206,
        30258
      ],
      "op": "CALLER",
      "path": "13"
    },
    "9486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9488": {
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9490": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "9492": {
      "fn": "Vault.disablexCalls",
      "offset": [
        30206,
        30258
      ],
      "op": "SHL",
      "path": "13"
    },
    "9493": {
      "op": "SUB"
    },
    "9494": {
      "op": "AND"
    },
    "9495": {
      "op": "EQ"
    },
    "9496": {
      "op": "PUSH3",
      "value": "0x2565"
    },
    "9500": {
      "op": "JUMPI"
    },
    "9501": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9503": {
      "op": "MLOAD"
    },
    "9504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9510": {
      "op": "SHL"
    },
    "9511": {
      "op": "DUP2"
    },
    "9512": {
      "op": "MSTORE"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9515": {
      "offset": [
        30206,
        30258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "9517": {
      "op": "DUP3"
    },
    "9518": {
      "offset": [
        30206,
        30258
      ],
      "op": "ADD",
      "path": "13"
    },
    "9519": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28897,
        28902
      ],
      "op": "MSTORE",
      "path": "13",
      "statement": 36
    },
    "9520": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28880,
        28902
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x18"
    },
    "9522": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28880,
        28902
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "9524": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28880,
        28902
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9525": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28880,
        28902
      ],
      "op": "ADD",
      "path": "13"
    },
    "9526": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28880,
        28902
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9527": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28880,
        28902
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x476F7665726E616E63653A206E6F7420676F7665726E6F720000000000000000"
    },
    "9560": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28917,
        28937
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 37,
      "value": "0x44"
    },
    "9562": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28917,
        28937
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9563": {
      "op": "ADD"
    },
    "9564": {
      "op": "MSTORE"
    },
    "9565": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9567": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28917,
        28937
      ],
      "op": "ADD",
      "path": "13"
    },
    "9568": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28917,
        28937
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "9572": {
      "op": "JUMP"
    },
    "9573": {
      "op": "JUMPDEST"
    },
    "9574": {
      "fn": "Vault.disablexCalls",
      "offset": [
        28917,
        28937
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9576": {
      "op": "SLOAD"
    },
    "9577": {
      "fn": "Vault._getGovernor",
      "offset": [
        2813,
        2936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9579": {
      "fn": "Vault._getGovernor",
      "offset": [
        2869,
        2876
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB0"
    },
    "9581": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SHL",
      "path": "6"
    },
    "9582": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9583": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DIV",
      "path": "13",
      "statement": 38
    },
    "9584": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "9586": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "AND",
      "path": "13"
    },
    "9587": {
      "op": "PUSH3",
      "value": "0x25C0"
    },
    "9591": {
      "op": "JUMPI"
    },
    "9592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9594": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9595": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x461BCD"
    },
    "9599": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE5"
    },
    "9601": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SHL",
      "path": "13"
    },
    "9602": {
      "op": "DUP2"
    },
    "9603": {
      "op": "MSTORE"
    },
    "9604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9608": {
      "op": "DUP3"
    },
    "9609": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "ADD",
      "path": "6"
    },
    "9610": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9611": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x19"
    },
    "9613": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9615": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2927
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9616": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2927
      ],
      "op": "ADD",
      "path": "13"
    },
    "9617": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9618": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x5661756C743A207843616C6C73206E6F7420656E61626C656400000000000000"
    },
    "9651": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "9653": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP3",
      "path": "13"
    },
    "9654": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "ADD",
      "path": "13"
    },
    "9655": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9656": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "9658": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "ADD",
      "path": "13"
    },
    "9659": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x562"
    },
    "9663": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9664": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9665": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9667": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9668": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "9669": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9702": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "AND",
      "path": "6"
    },
    "9703": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9704": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "9705": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9707": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9708": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9709": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9710": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9711": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x55F83E6FCE30D9FD43A6CA0101BC68CF99B4944A9D9EB39A961533C04BFA3966"
    },
    "9744": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9745": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9747": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "ADD",
      "path": "13"
    },
    "9748": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x61A"
    },
    "9752": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9753": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9754": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9756": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9757": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "9758": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9760": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9762": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "9764": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SHL",
      "path": "13"
    },
    "9765": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SUB",
      "path": "13"
    },
    "9766": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "AND",
      "path": "13"
    },
    "9767": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9769": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9771": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "9773": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SHL",
      "path": "13"
    },
    "9774": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SUB",
      "path": "13"
    },
    "9775": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "AND",
      "path": "13"
    },
    "9776": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCD1B4D20"
    },
    "9781": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9783": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9784": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9785": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "9790": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "AND",
      "path": "13"
    },
    "9791": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "9793": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SHL",
      "path": "13"
    },
    "9794": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9795": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "9796": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "9798": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "ADD",
      "path": "13"
    },
    "9799": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "9801": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9803": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9804": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9805": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP4",
      "path": "13"
    },
    "9806": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "SUB",
      "path": "13"
    },
    "9807": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9808": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP7",
      "path": "13"
    },
    "9809": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9810": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "9811": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "9812": {
      "fn": "Vault._getGovernor",
      "offset": [
        2895,
        2929
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9813": {
      "fn": "Vault._getGovernor",
      "jump": "i",
      "offset": [
        2895,
        2929
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "9814": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        815,
        1018
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x265F"
    },
    "9818": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "JUMPI",
      "path": "3",
      "statement": 39
    },
    "9819": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9821": {
      "op": "DUP1"
    },
    "9822": {
      "op": "REVERT"
    },
    "9823": {
      "op": "JUMPDEST"
    },
    "9824": {
      "op": "POP"
    },
    "9825": {
      "op": "GAS"
    },
    "9826": {
      "op": "STATICCALL"
    },
    "9827": {
      "op": "ISZERO"
    },
    "9828": {
      "op": "DUP1"
    },
    "9829": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9830": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x2674"
    },
    "9834": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9835": {
      "op": "RETURNDATASIZE"
    },
    "9836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9838": {
      "op": "DUP1"
    },
    "9839": {
      "op": "RETURNDATACOPY"
    },
    "9840": {
      "op": "RETURNDATASIZE"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9843": {
      "op": "REVERT"
    },
    "9844": {
      "op": "JUMPDEST"
    },
    "9845": {
      "op": "POP"
    },
    "9846": {
      "op": "POP"
    },
    "9847": {
      "op": "POP"
    },
    "9848": {
      "op": "POP"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9851": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9852": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        1011
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "9853": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9855": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        935,
        940
      ],
      "op": "NOT",
      "path": "3"
    },
    "9856": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9858": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        992
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9859": {
      "op": "ADD"
    },
    "9860": {
      "op": "AND"
    },
    "9861": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9862": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "3"
    },
    "9863": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9864": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9866": {
      "op": "MSTORE"
    },
    "9867": {
      "op": "POP"
    },
    "9868": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9869": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "3"
    },
    "9870": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9871": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x9C0"
    },
    "9875": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9876": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9877": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x30D3"
    },
    "9881": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9882": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9883": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9885": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9886": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9888": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9890": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "9892": {
      "op": "SHL"
    },
    "9893": {
      "op": "SUB"
    },
    "9894": {
      "op": "DUP1"
    },
    "9895": {
      "op": "DUP6"
    },
    "9896": {
      "op": "AND"
    },
    "9897": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "9899": {
      "op": "DUP4"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "op": "MSTORE"
    },
    "9902": {
      "op": "DUP4"
    },
    "9903": {
      "op": "AND"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9906": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9907": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "3"
    },
    "9908": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9909": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "9911": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9912": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "ADD",
      "path": "3"
    },
    "9913": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9914": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9915": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9916": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x16FB"
    },
    "9920": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9921": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        915,
        934
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9922": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        915,
        1011
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9923": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3220,
        3346
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x23B872DD00000000000000000000000000000000000000000000000000000000"
    },
    "9956": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3280,
        3287
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "9957": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x84"
    },
    "9959": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "ADD",
      "path": "6"
    },
    "9960": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "JUMPDEST",
      "path": "13",
      "statement": 40
    },
    "9961": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "9963": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9964": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9965": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "9967": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "NOT",
      "path": "13"
    },
    "9968": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "DUP2",
      "path": "13"
    },
    "9969": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9970": {
      "op": "SUB"
    },
    "9971": {
      "op": "ADD"
    },
    "9972": {
      "op": "DUP2"
    },
    "9973": {
      "op": "MSTORE"
    },
    "9974": {
      "op": "SWAP2"
    },
    "9975": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9976": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9977": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9979": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9980": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3337
      ],
      "op": "ADD",
      "path": "13"
    },
    "9981": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3337
      ],
      "op": "DUP1",
      "path": "13"
    },
    "9982": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "9983": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9985": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9987": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "9989": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SHL",
      "path": "13"
    },
    "9990": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SUB",
      "path": "13"
    },
    "9991": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "AND",
      "path": "13"
    },
    "9992": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9994": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "9996": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "9998": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SHL",
      "path": "13"
    },
    "9999": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SUB",
      "path": "13"
    },
    "10000": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "NOT",
      "path": "13"
    },
    "10001": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10002": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "10003": {
      "fn": "AggKeyNonceConsumer.getKeyManager",
      "offset": [
        2660,
        2671
      ],
      "op": "AND",
      "path": "6"
    },
    "10004": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10005": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10006": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10007": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "OR",
      "path": "13"
    },
    "10008": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10009": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10010": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10011": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2C08"
    },
    "10015": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10016": {
      "fn": "Vault._getCommunityKey",
      "offset": [
        3306,
        3339
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10017": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11537,
        11950
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10019": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11691,
        11713
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10020": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11674,
        11688
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "10021": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11730,
        11944
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10023": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11754,
        11760
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10025": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11750,
        11751
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10027": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11750,
        11760
      ],
      "op": "SHL",
      "path": "13"
    },
    "10028": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11730,
        11944
      ],
      "op": "SUB",
      "path": "13"
    },
    "10029": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11730,
        11944
      ],
      "op": "AND",
      "path": "13"
    },
    "10030": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11730,
        11944
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10032": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11818
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 41,
      "value": "0x1"
    },
    "10034": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10036": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11819,
        11820
      ],
      "op": "SHL",
      "path": "13"
    },
    "10037": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "SUB",
      "path": "13"
    },
    "10038": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "AND",
      "path": "13"
    },
    "10039": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3F87B30F"
    },
    "10044": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10046": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10047": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10048": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "10053": {
      "fn": "Vault._deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11796,
        11821
      ],
      "op": "AND",
      "path": "13"
    },
    "10054": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "10056": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "SHL",
      "path": "13"
    },
    "10057": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10058": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10059": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "10061": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11821
      ],
      "op": "ADD",
      "path": "13"
    },
    "10062": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11828
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10064": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11828
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10066": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11796,
        11828
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10067": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11863
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10068": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11863
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10069": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11864,
        11865
      ],
      "op": "SUB",
      "path": "13"
    },
    "10070": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10071": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "DUP7",
      "path": "13"
    },
    "10072": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10073": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "10074": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10075": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10076": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10077": {
      "fn": "Vault._deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11841,
        11866
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x265F"
    },
    "10081": {
      "branch": 62,
      "offset": [
        11841,
        11866
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10082": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10084": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10085": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "REVERT",
      "path": "13"
    },
    "10086": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10087": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11866
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10088": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10090": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10091": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10092": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10093": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "LT",
      "path": "13"
    },
    "10094": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10095": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16FB"
    },
    "10099": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10100": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10101": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10102": {
      "fn": "Vault._deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11841,
        11872
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10103": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11841,
        11872
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10104": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10105": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "LT",
      "path": "13"
    },
    "10106": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2788"
    },
    "10110": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10111": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2788"
    },
    "10115": {
      "fn": "Vault._deployAndFetchBatch",
      "jump": "i",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "10119": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10120": {
      "op": "JUMPDEST"
    },
    "10121": {
      "op": "SWAP1"
    },
    "10122": {
      "op": "POP"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10125": {
      "op": "MUL"
    },
    "10126": {
      "op": "ADD"
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10129": {
      "op": "ADD"
    },
    "10130": {
      "op": "CALLDATALOAD"
    },
    "10131": {
      "op": "DUP5"
    },
    "10132": {
      "op": "DUP5"
    },
    "10133": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10134": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10135": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10136": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "LT",
      "path": "13"
    },
    "10137": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x27A7"
    },
    "10141": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10142": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x27A7"
    },
    "10146": {
      "op": "PUSH3",
      "value": "0x4031"
    },
    "10150": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10151": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10152": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10153": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "POP",
      "path": "13"
    },
    "10154": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10156": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "MUL",
      "path": "13"
    },
    "10157": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "ADD",
      "path": "13"
    },
    "10158": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10160": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "ADD",
      "path": "13"
    },
    "10161": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10163": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10164": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "ADD",
      "path": "13"
    },
    "10165": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10166": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x27C1"
    },
    "10170": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10171": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10172": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10176": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10177": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10178": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11778,
        11874
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10180": {
      "op": "MLOAD"
    },
    "10181": {
      "op": "PUSH3",
      "value": "0x27CF"
    },
    "10185": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11916,
        11919
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 42
    },
    "10186": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11916,
        11919
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2EE1"
    },
    "10190": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11730,
        11944
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10191": {
      "fn": "Vault._deployAndFetchBatch",
      "offset": [
        11730,
        11944
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10192": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13154,
        13495
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10194": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13251,
        13267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10196": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13234,
        13248
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10198": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13284,
        13489
      ],
      "op": "SHL",
      "path": "13"
    },
    "10199": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13308,
        13314
      ],
      "op": "SUB",
      "path": "13"
    },
    "10200": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13304,
        13305
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10201": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13304,
        13314
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10202": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13284,
        13489
      ],
      "op": "AND",
      "path": "13"
    },
    "10203": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13284,
        13489
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10204": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13284,
        13489
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10205": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13356
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 43,
      "value": "0x20"
    },
    "10207": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13356
      ],
      "op": "ADD",
      "path": "13"
    },
    "10208": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13357,
        13358
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10209": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10210": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10212": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10213": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10214": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10215": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "SUB",
      "path": "13"
    },
    "10216": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10217": {
      "fn": "Vault._fetchBatch",
      "jump": "i",
      "offset": [
        13340,
        13359
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10219": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "CREATE2",
      "path": "13"
    },
    "10220": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10221": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "POP",
      "path": "13"
    },
    "10222": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10223": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10224": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10225": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10226": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2800"
    },
    "10230": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13359
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10231": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "10232": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10234": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10235": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "10236": {
      "op": "RETURNDATASIZE"
    },
    "10237": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10239": {
      "fn": "Vault._fetchBatch",
      "jump": "i",
      "offset": [
        13340,
        13373
      ],
      "op": "REVERT",
      "path": "13"
    },
    "10240": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13340,
        13373
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10241": {
      "op": "POP"
    },
    "10242": {
      "op": "POP"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10245": {
      "op": "ADD"
    },
    "10246": {
      "op": "PUSH3",
      "value": "0x276A"
    },
    "10250": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13380
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10251": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13380
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10252": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13408
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10253": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13408
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10255": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13409,
        13410
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10256": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10257": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10258": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "LT",
      "path": "13"
    },
    "10259": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10260": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16FB"
    },
    "10264": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10265": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10266": {
      "fn": "Vault._fetchBatch",
      "jump": "i",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10267": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10268": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10269": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10270": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "LT",
      "path": "13"
    },
    "10271": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x282D"
    },
    "10275": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13411
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10276": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x282D"
    },
    "10280": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "10284": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10285": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10286": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2845"
    },
    "10290": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10291": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10293": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10295": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10296": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10297": {
      "fn": "Vault._fetchBatch",
      "jump": "i",
      "offset": [
        13392,
        13417
      ],
      "op": "MUL",
      "path": "13"
    },
    "10298": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13392,
        13417
      ],
      "op": "ADD",
      "path": "13"
    },
    "10299": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10300": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10301": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "ADD",
      "path": "13"
    },
    "10302": {
      "op": "SWAP2"
    },
    "10303": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "POP",
      "path": "13"
    },
    "10304": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10308": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10309": {
      "op": "JUMPDEST"
    },
    "10310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10316": {
      "op": "SHL"
    },
    "10317": {
      "op": "SUB"
    },
    "10318": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "AND",
      "path": "13"
    },
    "10319": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF109A0BE"
    },
    "10324": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10325": {
      "op": "DUP6"
    },
    "10326": {
      "op": "DUP5"
    },
    "10327": {
      "op": "DUP2"
    },
    "10328": {
      "op": "DUP2"
    },
    "10329": {
      "op": "LT"
    },
    "10330": {
      "op": "PUSH3",
      "value": "0x2868"
    },
    "10334": {
      "op": "JUMPI"
    },
    "10335": {
      "op": "PUSH3",
      "value": "0x2868"
    },
    "10339": {
      "op": "PUSH3",
      "value": "0x4031"
    },
    "10343": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10344": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10345": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10346": {
      "op": "POP"
    },
    "10347": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10349": {
      "op": "MUL"
    },
    "10350": {
      "op": "ADD"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10353": {
      "op": "ADD"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10356": {
      "op": "DUP2"
    },
    "10357": {
      "op": "ADD"
    },
    "10358": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10359": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2882"
    },
    "10363": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10364": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10365": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10369": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10370": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10373": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10374": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10376": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10378": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "10380": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SHL",
      "path": "13"
    },
    "10381": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SUB",
      "path": "13"
    },
    "10382": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "NOT",
      "path": "13"
    },
    "10383": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "10385": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10386": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10387": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SHL",
      "path": "13"
    },
    "10388": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "AND",
      "path": "13"
    },
    "10389": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10390": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10391": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10393": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10395": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10397": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SHL",
      "path": "13"
    },
    "10398": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SUB",
      "path": "13"
    },
    "10399": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10400": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10401": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "AND",
      "path": "13"
    },
    "10402": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "10404": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10405": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "ADD",
      "path": "13"
    },
    "10406": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10407": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "10409": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "ADD",
      "path": "13"
    },
    "10410": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10412": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10414": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10415": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13332,
        13419
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10416": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13461,
        13464
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 44
    },
    "10417": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13461,
        13464
      ],
      "op": "SUB",
      "path": "13"
    },
    "10418": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13461,
        13464
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10419": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13461,
        13464
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10421": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13461,
        13464
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10422": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13284,
        13489
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10423": {
      "fn": "Vault._fetchBatch",
      "offset": [
        13284,
        13489
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "10424": {
      "fn": "Vault._transferBatch",
      "offset": [
        8519,
        8889
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10425": {
      "fn": "Vault._transferBatch",
      "offset": [
        8625,
        8644
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10426": {
      "fn": "Vault._transferBatch",
      "offset": [
        8608,
        8622
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10427": {
      "fn": "Vault._transferBatch",
      "offset": [
        8661,
        8883
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x28C4"
    },
    "10431": {
      "fn": "Vault._transferBatch",
      "offset": [
        8685,
        8691
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10432": {
      "fn": "Vault._transferBatch",
      "offset": [
        8681,
        8682
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10434": {
      "fn": "Vault._transferBatch",
      "offset": [
        8681,
        8691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10435": {
      "fn": "Vault._transferBatch",
      "offset": [
        8661,
        8883
      ],
      "op": "REVERT",
      "path": "13"
    },
    "10436": {
      "fn": "Vault._transferBatch",
      "offset": [
        8661,
        8883
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10437": {
      "fn": "Vault._transferBatch",
      "offset": [
        8661,
        8883
      ],
      "op": "POP",
      "path": "13"
    },
    "10438": {
      "fn": "Vault._transferBatch",
      "offset": [
        8709,
        8813
      ],
      "op": "GAS",
      "path": "13",
      "statement": 45
    },
    "10439": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8738
      ],
      "op": "CALL",
      "path": "13"
    },
    "10440": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8738
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10441": {
      "fn": "Vault._transferBatch",
      "offset": [
        8739,
        8740
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10442": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10443": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x28D9"
    },
    "10447": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10448": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "10449": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10451": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10452": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "10453": {
      "fn": "Vault._transferBatch",
      "jump": "i",
      "offset": [
        8719,
        8741
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "10454": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10456": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "REVERT",
      "path": "13"
    },
    "10457": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10458": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "POP",
      "path": "13"
    },
    "10459": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "POP",
      "path": "13"
    },
    "10460": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "POP",
      "path": "13"
    },
    "10461": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "POP",
      "path": "13"
    },
    "10462": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10463": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8741
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10465": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "ADD",
      "path": "13"
    },
    "10466": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10467": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "POP",
      "path": "13"
    },
    "10468": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x280F"
    },
    "10472": {
      "op": "JUMP"
    },
    "10473": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10474": {
      "fn": "Vault._transferBatch",
      "jump": "i",
      "offset": [
        8719,
        8747
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10475": {
      "fn": "Vault._transferBatch",
      "offset": [
        8719,
        8747
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10477": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8768
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10478": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8768
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10479": {
      "fn": "Vault._transferBatch",
      "offset": [
        8769,
        8770
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10480": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "LT",
      "path": "13"
    },
    "10481": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10482": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16FB"
    },
    "10486": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10487": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x297B"
    },
    "10491": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10492": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10493": {
      "fn": "Vault._transferBatch",
      "jump": "i",
      "offset": [
        8749,
        8771
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10494": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10495": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10496": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "LT",
      "path": "13"
    },
    "10497": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x290F"
    },
    "10501": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10502": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8771
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x290F"
    },
    "10506": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "10510": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10511": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10512": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2927"
    },
    "10516": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10517": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10519": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "10521": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10522": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10523": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "MUL",
      "path": "13"
    },
    "10524": {
      "fn": "Vault._transferBatch",
      "jump": "i",
      "offset": [
        8749,
        8781
      ],
      "op": "ADD",
      "path": "13"
    },
    "10525": {
      "fn": "Vault._transferBatch",
      "offset": [
        8749,
        8781
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10526": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8802
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10527": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8802
      ],
      "op": "ADD",
      "path": "13"
    },
    "10528": {
      "fn": "Vault._transferBatch",
      "offset": [
        8803,
        8804
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10529": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "POP",
      "path": "13"
    },
    "10530": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10534": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10535": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10536": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10537": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10538": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10539": {
      "fn": "Vault._transferBatch",
      "jump": "i",
      "offset": [
        8783,
        8805
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10540": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10541": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "LT",
      "path": "13"
    },
    "10542": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x293C"
    },
    "10546": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10547": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x293C"
    },
    "10551": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8805
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x4031"
    },
    "10555": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8812
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10556": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8812
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10557": {
      "fn": "Vault._transferBatch",
      "offset": [
        8783,
        8812
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10558": {
      "fn": "Vault._transferBatch",
      "offset": [
        8709,
        8718
      ],
      "op": "POP",
      "path": "13"
    },
    "10559": {
      "fn": "Vault._transferBatch",
      "jump": "i",
      "offset": [
        8709,
        8813
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "10561": {
      "fn": "Vault._transferBatch",
      "offset": [
        8709,
        8813
      ],
      "op": "MUL",
      "path": "13"
    },
    "10562": {
      "fn": "Vault._transferBatch",
      "offset": [
        8855,
        8858
      ],
      "op": "ADD",
      "path": "13",
      "statement": 46
    },
    "10563": {
      "fn": "Vault._transferBatch",
      "offset": [
        8855,
        8858
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10565": {
      "fn": "Vault._transferBatch",
      "offset": [
        8661,
        8883
      ],
      "op": "ADD",
      "path": "13"
    },
    "10566": {
      "fn": "Vault._transferBatch",
      "offset": [
        8661,
        8883
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10568": {
      "fn": "Vault._transfer",
      "offset": [
        9414,
        10076
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10569": {
      "offset": [
        444,
        486
      ],
      "op": "ADD",
      "path": "16"
    },
    "10570": {
      "op": "SWAP1"
    },
    "10571": {
      "op": "PUSH3",
      "value": "0x2956"
    },
    "10575": {
      "op": "SWAP2"
    },
    "10576": {
      "op": "SWAP1"
    },
    "10577": {
      "op": "PUSH3",
      "value": "0x30B3"
    },
    "10581": {
      "fn": "Vault._transfer",
      "offset": [
        9543,
        9573
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10582": {
      "fn": "Vault._transfer",
      "offset": [
        9543,
        9573
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10583": {
      "branch": 63,
      "fn": "Vault._transfer",
      "offset": [
        9543,
        9573
      ],
      "op": "DUP7",
      "path": "13"
    },
    "10584": {
      "fn": "Vault._transfer",
      "offset": [
        9539,
        10070
      ],
      "op": "DUP7",
      "path": "13"
    },
    "10585": {
      "fn": "Vault._transfer",
      "offset": [
        9539,
        10070
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10586": {
      "fn": "Vault._transfer",
      "offset": [
        9539,
        10070
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10587": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10588": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "LT",
      "path": "13"
    },
    "10589": {
      "fn": "Vault._transfer",
      "offset": [
        9812,
        9824
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x296B"
    },
    "10593": {
      "branch": 63,
      "fn": "Vault._transfer",
      "offset": [
        9812,
        9824
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10594": {
      "op": "PUSH3",
      "value": "0x296B"
    },
    "10598": {
      "op": "PUSH3",
      "value": "0x4031"
    },
    "10602": {
      "op": "JUMP"
    },
    "10603": {
      "op": "JUMPDEST"
    },
    "10604": {
      "op": "SWAP1"
    },
    "10605": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9844
      ],
      "op": "POP",
      "path": "13"
    },
    "10606": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9844
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "10608": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9844
      ],
      "op": "MUL",
      "path": "13"
    },
    "10609": {
      "offset": [
        898,
        902
      ],
      "op": "ADD",
      "path": "13"
    },
    "10610": {
      "fn": "Vault._transfer",
      "offset": [
        898,
        902
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10612": {
      "fn": "Vault._transfer",
      "offset": [
        9874,
        9880
      ],
      "op": "ADD",
      "path": "13"
    },
    "10613": {
      "fn": "Vault._transfer",
      "offset": [
        9874,
        9880
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "10614": {
      "fn": "Vault._transfer",
      "offset": [
        9812,
        9824
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2984"
    },
    "10618": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10619": {
      "fn": "Vault._transfer",
      "offset": [
        9812,
        9824
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10620": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10622": {
      "fn": "Vault._transfer",
      "offset": [
        9874,
        9880
      ],
      "op": "ADD",
      "path": "13"
    },
    "10623": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9844
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x28ED"
    },
    "10627": {
      "offset": [
        898,
        902
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10628": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10629": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10631": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10633": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10635": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "SHL",
      "path": "13"
    },
    "10636": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "SUB",
      "path": "13"
    },
    "10637": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10638": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "AND",
      "path": "13"
    },
    "10639": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH20",
      "path": "13",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "10660": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "EQ",
      "path": "13"
    },
    "10661": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10662": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2A48"
    },
    "10666": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10667": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10669": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10670": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10672": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10674": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10676": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "SHL",
      "path": "13"
    },
    "10677": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "SUB",
      "path": "13"
    },
    "10678": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "AND",
      "path": "13"
    },
    "10679": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDAC"
    },
    "10682": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10683": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10685": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10686": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10688": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10690": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10691": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10692": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10693": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "SUB",
      "path": "13"
    },
    "10694": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10695": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10696": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP9",
      "path": "13"
    },
    "10697": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP9",
      "path": "13"
    },
    "10698": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "CALL",
      "path": "13"
    },
    "10699": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "10700": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "POP",
      "path": "13"
    },
    "10701": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "POP",
      "path": "13"
    },
    "10702": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "POP",
      "path": "13"
    },
    "10703": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "POP",
      "path": "13"
    },
    "10704": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "10705": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10706": {
      "fn": "Vault._transfer",
      "offset": [
        9830,
        9885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10708": {
      "fn": "Vault._transfer",
      "offset": [
        9811,
        9885
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10709": {
      "fn": "Vault._transfer",
      "offset": [
        9811,
        9885
      ],
      "op": "EQ",
      "path": "13"
    },
    "10710": {
      "fn": "Vault._transfer",
      "offset": [
        9811,
        9885
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x29FD"
    },
    "10714": {
      "branch": 64,
      "fn": "Vault._transfer",
      "offset": [
        9904,
        9911
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10715": {
      "fn": "Vault._transfer",
      "offset": [
        9899,
        9984
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10717": {
      "fn": "Vault._transfer",
      "offset": [
        9899,
        9984
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10718": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "SWAP2",
      "path": "13",
      "statement": 47
    },
    "10719": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "POP",
      "path": "13"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10722": {
      "op": "NOT"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10725": {
      "op": "RETURNDATASIZE"
    },
    "10726": {
      "op": "ADD"
    },
    "10727": {
      "op": "AND"
    },
    "10728": {
      "op": "DUP3"
    },
    "10729": {
      "op": "ADD"
    },
    "10730": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10732": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10733": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "10734": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10735": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10736": {
      "op": "RETURNDATASIZE"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10739": {
      "fn": "Vault._transfer",
      "offset": [
        9936,
        9969
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10741": {
      "op": "DUP5"
    },
    "10742": {
      "fn": "Vault._transfer",
      "offset": [
        9539,
        10070
      ],
      "op": "ADD",
      "path": "13"
    },
    "10743": {
      "fn": "Vault._transfer",
      "offset": [
        10014,
        10059
      ],
      "op": "RETURNDATACOPY",
      "path": "13",
      "statement": 48
    },
    "10744": {
      "op": "PUSH3",
      "value": "0x2A02"
    },
    "10748": {
      "op": "JUMP"
    },
    "10749": {
      "op": "JUMPDEST"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10752": {
      "op": "SWAP2"
    },
    "10753": {
      "fn": "Vault._transfer",
      "offset": [
        10014,
        10040
      ],
      "op": "POP",
      "path": "13"
    },
    "10754": {
      "fn": "Vault._transfer",
      "offset": [
        10014,
        10040
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10755": {
      "fn": "Vault._transfer",
      "offset": [
        10041,
        10050
      ],
      "op": "POP",
      "path": "13"
    },
    "10756": {
      "fn": "Vault._transfer",
      "offset": [
        10052,
        10058
      ],
      "op": "POP",
      "path": "13"
    },
    "10757": {
      "fn": "Vault._transfer",
      "offset": [
        10014,
        10040
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10758": {
      "fn": "Vault._transfer",
      "jump": "i",
      "offset": [
        10014,
        10059
      ],
      "op": "POP",
      "path": "13"
    },
    "10759": {
      "fn": "Vault._transfer",
      "offset": [
        10014,
        10059
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10760": {
      "fn": "Vault._transfer",
      "offset": [
        9414,
        10076
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x16FB"
    },
    "10764": {
      "branch": 64,
      "fn": "Vault._transfer",
      "offset": [
        9414,
        10076
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10765": {
      "fn": "Vault._transfer",
      "offset": [
        9414,
        10076
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10766": {
      "fn": "Vault._transfer",
      "jump": "o",
      "offset": [
        9414,
        10076
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10768": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10770": {
      "offset": [
        444,
        486
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "10772": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24247
      ],
      "op": "SHL",
      "path": "13"
    },
    "10773": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24247
      ],
      "op": "SUB",
      "path": "13"
    },
    "10774": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24247
      ],
      "op": "AND",
      "path": "13"
    },
    "10775": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24247
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x1C43B9761B3FBA5321CA8212BFC231945F668CCC0C446F333999EEA9CE8FDA81"
    },
    "10808": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24241
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10809": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24247
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10811": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24227,
        24247
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10812": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24247
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x831"
    },
    "10816": {
      "op": "SWAP2"
    },
    "10817": {
      "op": "DUP2"
    },
    "10818": {
      "op": "MSTORE"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10821": {
      "op": "ADD"
    },
    "10822": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24263
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10823": {
      "branch": 65,
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24227,
        24263
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10824": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10825": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2A5E"
    },
    "10829": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10831": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 49,
      "value": "0x1"
    },
    "10833": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10835": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "SHL",
      "path": "13"
    },
    "10836": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "SUB",
      "path": "13"
    },
    "10837": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10838": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "AND",
      "path": "13"
    },
    "10839": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10840": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10841": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24291,
        24315
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2CF4"
    },
    "10845": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24291,
        24315
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10846": {
      "op": "JUMPDEST"
    },
    "10847": {
      "op": "POP"
    },
    "10848": {
      "op": "POP"
    },
    "10849": {
      "op": "POP"
    },
    "10850": {
      "op": "JUMP"
    },
    "10851": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24326
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10852": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24326
      ],
      "op": "PUSH20",
      "path": "13",
      "value": "0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
    },
    "10873": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24334,
        24355
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2A87"
    },
    "10877": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24334,
        24355
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10879": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24334,
        24355
      ],
      "op": "DUP9",
      "path": "13"
    },
    "10880": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24334,
        24355
      ],
      "op": "ADD",
      "path": "13"
    },
    "10881": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24374,
        24382
      ],
      "op": "DUP9",
      "path": "13"
    },
    "10882": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24400,
        24410
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10886": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24400,
        24410
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10887": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24428,
        24435
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10888": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24428,
        24435
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10890": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24453,
        24473
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10892": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24453,
        24473
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10894": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24453,
        24473
      ],
      "op": "SHL",
      "path": "13"
    },
    "10895": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24453,
        24473
      ],
      "op": "SUB",
      "path": "13"
    },
    "10896": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24334,
        24355
      ],
      "op": "AND",
      "path": "13"
    },
    "10897": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24453,
        24473
      ],
      "op": "EQ",
      "path": "13"
    },
    "10898": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24453,
        24473
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10899": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24453,
        24473
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B33"
    },
    "10903": {
      "branch": 65,
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24491,
        24505
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10904": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24491,
        24512
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2AA9"
    },
    "10908": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24491,
        24512
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10910": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24491,
        24512
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10911": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "ADD",
      "path": "13"
    },
    "10912": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10914": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP9",
      "path": "13"
    },
    "10915": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "ADD",
      "path": "13"
    },
    "10916": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10920": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10921": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10922": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10924": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "10926": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "10928": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SHL",
      "path": "13"
    },
    "10929": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SUB",
      "path": "13"
    },
    "10930": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "AND",
      "path": "13"
    },
    "10931": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4D3338B9"
    },
    "10936": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10938": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP9",
      "path": "13"
    },
    "10939": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "ADD",
      "path": "13"
    },
    "10940": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "10941": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10942": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10943": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10944": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10945": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP8",
      "path": "13"
    },
    "10946": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2AD0"
    },
    "10950": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10952": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP16",
      "path": "13"
    },
    "10953": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "ADD",
      "path": "13"
    },
    "10954": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP16",
      "path": "13"
    },
    "10955": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "10959": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10960": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10961": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP15",
      "path": "13"
    },
    "10962": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10964": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "ADD",
      "path": "13"
    },
    "10965": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "10966": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10968": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10969": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP10",
      "path": "13"
    },
    "10970": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "10975": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "AND",
      "path": "13"
    },
    "10976": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "10978": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SHL",
      "path": "13"
    },
    "10979": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10980": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10981": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "10983": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "ADD",
      "path": "13"
    },
    "10984": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2AF9"
    },
    "10988": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "10989": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "10990": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "10991": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "10992": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "10993": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10994": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10995": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10996": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3DC7"
    },
    "11000": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11001": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11002": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11004": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11006": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11007": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11008": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "DUP4",
      "path": "13"
    },
    "11009": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24279,
        24526
      ],
      "op": "SUB",
      "path": "13"
    },
    "11010": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11011": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "DUP6",
      "path": "13"
    },
    "11012": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "DUP9",
      "path": "13"
    },
    "11013": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24557,
        24647
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 50
    },
    "11014": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "11015": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11016": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11017": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11018": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B13"
    },
    "11022": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11023": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11025": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11026": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24599,
        24623
      ],
      "op": "REVERT",
      "path": "13"
    },
    "11027": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24599,
        24623
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11028": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24625,
        24646
      ],
      "op": "POP",
      "path": "13"
    },
    "11029": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24625,
        24646
      ],
      "op": "GAS",
      "path": "13"
    },
    "11030": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24625,
        24646
      ],
      "op": "CALL",
      "path": "13"
    },
    "11031": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24625,
        24646
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11032": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24564,
        24584
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11033": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24564,
        24584
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11034": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24564,
        24584
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B28"
    },
    "11038": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24564,
        24584
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11039": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24625,
        24639
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "11040": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24564,
        24584
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11042": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24564,
        24584
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11043": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24564,
        24584
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "11044": {
      "op": "RETURNDATASIZE"
    },
    "11045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11047": {
      "op": "REVERT"
    },
    "11048": {
      "op": "JUMPDEST"
    },
    "11049": {
      "op": "POP"
    },
    "11050": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24557,
        24598
      ],
      "op": "POP",
      "path": "13"
    },
    "11051": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24557,
        24598
      ],
      "op": "POP",
      "path": "13"
    },
    "11052": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24557,
        24598
      ],
      "op": "POP",
      "path": "13"
    },
    "11053": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24557,
        24598
      ],
      "op": "POP",
      "path": "13"
    },
    "11054": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24557,
        24647
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2C00"
    },
    "11058": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24557,
        24647
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11059": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "JUMPDEST",
      "path": "13",
      "statement": 51
    },
    "11060": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B6E"
    },
    "11064": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B49"
    },
    "11068": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11070": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "DUP9",
      "path": "13"
    },
    "11071": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "ADD",
      "path": "13"
    },
    "11072": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11074": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "DUP10",
      "path": "13"
    },
    "11075": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24673,
        24697
      ],
      "op": "ADD",
      "path": "13"
    },
    "11076": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24673,
        24697
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "11080": {
      "op": "JUMP"
    },
    "11081": {
      "op": "JUMPDEST"
    },
    "11082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11084": {
      "op": "DUP9"
    },
    "11085": {
      "op": "ADD"
    },
    "11086": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24708
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "11087": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24708
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B5D"
    },
    "11091": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24726,
        24734
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11093": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24752,
        24762
      ],
      "op": "DUP11",
      "path": "13"
    },
    "11094": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24752,
        24762
      ],
      "op": "ADD",
      "path": "13"
    },
    "11095": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24780,
        24787
      ],
      "op": "DUP11",
      "path": "13"
    },
    "11096": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24780,
        24787
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "11100": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11101": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11102": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "11104": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "11106": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "11108": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "SHL",
      "path": "13"
    },
    "11109": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24805,
        24825
      ],
      "op": "SUB",
      "path": "13"
    },
    "11110": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24805,
        24825
      ],
      "op": "AND",
      "path": "13"
    },
    "11111": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24843,
        24857
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11112": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24843,
        24864
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11113": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24843,
        24864
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2CF4"
    },
    "11117": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24843,
        24864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11118": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11119": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2B80"
    },
    "11123": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11125": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP8",
      "path": "13"
    },
    "11126": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "ADD",
      "path": "13"
    },
    "11127": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11129": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP9",
      "path": "13"
    },
    "11130": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "ADD",
      "path": "13"
    },
    "11131": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "11135": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11136": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11137": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "11139": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "11141": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA0"
    },
    "11143": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SHL",
      "path": "13"
    },
    "11144": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SUB",
      "path": "13"
    },
    "11145": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "AND",
      "path": "13"
    },
    "11146": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4D3338B9"
    },
    "11151": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11152": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11153": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11154": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "i",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11155": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP7",
      "path": "13"
    },
    "11156": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2BA2"
    },
    "11160": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "11162": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP15",
      "path": "13"
    },
    "11163": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "ADD",
      "path": "13"
    },
    "11164": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP15",
      "path": "13"
    },
    "11165": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x30B3"
    },
    "11169": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11170": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11171": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP14",
      "path": "13"
    },
    "11172": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11174": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "ADD",
      "path": "13"
    },
    "11175": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "11176": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11178": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11179": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP9",
      "path": "13"
    },
    "11180": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "11185": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "AND",
      "path": "13"
    },
    "11186": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "11188": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SHL",
      "path": "13"
    },
    "11189": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11190": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11191": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11193": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "ADD",
      "path": "13"
    },
    "11194": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2BCB"
    },
    "11198": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "11199": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "11200": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "11201": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "11202": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "11203": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "11204": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "11205": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11206": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3DC7"
    },
    "11210": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11211": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11212": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11214": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11216": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11217": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11218": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24661,
        24878
      ],
      "op": "DUP4",
      "path": "13"
    },
    "11219": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24223,
        24889
      ],
      "op": "SUB",
      "path": "13"
    },
    "11220": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11221": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11223": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "DUP8",
      "path": "13"
    },
    "11224": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11225": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "11226": {
      "fn": "Vault._executexSwapAndCall",
      "offset": [
        24028,
        24895
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "11227": {
      "fn": "Vault._executexSwapAndCall",
      "jump": "o",
      "offset": [
        24028,
        24895
      ],
      "op": "DUP1",
      "path": "13"
    },
    "11228": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3022,
        3773
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11229": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x2BE6"
    },
    "11233": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11234": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11236": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11237": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "REVERT",
      "path": "3"
    },
    "11238": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "POP",
      "path": "3"
    },
    "11240": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "GAS",
      "path": "3"
    },
    "11241": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "CALL",
      "path": "3"
    },
    "11242": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11243": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11245": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x2BFB"
    },
    "11249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11250": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11251": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "11255": {
      "op": "RETURNDATASIZE"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11258": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "REVERT",
      "path": "3"
    },
    "11259": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11260": {
      "op": "POP"
    },
    "11261": {
      "op": "POP"
    },
    "11262": {
      "op": "POP"
    },
    "11263": {
      "op": "POP"
    },
    "11264": {
      "op": "JUMPDEST"
    },
    "11265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "POP",
      "path": "3"
    },
    "11266": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "POP",
      "path": "3"
    },
    "11267": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "POP",
      "path": "3"
    },
    "11268": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "11269": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "11270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3494
      ],
      "op": "POP",
      "path": "3"
    },
    "11271": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11272": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3467,
        3536
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11273": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11275": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3567
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x2C5F"
    },
    "11279": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3441,
        3536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11282": {
      "op": "MLOAD"
    },
    "11283": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3550,
        3571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11286": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3546,
        3767
      ],
      "op": "ADD",
      "path": "3"
    },
    "11287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3690,
        3700
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 52,
      "value": "0x40"
    },
    "11289": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11290": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11291": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11295": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11297": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "ADD",
      "path": "3"
    },
    "11298": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "11331": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11332": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11333": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "POP",
      "path": "3"
    },
    "11334": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "DUP6",
      "path": "3"
    },
    "11335": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11337": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3679,
        3709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "11341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "SHL",
      "path": "3"
    },
    "11342": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "SUB",
      "path": "3"
    },
    "11343": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "AND",
      "path": "3"
    },
    "11344": {
      "op": "PUSH3",
      "value": "0x2D3F"
    },
    "11348": {
      "op": "SWAP1"
    },
    "11349": {
      "op": "SWAP3"
    },
    "11350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11351": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11352": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "AND",
      "path": "3"
    },
    "11358": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11359": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11360": {
      "op": "DUP1"
    },
    "11361": {
      "op": "MLOAD"
    },
    "11362": {
      "op": "SWAP1"
    },
    "11363": {
      "op": "SWAP2"
    },
    "11364": {
      "op": "POP"
    },
    "11365": {
      "op": "ISZERO"
    },
    "11366": {
      "op": "PUSH3",
      "value": "0x2A5E"
    },
    "11370": {
      "op": "JUMPI"
    },
    "11371": {
      "op": "DUP1"
    },
    "11372": {
      "op": "DUP1"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11375": {
      "op": "ADD"
    },
    "11376": {
      "op": "SWAP1"
    },
    "11377": {
      "op": "MLOAD"
    },
    "11378": {
      "op": "DUP2"
    },
    "11379": {
      "op": "ADD"
    },
    "11380": {
      "op": "SWAP1"
    },
    "11381": {
      "op": "PUSH3",
      "value": "0x2C80"
    },
    "11385": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3671,
        3756
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11386": {
      "op": "SWAP1"
    },
    "11387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        809
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x316D"
    },
    "11391": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "JUMP",
      "path": "3",
      "statement": 53
    },
    "11392": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11393": {
      "op": "PUSH3",
      "value": "0x2A5E"
    },
    "11397": {
      "op": "JUMPI"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11400": {
      "op": "MLOAD"
    },
    "11401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11407": {
      "op": "SHL"
    },
    "11408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11414": {
      "op": "DUP3"
    },
    "11415": {
      "op": "ADD"
    },
    "11416": {
      "op": "MSTORE"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11421": {
      "op": "DUP3"
    },
    "11422": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "ADD",
      "path": "3"
    },
    "11423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        716,
        802
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11424": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "11457": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        736,
        741
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "11459": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11460": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        789
      ],
      "op": "ADD",
      "path": "3"
    },
    "11461": {
      "op": "MSTORE"
    },
    "11462": {
      "op": "PUSH32",
      "value": "0x6F74207375636365656400000000000000000000000000000000000000000000"
    },
    "11495": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        743,
        801
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "11497": {
      "op": "DUP3"
    },
    "11498": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "ADD",
      "path": "4"
    },
    "11499": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11500": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 54,
      "value": "0x84"
    },
    "11502": {
      "fn": "Address.functionCall",
      "offset": [
        3729,
        3735
      ],
      "op": "ADD",
      "path": "4"
    },
    "11503": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3741
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x562"
    },
    "11507": {
      "fn": "Address.functionCall",
      "offset": [
        3743,
        3744
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11508": {
      "fn": "Address.functionCall",
      "offset": [
        3746,
        3758
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11509": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11511": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3759
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11512": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "11514": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "11516": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "11518": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SHL",
      "path": "4"
    },
    "11519": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "SUB",
      "path": "4"
    },
    "11520": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11521": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "AND",
      "path": "4"
    },
    "11522": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "11524": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3766
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11525": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3766
      ],
      "op": "ADD",
      "path": "4"
    },
    "11526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4739
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "11529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4784,
        4789
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 55
    },
    "11530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4780
      ],
      "op": "ADD",
      "path": "4"
    },
    "11531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11532": {
      "branch": 66,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4789
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2A5E"
    },
    "11538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11540": {
      "op": "SWAP1"
    },
    "11541": {
      "op": "PUSH32",
      "value": "0xA9059CBB00000000000000000000000000000000000000000000000000000000"
    },
    "11574": {
      "op": "SWAP1"
    },
    "11575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "11577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "ADD",
      "path": "4"
    },
    "11578": {
      "op": "PUSH3",
      "value": "0x26E8"
    },
    "11582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "11586": {
      "op": "PUSH3",
      "value": "0x2D50"
    },
    "11590": {
      "op": "DUP5"
    },
    "11591": {
      "op": "DUP5"
    },
    "11592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11594": {
      "op": "DUP6"
    },
    "11595": {
      "op": "PUSH3",
      "value": "0x2D5A"
    },
    "11599": {
      "op": "JUMP"
    },
    "11600": {
      "op": "JUMPDEST"
    },
    "11601": {
      "op": "SWAP1"
    },
    "11602": {
      "op": "POP"
    },
    "11603": {
      "op": "JUMPDEST"
    },
    "11604": {
      "op": "SWAP4"
    },
    "11605": {
      "op": "SWAP3"
    },
    "11606": {
      "op": "POP"
    },
    "11607": {
      "op": "POP"
    },
    "11608": {
      "op": "POP"
    },
    "11609": {
      "op": "JUMP"
    },
    "11610": {
      "op": "JUMPDEST"
    },
    "11611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "11613": {
      "op": "DUP3"
    },
    "11614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4751,
        4832
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "11615": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "LT",
      "path": "4"
    },
    "11616": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "11617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH3",
      "path": "4",
      "statement": 56,
      "value": "0x2DD4"
    },
    "11621": {
      "branch": 66,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "11622": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11625": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11629": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11631": {
      "op": "SHL"
    },
    "11632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "11638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "ADD",
      "path": "4"
    },
    "11640": {
      "op": "MSTORE"
    },
    "11641": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11645": {
      "op": "DUP3"
    },
    "11646": {
      "op": "ADD"
    },
    "11647": {
      "op": "MSTORE"
    },
    "11648": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11683": {
      "op": "DUP3"
    },
    "11684": {
      "op": "ADD"
    },
    "11685": {
      "op": "MSTORE"
    },
    "11686": {
      "op": "PUSH32",
      "value": "0x722063616C6C0000000000000000000000000000000000000000000000000000"
    },
    "11719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11722": {
      "op": "ADD"
    },
    "11723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4842,
        4902
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4973,
        4985
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x84"
    },
    "11726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4987,
        5010
      ],
      "op": "ADD",
      "path": "4"
    },
    "11727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5020
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x562"
    },
    "11731": {
      "op": "JUMP"
    },
    "11732": {
      "op": "JUMPDEST"
    },
    "11733": {
      "op": "DUP5"
    },
    "11734": {
      "op": "EXTCODESIZE"
    },
    "11735": {
      "op": "PUSH3",
      "value": "0x2E24"
    },
    "11739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "11740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5034,
        5039
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5046
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x461BCD"
    },
    "11747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE5"
    },
    "11749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SHL",
      "path": "4"
    },
    "11750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "11754": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "11756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "4"
    },
    "11758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1D"
    },
    "11761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "11763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "4"
    },
    "11765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "11799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "11801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "4"
    },
    "11803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11804": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "11806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "ADD",
      "path": "4"
    },
    "11807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x562"
    },
    "11811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11812": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP7",
      "path": "4"
    },
    "11817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "11819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "11821": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "11823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SHL",
      "path": "4"
    },
    "11824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "4"
    },
    "11825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "AND",
      "path": "4"
    },
    "11826": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "4"
    },
    "11827": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "4"
    },
    "11828": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2E42"
    },
    "11835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11836": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11837": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3907"
    },
    "11841": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11845": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SUB",
      "path": "4"
    },
    "11851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP6",
      "path": "4"
    },
    "11853": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP8",
      "path": "4"
    },
    "11854": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "GAS",
      "path": "4"
    },
    "11855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "CALL",
      "path": "4"
    },
    "11856": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "11857": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "4"
    },
    "11858": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "4"
    },
    "11859": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "POP",
      "path": "4"
    },
    "11860": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "11861": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5014,
        5047
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11862": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11864": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11865": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "EQ",
      "path": "4"
    },
    "11866": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4972,
        5047
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2E81"
    },
    "11870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "JUMPI",
      "path": "4",
      "statement": 57
    },
    "11871": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5082,
        5089
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5091,
        5101
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "11874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5103,
        5115
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5081
      ],
      "op": "POP",
      "path": "4"
    },
    "11876": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5064,
        5116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "11878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5064,
        5116
      ],
      "op": "NOT",
      "path": "4"
    },
    "11879": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5057,
        5116
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "11881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4600,
        5123
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "11882": {
      "op": "ADD"
    },
    "11883": {
      "op": "AND"
    },
    "11884": {
      "op": "DUP3"
    },
    "11885": {
      "op": "ADD"
    },
    "11886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11888": {
      "op": "MSTORE"
    },
    "11889": {
      "op": "RETURNDATASIZE"
    },
    "11890": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4600,
        5123
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11891": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7083,
        7808
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11892": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7198,
        7210
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "11893": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7226,
        7233
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11895": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "11897": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "DUP5",
      "path": "4"
    },
    "11898": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "ADD",
      "path": "4"
    },
    "11899": {
      "op": "RETURNDATACOPY"
    },
    "11900": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7256,
        7266
      ],
      "op": "PUSH3",
      "path": "4",
      "statement": 58,
      "value": "0x2E86"
    },
    "11904": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11905": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7249,
        7266
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11906": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7222,
        7802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "11908": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11909": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7384
      ],
      "op": "POP",
      "path": "4"
    },
    "11910": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7367,
        7388
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11911": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "POP",
      "path": "4"
    },
    "11912": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11913": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7635
      ],
      "op": "POP",
      "path": "4"
    },
    "11914": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7619,
        7636
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11915": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7685,
        7700
      ],
      "op": "POP",
      "path": "4"
    },
    "11916": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7682
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2E98"
    },
    "11920": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7668,
        7670
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11921": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7664,
        7683
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11922": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7657,
        7701
      ],
      "op": "DUP7",
      "path": "4"
    },
    "11923": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7363,
        7792
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2EA3"
    },
    "11927": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "4",
      "statement": 59
    },
    "11928": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11929": {
      "op": "SWAP8"
    },
    "11930": {
      "op": "SWAP7"
    },
    "11931": {
      "op": "POP"
    },
    "11932": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "POP",
      "path": "4"
    },
    "11933": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "POP",
      "path": "4"
    },
    "11934": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "POP",
      "path": "4"
    },
    "11935": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "POP",
      "path": "4"
    },
    "11936": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "POP",
      "path": "4"
    },
    "11937": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7764,
        7776
      ],
      "op": "POP",
      "path": "4"
    },
    "11938": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11939": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11940": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7757,
        7777
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "11942": {
      "fn": "Address._verifyCallResult",
      "jump": "i",
      "offset": [
        7757,
        7777
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11943": {
      "op": "ISZERO"
    },
    "11944": {
      "op": "PUSH3",
      "value": "0x2EB4"
    },
    "11948": {
      "op": "JUMPI"
    },
    "11949": {
      "op": "POP"
    },
    "11950": {
      "op": "DUP2"
    },
    "11951": {
      "op": "PUSH3",
      "value": "0x2D53"
    },
    "11955": {
      "op": "JUMP"
    },
    "11956": {
      "op": "JUMPDEST"
    },
    "11957": {
      "jump": "o",
      "op": "DUP3"
    },
    "11958": {
      "op": "MLOAD"
    },
    "11959": {
      "op": "ISZERO"
    },
    "11960": {
      "op": "PUSH3",
      "value": "0x2EC5"
    },
    "11964": {
      "op": "JUMPI"
    },
    "11965": {
      "op": "DUP3"
    },
    "11966": {
      "op": "MLOAD"
    },
    "11967": {
      "jump": "i",
      "op": "DUP1"
    },
    "11968": {
      "op": "DUP5"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11971": {
      "op": "ADD"
    },
    "11972": {
      "op": "REVERT"
    },
    "11973": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "11974": {
      "op": "DUP2"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11977": {
      "op": "MLOAD"
    },
    "11978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11984": {
      "op": "SHL"
    },
    "11985": {
      "op": "DUP2"
    },
    "11986": {
      "op": "MSTORE"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11989": {
      "op": "ADD"
    },
    "11990": {
      "op": "PUSH3",
      "value": "0x562"
    },
    "11994": {
      "op": "SWAP2"
    },
    "11995": {
      "op": "SWAP1"
    },
    "11996": {
      "op": "PUSH3",
      "value": "0x3925"
    },
    "12000": {
      "op": "JUMP"
    },
    "12001": {
      "op": "JUMPDEST"
    },
    "12002": {
      "op": "PUSH2",
      "value": "0x555"
    },
    "12005": {
      "op": "DUP1"
    },
    "12006": {
      "op": "PUSH3",
      "value": "0x4077"
    },
    "12010": {
      "op": "DUP4"
    },
    "12011": {
      "op": "CODECOPY"
    },
    "12012": {
      "op": "ADD"
    },
    "12013": {
      "op": "SWAP1"
    },
    "12014": {
      "op": "JUMP"
    },
    "12015": {
      "op": "JUMPDEST"
    },
    "12016": {
      "op": "DUP1"
    },
    "12017": {
      "op": "CALLDATALOAD"
    },
    "12018": {
      "op": "PUSH3",
      "value": "0x2EFC"
    },
    "12022": {
      "op": "DUP2"
    },
    "12023": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "12027": {
      "op": "JUMP"
    },
    "12028": {
      "op": "JUMPDEST"
    },
    "12029": {
      "op": "SWAP2"
    },
    "12030": {
      "op": "SWAP1"
    },
    "12031": {
      "op": "POP"
    },
    "12032": {
      "op": "JUMP"
    },
    "12033": {
      "op": "JUMPDEST"
    },
    "12034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12036": {
      "op": "DUP1"
    },
    "12037": {
      "op": "DUP4"
    },
    "12038": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12040": {
      "op": "DUP5"
    },
    "12041": {
      "op": "ADD"
    },
    "12042": {
      "op": "SLT"
    },
    "12043": {
      "op": "PUSH3",
      "value": "0x2F14"
    },
    "12047": {
      "op": "JUMPI"
    },
    "12048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12050": {
      "op": "DUP1"
    },
    "12051": {
      "op": "REVERT"
    },
    "12052": {
      "op": "JUMPDEST"
    },
    "12053": {
      "op": "POP"
    },
    "12054": {
      "op": "DUP2"
    },
    "12055": {
      "op": "CALLDATALOAD"
    },
    "12056": {
      "jump": "o",
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12065": {
      "op": "DUP2"
    },
    "12066": {
      "op": "GT"
    },
    "12067": {
      "op": "ISZERO"
    },
    "12068": {
      "op": "PUSH3",
      "value": "0x2F2D"
    },
    "12072": {
      "op": "JUMPI"
    },
    "12073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12075": {
      "op": "DUP1"
    },
    "12076": {
      "op": "REVERT"
    },
    "12077": {
      "op": "JUMPDEST"
    },
    "12078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12080": {
      "op": "DUP4"
    },
    "12081": {
      "op": "ADD"
    },
    "12082": {
      "op": "SWAP2"
    },
    "12083": {
      "op": "POP"
    },
    "12084": {
      "op": "DUP4"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12087": {
      "op": "DUP3"
    },
    "12088": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "12090": {
      "op": "SHL"
    },
    "12091": {
      "op": "DUP6"
    },
    "12092": {
      "op": "ADD"
    },
    "12093": {
      "op": "ADD"
    },
    "12094": {
      "op": "GT"
    },
    "12095": {
      "op": "ISZERO"
    },
    "12096": {
      "op": "PUSH3",
      "value": "0x2F49"
    },
    "12100": {
      "op": "JUMPI"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12103": {
      "op": "DUP1"
    },
    "12104": {
      "op": "REVERT"
    },
    "12105": {
      "op": "JUMPDEST"
    },
    "12106": {
      "op": "SWAP3"
    },
    "12107": {
      "op": "POP"
    },
    "12108": {
      "op": "SWAP3"
    },
    "12109": {
      "op": "SWAP1"
    },
    "12110": {
      "op": "POP"
    },
    "12111": {
      "op": "JUMP"
    },
    "12112": {
      "op": "JUMPDEST"
    },
    "12113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12115": {
      "op": "DUP1"
    },
    "12116": {
      "op": "DUP4"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12119": {
      "op": "DUP5"
    },
    "12120": {
      "op": "ADD"
    },
    "12121": {
      "op": "SLT"
    },
    "12122": {
      "op": "PUSH3",
      "value": "0x2F63"
    },
    "12126": {
      "op": "JUMPI"
    },
    "12127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12129": {
      "op": "DUP1"
    },
    "12130": {
      "op": "REVERT"
    },
    "12131": {
      "op": "JUMPDEST"
    },
    "12132": {
      "op": "POP"
    },
    "12133": {
      "op": "DUP2"
    },
    "12134": {
      "op": "CALLDATALOAD"
    },
    "12135": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12144": {
      "op": "DUP2"
    },
    "12145": {
      "op": "GT"
    },
    "12146": {
      "op": "ISZERO"
    },
    "12147": {
      "op": "PUSH3",
      "value": "0x2F7C"
    },
    "12151": {
      "op": "JUMPI"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12154": {
      "op": "DUP1"
    },
    "12155": {
      "op": "REVERT"
    },
    "12156": {
      "op": "JUMPDEST"
    },
    "12157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12159": {
      "op": "DUP4"
    },
    "12160": {
      "op": "ADD"
    },
    "12161": {
      "op": "SWAP2"
    },
    "12162": {
      "op": "POP"
    },
    "12163": {
      "op": "DUP4"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12166": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12168": {
      "op": "DUP4"
    },
    "12169": {
      "op": "MUL"
    },
    "12170": {
      "op": "DUP6"
    },
    "12171": {
      "op": "ADD"
    },
    "12172": {
      "op": "ADD"
    },
    "12173": {
      "op": "GT"
    },
    "12174": {
      "op": "ISZERO"
    },
    "12175": {
      "op": "PUSH3",
      "value": "0x2F49"
    },
    "12179": {
      "op": "JUMPI"
    },
    "12180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12182": {
      "op": "DUP1"
    },
    "12183": {
      "op": "REVERT"
    },
    "12184": {
      "op": "JUMPDEST"
    },
    "12185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12187": {
      "op": "DUP1"
    },
    "12188": {
      "op": "DUP4"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12191": {
      "op": "DUP5"
    },
    "12192": {
      "op": "ADD"
    },
    "12193": {
      "op": "SLT"
    },
    "12194": {
      "op": "PUSH3",
      "value": "0x2FAB"
    },
    "12198": {
      "op": "JUMPI"
    },
    "12199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12201": {
      "op": "DUP1"
    },
    "12202": {
      "op": "REVERT"
    },
    "12203": {
      "op": "JUMPDEST"
    },
    "12204": {
      "op": "POP"
    },
    "12205": {
      "op": "DUP2"
    },
    "12206": {
      "op": "CALLDATALOAD"
    },
    "12207": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12216": {
      "op": "DUP2"
    },
    "12217": {
      "op": "GT"
    },
    "12218": {
      "op": "ISZERO"
    },
    "12219": {
      "op": "PUSH3",
      "value": "0x2FC4"
    },
    "12223": {
      "op": "JUMPI"
    },
    "12224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12226": {
      "op": "DUP1"
    },
    "12227": {
      "op": "REVERT"
    },
    "12228": {
      "op": "JUMPDEST"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12231": {
      "op": "DUP4"
    },
    "12232": {
      "op": "ADD"
    },
    "12233": {
      "op": "SWAP2"
    },
    "12234": {
      "op": "POP"
    },
    "12235": {
      "op": "DUP4"
    },
    "12236": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x20"
    },
    "12238": {
      "op": "DUP3"
    },
    "12239": {
      "op": "DUP6"
    },
    "12240": {
      "op": "ADD"
    },
    "12241": {
      "op": "ADD"
    },
    "12242": {
      "op": "GT"
    },
    "12243": {
      "op": "ISZERO"
    },
    "12244": {
      "op": "PUSH3",
      "value": "0x2F49"
    },
    "12248": {
      "op": "JUMPI"
    },
    "12249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12251": {
      "op": "DUP1"
    },
    "12252": {
      "op": "REVERT"
    },
    "12253": {
      "op": "JUMPDEST"
    },
    "12254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12256": {
      "op": "DUP3"
    },
    "12257": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12259": {
      "op": "DUP4"
    },
    "12260": {
      "op": "ADD"
    },
    "12261": {
      "op": "SLT"
    },
    "12262": {
      "op": "PUSH3",
      "value": "0x2FEF"
    },
    "12266": {
      "op": "JUMPI"
    },
    "12267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12269": {
      "op": "DUP1"
    },
    "12270": {
      "op": "REVERT"
    },
    "12271": {
      "op": "JUMPDEST"
    },
    "12272": {
      "op": "DUP2"
    },
    "12273": {
      "op": "CALLDATALOAD"
    },
    "12274": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12283": {
      "op": "DUP1"
    },
    "12284": {
      "op": "DUP3"
    },
    "12285": {
      "jump": "i",
      "op": "GT"
    },
    "12286": {
      "op": "ISZERO"
    },
    "12287": {
      "op": "PUSH3",
      "value": "0x300D"
    },
    "12291": {
      "op": "JUMPI"
    },
    "12292": {
      "op": "PUSH3",
      "value": "0x300D"
    },
    "12296": {
      "op": "PUSH3",
      "value": "0x4047"
    },
    "12300": {
      "op": "JUMP"
    },
    "12301": {
      "op": "JUMPDEST"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12304": {
      "op": "MLOAD"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12307": {
      "op": "DUP4"
    },
    "12308": {
      "op": "ADD"
    },
    "12309": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12311": {
      "op": "NOT"
    },
    "12312": {
      "op": "SWAP1"
    },
    "12313": {
      "op": "DUP2"
    },
    "12314": {
      "op": "AND"
    },
    "12315": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12317": {
      "op": "ADD"
    },
    "12318": {
      "op": "AND"
    },
    "12319": {
      "op": "DUP2"
    },
    "12320": {
      "op": "ADD"
    },
    "12321": {
      "op": "SWAP1"
    },
    "12322": {
      "op": "DUP3"
    },
    "12323": {
      "op": "DUP3"
    },
    "12324": {
      "op": "GT"
    },
    "12325": {
      "op": "DUP2"
    },
    "12326": {
      "op": "DUP4"
    },
    "12327": {
      "op": "LT"
    },
    "12328": {
      "op": "OR"
    },
    "12329": {
      "op": "ISZERO"
    },
    "12330": {
      "op": "PUSH3",
      "value": "0x3038"
    },
    "12334": {
      "op": "JUMPI"
    },
    "12335": {
      "op": "PUSH3",
      "value": "0x3038"
    },
    "12339": {
      "op": "PUSH3",
      "value": "0x4047"
    },
    "12343": {
      "op": "JUMP"
    },
    "12344": {
      "op": "JUMPDEST"
    },
    "12345": {
      "op": "DUP2"
    },
    "12346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12348": {
      "op": "MSTORE"
    },
    "12349": {
      "op": "DUP4"
    },
    "12350": {
      "op": "DUP2"
    },
    "12351": {
      "op": "MSTORE"
    },
    "12352": {
      "op": "DUP7"
    },
    "12353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12355": {
      "op": "DUP6"
    },
    "12356": {
      "op": "DUP9"
    },
    "12357": {
      "jump": "o",
      "op": "ADD"
    },
    "12358": {
      "op": "ADD"
    },
    "12359": {
      "op": "GT"
    },
    "12360": {
      "op": "ISZERO"
    },
    "12361": {
      "op": "PUSH3",
      "value": "0x3052"
    },
    "12365": {
      "op": "JUMPI"
    },
    "12366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12368": {
      "op": "DUP1"
    },
    "12369": {
      "op": "REVERT"
    },
    "12370": {
      "op": "JUMPDEST"
    },
    "12371": {
      "op": "DUP4"
    },
    "12372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12374": {
      "op": "DUP8"
    },
    "12375": {
      "op": "ADD"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12378": {
      "op": "DUP4"
    },
    "12379": {
      "op": "ADD"
    },
    "12380": {
      "op": "CALLDATACOPY"
    },
    "12381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12383": {
      "jump": "o",
      "op": "PUSH1",
      "value": "0x20"
    },
    "12385": {
      "op": "DUP6"
    },
    "12386": {
      "op": "DUP4"
    },
    "12387": {
      "op": "ADD"
    },
    "12388": {
      "op": "ADD"
    },
    "12389": {
      "op": "MSTORE"
    },
    "12390": {
      "op": "DUP1"
    },
    "12391": {
      "op": "SWAP5"
    },
    "12392": {
      "op": "POP"
    },
    "12393": {
      "op": "POP"
    },
    "12394": {
      "op": "POP"
    },
    "12395": {
      "op": "POP"
    },
    "12396": {
      "op": "POP"
    },
    "12397": {
      "op": "SWAP3"
    },
    "12398": {
      "op": "SWAP2"
    },
    "12399": {
      "op": "POP"
    },
    "12400": {
      "op": "POP"
    },
    "12401": {
      "op": "JUMP"
    },
    "12402": {
      "op": "JUMPDEST"
    },
    "12403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12405": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12407": {
      "op": "DUP3"
    },
    "12408": {
      "op": "DUP5"
    },
    "12409": {
      "op": "SUB"
    },
    "12410": {
      "op": "SLT"
    },
    "12411": {
      "op": "ISZERO"
    },
    "12412": {
      "op": "PUSH3",
      "value": "0x3085"
    },
    "12416": {
      "op": "JUMPI"
    },
    "12417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12419": {
      "op": "DUP1"
    },
    "12420": {
      "op": "REVERT"
    },
    "12421": {
      "op": "JUMPDEST"
    },
    "12422": {
      "op": "POP"
    },
    "12423": {
      "op": "SWAP2"
    },
    "12424": {
      "op": "SWAP1"
    },
    "12425": {
      "op": "POP"
    },
    "12426": {
      "op": "JUMP"
    },
    "12427": {
      "op": "JUMPDEST"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12432": {
      "op": "DUP3"
    },
    "12433": {
      "op": "DUP5"
    },
    "12434": {
      "op": "SUB"
    },
    "12435": {
      "op": "SLT"
    },
    "12436": {
      "op": "ISZERO"
    },
    "12437": {
      "op": "PUSH3",
      "value": "0x3085"
    },
    "12441": {
      "jump": "i",
      "op": "JUMPI"
    },
    "12442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12444": {
      "op": "DUP1"
    },
    "12445": {
      "op": "REVERT"
    },
    "12446": {
      "op": "JUMPDEST"
    },
    "12447": {
      "op": "DUP1"
    },
    "12448": {
      "op": "CALLDATALOAD"
    },
    "12449": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "12454": {
      "op": "DUP2"
    },
    "12455": {
      "op": "AND"
    },
    "12456": {
      "op": "DUP2"
    },
    "12457": {
      "op": "EQ"
    },
    "12458": {
      "op": "PUSH3",
      "value": "0x2EFC"
    },
    "12462": {
      "op": "JUMPI"
    },
    "12463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12465": {
      "op": "DUP1"
    },
    "12466": {
      "op": "REVERT"
    },
    "12467": {
      "op": "JUMPDEST"
    },
    "12468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12472": {
      "jump": "i",
      "op": "DUP3"
    },
    "12473": {
      "op": "DUP5"
    },
    "12474": {
      "op": "SUB"
    },
    "12475": {
      "op": "SLT"
    },
    "12476": {
      "op": "ISZERO"
    },
    "12477": {
      "op": "PUSH3",
      "value": "0x30C6"
    },
    "12481": {
      "op": "JUMPI"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12484": {
      "op": "DUP1"
    },
    "12485": {
      "op": "REVERT"
    },
    "12486": {
      "op": "JUMPDEST"
    },
    "12487": {
      "op": "DUP2"
    },
    "12488": {
      "op": "CALLDATALOAD"
    },
    "12489": {
      "op": "PUSH3",
      "value": "0x2D53"
    },
    "12493": {
      "op": "DUP2"
    },
    "12494": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "12498": {
      "op": "JUMP"
    },
    "12499": {
      "op": "JUMPDEST"
    },
    "12500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12504": {
      "op": "DUP3"
    },
    "12505": {
      "op": "DUP5"
    },
    "12506": {
      "op": "SUB"
    },
    "12507": {
      "op": "SLT"
    },
    "12508": {
      "op": "ISZERO"
    },
    "12509": {
      "op": "PUSH3",
      "value": "0x30E6"
    },
    "12513": {
      "op": "JUMPI"
    },
    "12514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12516": {
      "op": "DUP1"
    },
    "12517": {
      "op": "REVERT"
    },
    "12518": {
      "op": "JUMPDEST"
    },
    "12519": {
      "op": "DUP2"
    },
    "12520": {
      "op": "MLOAD"
    },
    "12521": {
      "op": "PUSH3",
      "value": "0x2D53"
    },
    "12525": {
      "op": "DUP2"
    },
    "12526": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "12530": {
      "op": "JUMP"
    },
    "12531": {
      "op": "JUMPDEST"
    },
    "12532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12534": {
      "op": "DUP1"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12537": {
      "op": "DUP4"
    },
    "12538": {
      "op": "DUP6"
    },
    "12539": {
      "op": "SUB"
    },
    "12540": {
      "op": "SLT"
    },
    "12541": {
      "op": "ISZERO"
    },
    "12542": {
      "op": "PUSH3",
      "value": "0x3107"
    },
    "12546": {
      "op": "JUMPI"
    },
    "12547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12549": {
      "op": "DUP1"
    },
    "12550": {
      "op": "REVERT"
    },
    "12551": {
      "op": "JUMPDEST"
    },
    "12552": {
      "op": "DUP3"
    },
    "12553": {
      "op": "CALLDATALOAD"
    },
    "12554": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12563": {
      "op": "DUP1"
    },
    "12564": {
      "op": "DUP3"
    },
    "12565": {
      "op": "GT"
    },
    "12566": {
      "op": "ISZERO"
    },
    "12567": {
      "op": "PUSH3",
      "value": "0x3120"
    },
    "12571": {
      "op": "JUMPI"
    },
    "12572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12574": {
      "op": "DUP1"
    },
    "12575": {
      "op": "REVERT"
    },
    "12576": {
      "op": "JUMPDEST"
    },
    "12577": {
      "op": "DUP2"
    },
    "12578": {
      "op": "DUP6"
    },
    "12579": {
      "op": "ADD"
    },
    "12580": {
      "op": "SWAP2"
    },
    "12581": {
      "op": "POP"
    },
    "12582": {
      "op": "DUP6"
    },
    "12583": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12585": {
      "op": "DUP4"
    },
    "12586": {
      "op": "ADD"
    },
    "12587": {
      "op": "SLT"
    },
    "12588": {
      "op": "PUSH3",
      "value": "0x3135"
    },
    "12592": {
      "op": "JUMPI"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12595": {
      "op": "DUP1"
    },
    "12596": {
      "op": "REVERT"
    },
    "12597": {
      "op": "JUMPDEST"
    },
    "12598": {
      "op": "DUP2"
    },
    "12599": {
      "op": "CALLDATALOAD"
    },
    "12600": {
      "op": "DUP2"
    },
    "12601": {
      "op": "DUP2"
    },
    "12602": {
      "op": "GT"
    },
    "12603": {
      "op": "ISZERO"
    },
    "12604": {
      "op": "PUSH3",
      "value": "0x3145"
    },
    "12608": {
      "jump": "o",
      "op": "JUMPI"
    },
    "12609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12611": {
      "op": "DUP1"
    },
    "12612": {
      "op": "REVERT"
    },
    "12613": {
      "op": "JUMPDEST"
    },
    "12614": {
      "op": "DUP7"
    },
    "12615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12617": {
      "op": "DUP3"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12620": {
      "op": "SHL"
    },
    "12621": {
      "op": "DUP6"
    },
    "12622": {
      "op": "ADD"
    },
    "12623": {
      "op": "ADD"
    },
    "12624": {
      "op": "GT"
    },
    "12625": {
      "op": "ISZERO"
    },
    "12626": {
      "op": "PUSH3",
      "value": "0x315B"
    },
    "12630": {
      "op": "JUMPI"
    },
    "12631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12633": {
      "op": "DUP1"
    },
    "12634": {
      "op": "REVERT"
    },
    "12635": {
      "op": "JUMPDEST"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12638": {
      "op": "SWAP3"
    },
    "12639": {
      "op": "SWAP1"
    },
    "12640": {
      "op": "SWAP3"
    },
    "12641": {
      "op": "ADD"
    },
    "12642": {
      "op": "SWAP7"
    },
    "12643": {
      "op": "SWAP2"
    },
    "12644": {
      "op": "SWAP6"
    },
    "12645": {
      "op": "POP"
    },
    "12646": {
      "op": "SWAP1"
    },
    "12647": {
      "op": "SWAP4"
    },
    "12648": {
      "op": "POP"
    },
    "12649": {
      "op": "POP"
    },
    "12650": {
      "op": "POP"
    },
    "12651": {
      "op": "POP"
    },
    "12652": {
      "op": "JUMP"
    },
    "12653": {
      "op": "JUMPDEST"
    },
    "12654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12658": {
      "op": "DUP3"
    },
    "12659": {
      "op": "DUP5"
    },
    "12660": {
      "op": "SUB"
    },
    "12661": {
      "op": "SLT"
    },
    "12662": {
      "op": "ISZERO"
    },
    "12663": {
      "op": "PUSH3",
      "value": "0x3180"
    },
    "12667": {
      "op": "JUMPI"
    },
    "12668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12670": {
      "op": "DUP1"
    },
    "12671": {
      "op": "REVERT"
    },
    "12672": {
      "op": "JUMPDEST"
    },
    "12673": {
      "jump": "i",
      "op": "DUP2"
    },
    "12674": {
      "op": "MLOAD"
    },
    "12675": {
      "op": "DUP1"
    },
    "12676": {
      "op": "ISZERO"
    },
    "12677": {
      "op": "ISZERO"
    },
    "12678": {
      "op": "DUP2"
    },
    "12679": {
      "op": "EQ"
    },
    "12680": {
      "op": "PUSH3",
      "value": "0x2D53"
    },
    "12684": {
      "op": "JUMPI"
    },
    "12685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12687": {
      "op": "DUP1"
    },
    "12688": {
      "jump": "i",
      "op": "REVERT"
    },
    "12689": {
      "op": "JUMPDEST"
    },
    "12690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12692": {
      "op": "DUP1"
    },
    "12693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12695": {
      "op": "DUP1"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12698": {
      "op": "DUP1"
    },
    "12699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12701": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0x140"
    },
    "12704": {
      "op": "DUP9"
    },
    "12705": {
      "op": "DUP11"
    },
    "12706": {
      "op": "SUB"
    },
    "12707": {
      "op": "SLT"
    },
    "12708": {
      "op": "ISZERO"
    },
    "12709": {
      "op": "PUSH3",
      "value": "0x31AE"
    },
    "12713": {
      "op": "JUMPI"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12716": {
      "op": "DUP1"
    },
    "12717": {
      "op": "REVERT"
    },
    "12718": {
      "op": "JUMPDEST"
    },
    "12719": {
      "op": "PUSH3",
      "value": "0x31BA"
    },
    "12723": {
      "op": "DUP10"
    },
    "12724": {
      "op": "DUP10"
    },
    "12725": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "12729": {
      "op": "JUMP"
    },
    "12730": {
      "op": "JUMPDEST"
    },
    "12731": {
      "op": "SWAP7"
    },
    "12732": {
      "op": "POP"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12735": {
      "op": "DUP9"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "CALLDATALOAD"
    },
    "12738": {
      "op": "PUSH3",
      "value": "0x31CC"
    },
    "12742": {
      "jump": "i",
      "op": "DUP2"
    },
    "12743": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "12747": {
      "op": "JUMP"
    },
    "12748": {
      "op": "JUMPDEST"
    },
    "12749": {
      "op": "SWAP6"
    },
    "12750": {
      "op": "POP"
    },
    "12751": {
      "op": "PUSH3",
      "value": "0x31DC"
    },
    "12755": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12757": {
      "op": "DUP10"
    },
    "12758": {
      "op": "ADD"
    },
    "12759": {
      "op": "PUSH3",
      "value": "0x309E"
    },
    "12763": {
      "op": "JUMP"
    },
    "12764": {
      "op": "JUMPDEST"
    },
    "12765": {
      "op": "SWAP5"
    },
    "12766": {
      "op": "POP"
    },
    "12767": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12770": {
      "op": "DUP9"
    },
    "12771": {
      "op": "ADD"
    },
    "12772": {
      "op": "CALLDATALOAD"
    },
    "12773": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12782": {
      "op": "DUP1"
    },
    "12783": {
      "op": "DUP3"
    },
    "12784": {
      "op": "GT"
    },
    "12785": {
      "op": "ISZERO"
    },
    "12786": {
      "op": "PUSH3",
      "value": "0x31FB"
    },
    "12790": {
      "op": "JUMPI"
    },
    "12791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12793": {
      "op": "DUP1"
    },
    "12794": {
      "op": "REVERT"
    },
    "12795": {
      "op": "JUMPDEST"
    },
    "12796": {
      "jump": "i",
      "op": "PUSH3",
      "value": "0x3209"
    },
    "12800": {
      "op": "DUP12"
    },
    "12801": {
      "op": "DUP4"
    },
    "12802": {
      "op": "DUP13"
    },
    "12803": {
      "op": "ADD"
    },
    "12804": {
      "op": "PUSH3",
      "value": "0x2F98"
    },
    "12808": {
      "op": "JUMP"
    },
    "12809": {
      "op": "JUMPDEST"
    },
    "12810": {
      "op": "SWAP1"
    },
    "12811": {
      "op": "SWAP7"
    },
    "12812": {
      "op": "POP"
    },
    "12813": {
      "op": "SWAP5"
    },
    "12814": {
      "op": "POP"
    },
    "12815": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12818": {
      "op": "DUP11"
    },
    "12819": {
      "op": "ADD"
    },
    "12820": {
      "op": "CALLDATALOAD"
    },
    "12821": {
      "op": "SWAP2"
    },
    "12822": {
      "op": "POP"
    },
    "12823": {
      "jump": "o",
      "op": "DUP1"
    },
    "12824": {
      "op": "DUP3"
    },
    "12825": {
      "op": "GT"
    },
    "12826": {
      "op": "ISZERO"
    },
    "12827": {
      "op": "PUSH3",
      "value": "0x3224"
    },
    "12831": {
      "op": "JUMPI"
    },
    "12832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12834": {
      "op": "DUP1"
    },
    "12835": {
      "op": "REVERT"
    },
    "12836": {
      "op": "JUMPDEST"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "PUSH3",
      "value": "0x3233"
    },
    "12842": {
      "op": "DUP11"
    },
    "12843": {
      "op": "DUP3"
    },
    "12844": {
      "op": "DUP12"
    },
    "12845": {
      "op": "ADD"
    },
    "12846": {
      "op": "PUSH3",
      "value": "0x2F98"
    },
    "12850": {
      "op": "JUMP"
    },
    "12851": {
      "op": "JUMPDEST"
    },
    "12852": {
      "op": "SWAP9"
    },
    "12853": {
      "op": "SWAP12"
    },
    "12854": {
      "jump": "i",
      "op": "SWAP8"
    },
    "12855": {
      "op": "SWAP11"
    },
    "12856": {
      "op": "POP"
    },
    "12857": {
      "op": "SWAP6"
    },
    "12858": {
      "op": "SWAP9"
    },
    "12859": {
      "op": "POP"
    },
    "12860": {
      "op": "SWAP4"
    },
    "12861": {
      "op": "SWAP7"
    },
    "12862": {
      "op": "SWAP3"
    },
    "12863": {
      "op": "SWAP6"
    },
    "12864": {
      "op": "SWAP3"
    },
    "12865": {
      "op": "SWAP4"
    },
    "12866": {
      "op": "POP"
    },
    "12867": {
      "op": "POP"
    },
    "12868": {
      "op": "POP"
    },
    "12869": {
      "op": "JUMP"
    },
    "12870": {
      "op": "JUMPDEST"
    },
    "12871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12873": {
      "op": "DUP1"
    },
    "12874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12878": {
      "op": "DUP5"
    },
    "12879": {
      "op": "DUP7"
    },
    "12880": {
      "op": "SUB"
    },
    "12881": {
      "jump": "i",
      "op": "SLT"
    },
    "12882": {
      "op": "ISZERO"
    },
    "12883": {
      "op": "PUSH3",
      "value": "0x325C"
    },
    "12887": {
      "op": "JUMPI"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12890": {
      "op": "DUP1"
    },
    "12891": {
      "op": "REVERT"
    },
    "12892": {
      "op": "JUMPDEST"
    },
    "12893": {
      "op": "PUSH3",
      "value": "0x3268"
    },
    "12897": {
      "op": "DUP6"
    },
    "12898": {
      "op": "DUP6"
    },
    "12899": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "12903": {
      "op": "JUMP"
    },
    "12904": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "12905": {
      "op": "SWAP3"
    },
    "12906": {
      "op": "POP"
    },
    "12907": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12909": {
      "op": "DUP5"
    },
    "12910": {
      "op": "ADD"
    },
    "12911": {
      "op": "CALLDATALOAD"
    },
    "12912": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12921": {
      "op": "DUP2"
    },
    "12922": {
      "op": "GT"
    },
    "12923": {
      "op": "ISZERO"
    },
    "12924": {
      "op": "PUSH3",
      "value": "0x3285"
    },
    "12928": {
      "op": "JUMPI"
    },
    "12929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12931": {
      "op": "DUP1"
    },
    "12932": {
      "op": "REVERT"
    },
    "12933": {
      "op": "JUMPDEST"
    },
    "12934": {
      "op": "PUSH3",
      "value": "0x3293"
    },
    "12938": {
      "op": "DUP7"
    },
    "12939": {
      "op": "DUP3"
    },
    "12940": {
      "op": "DUP8"
    },
    "12941": {
      "op": "ADD"
    },
    "12942": {
      "op": "PUSH3",
      "value": "0x2F01"
    },
    "12946": {
      "op": "JUMP"
    },
    "12947": {
      "op": "JUMPDEST"
    },
    "12948": {
      "jump": "i",
      "op": "SWAP5"
    },
    "12949": {
      "op": "SWAP8"
    },
    "12950": {
      "op": "SWAP1"
    },
    "12951": {
      "op": "SWAP7"
    },
    "12952": {
      "op": "POP"
    },
    "12953": {
      "op": "SWAP4"
    },
    "12954": {
      "op": "SWAP5"
    },
    "12955": {
      "op": "POP"
    },
    "12956": {
      "op": "POP"
    },
    "12957": {
      "op": "POP"
    },
    "12958": {
      "op": "POP"
    },
    "12959": {
      "op": "JUMP"
    },
    "12960": {
      "op": "JUMPDEST"
    },
    "12961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12963": {
      "op": "DUP1"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12966": {
      "op": "DUP1"
    },
    "12967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12969": {
      "op": "DUP1"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12972": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12975": {
      "op": "DUP9"
    },
    "12976": {
      "op": "DUP11"
    },
    "12977": {
      "op": "SUB"
    },
    "12978": {
      "op": "SLT"
    },
    "12979": {
      "jump": "i",
      "op": "ISZERO"
    },
    "12980": {
      "op": "PUSH3",
      "value": "0x32BD"
    },
    "12984": {
      "op": "JUMPI"
    },
    "12985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12987": {
      "op": "DUP1"
    },
    "12988": {
      "op": "REVERT"
    },
    "12989": {
      "op": "JUMPDEST"
    },
    "12990": {
      "op": "PUSH3",
      "value": "0x32C9"
    },
    "12994": {
      "op": "DUP10"
    },
    "12995": {
      "op": "DUP10"
    },
    "12996": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "13000": {
      "op": "JUMP"
    },
    "13001": {
      "op": "JUMPDEST"
    },
    "13002": {
      "op": "SWAP7"
    },
    "13003": {
      "op": "POP"
    },
    "13004": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13006": {
      "op": "DUP9"
    },
    "13007": {
      "op": "ADD"
    },
    "13008": {
      "op": "CALLDATALOAD"
    },
    "13009": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13018": {
      "op": "DUP1"
    },
    "13019": {
      "op": "DUP3"
    },
    "13020": {
      "op": "GT"
    },
    "13021": {
      "op": "ISZERO"
    },
    "13022": {
      "op": "PUSH3",
      "value": "0x32E7"
    },
    "13026": {
      "op": "JUMPI"
    },
    "13027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13029": {
      "op": "DUP1"
    },
    "13030": {
      "op": "REVERT"
    },
    "13031": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "13032": {
      "op": "PUSH3",
      "value": "0x32F5"
    },
    "13036": {
      "op": "DUP12"
    },
    "13037": {
      "op": "DUP4"
    },
    "13038": {
      "op": "DUP13"
    },
    "13039": {
      "op": "ADD"
    },
    "13040": {
      "op": "PUSH3",
      "value": "0x2F01"
    },
    "13044": {
      "op": "JUMP"
    },
    "13045": {
      "op": "JUMPDEST"
    },
    "13046": {
      "op": "SWAP1"
    },
    "13047": {
      "op": "SWAP9"
    },
    "13048": {
      "op": "POP"
    },
    "13049": {
      "op": "SWAP7"
    },
    "13050": {
      "op": "POP"
    },
    "13051": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13053": {
      "op": "DUP11"
    },
    "13054": {
      "op": "ADD"
    },
    "13055": {
      "op": "CALLDATALOAD"
    },
    "13056": {
      "op": "SWAP2"
    },
    "13057": {
      "op": "POP"
    },
    "13058": {
      "op": "DUP1"
    },
    "13059": {
      "op": "DUP3"
    },
    "13060": {
      "op": "GT"
    },
    "13061": {
      "op": "ISZERO"
    },
    "13062": {
      "op": "PUSH3",
      "value": "0x330F"
    },
    "13066": {
      "op": "JUMPI"
    },
    "13067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13069": {
      "op": "DUP1"
    },
    "13070": {
      "op": "REVERT"
    },
    "13071": {
      "op": "JUMPDEST"
    },
    "13072": {
      "jump": "i",
      "op": "PUSH3",
      "value": "0x331D"
    },
    "13076": {
      "op": "DUP12"
    },
    "13077": {
      "op": "DUP4"
    },
    "13078": {
      "op": "DUP13"
    },
    "13079": {
      "op": "ADD"
    },
    "13080": {
      "op": "PUSH3",
      "value": "0x2F01"
    },
    "13084": {
      "op": "JUMP"
    },
    "13085": {
      "op": "JUMPDEST"
    },
    "13086": {
      "op": "SWAP1"
    },
    "13087": {
      "op": "SWAP7"
    },
    "13088": {
      "op": "POP"
    },
    "13089": {
      "op": "SWAP5"
    },
    "13090": {
      "op": "POP"
    },
    "13091": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13094": {
      "op": "DUP11"
    },
    "13095": {
      "op": "ADD"
    },
    "13096": {
      "op": "CALLDATALOAD"
    },
    "13097": {
      "op": "SWAP2"
    },
    "13098": {
      "op": "POP"
    },
    "13099": {
      "op": "DUP1"
    },
    "13100": {
      "op": "DUP3"
    },
    "13101": {
      "jump": "i",
      "op": "GT"
    },
    "13102": {
      "op": "ISZERO"
    },
    "13103": {
      "op": "PUSH3",
      "value": "0x3338"
    },
    "13107": {
      "op": "JUMPI"
    },
    "13108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13110": {
      "op": "DUP1"
    },
    "13111": {
      "op": "REVERT"
    },
    "13112": {
      "op": "JUMPDEST"
    },
    "13113": {
      "op": "POP"
    },
    "13114": {
      "op": "PUSH3",
      "value": "0x3233"
    },
    "13118": {
      "op": "DUP11"
    },
    "13119": {
      "op": "DUP3"
    },
    "13120": {
      "op": "DUP12"
    },
    "13121": {
      "op": "ADD"
    },
    "13122": {
      "op": "PUSH3",
      "value": "0x2F50"
    },
    "13126": {
      "op": "JUMP"
    },
    "13127": {
      "op": "JUMPDEST"
    },
    "13128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13130": {
      "op": "DUP1"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13133": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13135": {
      "op": "DUP5"
    },
    "13136": {
      "op": "DUP7"
    },
    "13137": {
      "op": "SUB"
    },
    "13138": {
      "jump": "i",
      "op": "SLT"
    },
    "13139": {
      "op": "ISZERO"
    },
    "13140": {
      "op": "PUSH3",
      "value": "0x335D"
    },
    "13144": {
      "op": "JUMPI"
    },
    "13145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13147": {
      "op": "DUP1"
    },
    "13148": {
      "op": "REVERT"
    },
    "13149": {
      "op": "JUMPDEST"
    },
    "13150": {
      "op": "PUSH3",
      "value": "0x3369"
    },
    "13154": {
      "op": "DUP6"
    },
    "13155": {
      "op": "DUP6"
    },
    "13156": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "13160": {
      "op": "JUMP"
    },
    "13161": {
      "op": "JUMPDEST"
    },
    "13162": {
      "op": "SWAP3"
    },
    "13163": {
      "op": "POP"
    },
    "13164": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13166": {
      "op": "DUP5"
    },
    "13167": {
      "op": "ADD"
    },
    "13168": {
      "op": "CALLDATALOAD"
    },
    "13169": {
      "jump": "i",
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13178": {
      "op": "DUP2"
    },
    "13179": {
      "op": "GT"
    },
    "13180": {
      "op": "ISZERO"
    },
    "13181": {
      "op": "PUSH3",
      "value": "0x3386"
    },
    "13185": {
      "op": "JUMPI"
    },
    "13186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13188": {
      "op": "DUP1"
    },
    "13189": {
      "op": "REVERT"
    },
    "13190": {
      "op": "JUMPDEST"
    },
    "13191": {
      "op": "PUSH3",
      "value": "0x3293"
    },
    "13195": {
      "jump": "i",
      "op": "DUP7"
    },
    "13196": {
      "op": "DUP3"
    },
    "13197": {
      "op": "DUP8"
    },
    "13198": {
      "op": "ADD"
    },
    "13199": {
      "op": "PUSH3",
      "value": "0x2F50"
    },
    "13203": {
      "op": "JUMP"
    },
    "13204": {
      "op": "JUMPDEST"
    },
    "13205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13207": {
      "op": "DUP1"
    },
    "13208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13210": {
      "op": "DUP4"
    },
    "13211": {
      "jump": "o",
      "op": "DUP6"
    },
    "13212": {
      "op": "SUB"
    },
    "13213": {
      "op": "SLT"
    },
    "13214": {
      "op": "ISZERO"
    },
    "13215": {
      "op": "PUSH3",
      "value": "0x33A8"
    },
    "13219": {
      "op": "JUMPI"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13222": {
      "op": "DUP1"
    },
    "13223": {
      "op": "REVERT"
    },
    "13224": {
      "op": "JUMPDEST"
    },
    "13225": {
      "op": "PUSH3",
      "value": "0x33B4"
    },
    "13229": {
      "op": "DUP5"
    },
    "13230": {
      "op": "DUP5"
    },
    "13231": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "13235": {
      "op": "JUMP"
    },
    "13236": {
      "op": "JUMPDEST"
    },
    "13237": {
      "op": "SWAP2"
    },
    "13238": {
      "op": "POP"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13241": {
      "op": "DUP4"
    },
    "13242": {
      "jump": "i",
      "op": "ADD"
    },
    "13243": {
      "op": "CALLDATALOAD"
    },
    "13244": {
      "op": "PUSH3",
      "value": "0x33C6"
    },
    "13248": {
      "op": "DUP2"
    },
    "13249": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "13253": {
      "op": "JUMP"
    },
    "13254": {
      "op": "JUMPDEST"
    },
    "13255": {
      "op": "DUP1"
    },
    "13256": {
      "op": "SWAP2"
    },
    "13257": {
      "op": "POP"
    },
    "13258": {
      "jump": "i",
      "op": "POP"
    },
    "13259": {
      "op": "SWAP3"
    },
    "13260": {
      "op": "POP"
    },
    "13261": {
      "op": "SWAP3"
    },
    "13262": {
      "op": "SWAP1"
    },
    "13263": {
      "op": "POP"
    },
    "13264": {
      "op": "JUMP"
    },
    "13265": {
      "op": "JUMPDEST"
    },
    "13266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13268": {
      "jump": "o",
      "op": "DUP1"
    },
    "13269": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13272": {
      "op": "DUP4"
    },
    "13273": {
      "op": "DUP6"
    },
    "13274": {
      "op": "SUB"
    },
    "13275": {
      "op": "SLT"
    },
    "13276": {
      "op": "ISZERO"
    },
    "13277": {
      "op": "PUSH3",
      "value": "0x33E6"
    },
    "13281": {
      "op": "JUMPI"
    },
    "13282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13284": {
      "op": "DUP1"
    },
    "13285": {
      "op": "REVERT"
    },
    "13286": {
      "op": "JUMPDEST"
    },
    "13287": {
      "op": "PUSH3",
      "value": "0x33F2"
    },
    "13291": {
      "op": "DUP5"
    },
    "13292": {
      "op": "DUP5"
    },
    "13293": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "13297": {
      "op": "JUMP"
    },
    "13298": {
      "op": "JUMPDEST"
    },
    "13299": {
      "op": "SWAP2"
    },
    "13300": {
      "op": "POP"
    },
    "13301": {
      "op": "PUSH3",
      "value": "0x3403"
    },
    "13305": {
      "op": "DUP5"
    },
    "13306": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13308": {
      "op": "DUP6"
    },
    "13309": {
      "jump": "i",
      "op": "ADD"
    },
    "13310": {
      "op": "PUSH3",
      "value": "0x308B"
    },
    "13314": {
      "op": "JUMP"
    },
    "13315": {
      "op": "JUMPDEST"
    },
    "13316": {
      "op": "SWAP1"
    },
    "13317": {
      "op": "POP"
    },
    "13318": {
      "op": "SWAP3"
    },
    "13319": {
      "op": "POP"
    },
    "13320": {
      "op": "SWAP3"
    },
    "13321": {
      "op": "SWAP1"
    },
    "13322": {
      "jump": "i",
      "op": "POP"
    },
    "13323": {
      "op": "JUMP"
    },
    "13324": {
      "op": "JUMPDEST"
    },
    "13325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13327": {
      "op": "DUP1"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13330": {
      "op": "DUP1"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13333": {
      "op": "DUP1"
    },
    "13334": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x0"
    },
    "13336": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "13339": {
      "op": "DUP9"
    },
    "13340": {
      "op": "DUP11"
    },
    "13341": {
      "op": "SUB"
    },
    "13342": {
      "op": "SLT"
    },
    "13343": {
      "op": "ISZERO"
    },
    "13344": {
      "op": "PUSH3",
      "value": "0x3429"
    },
    "13348": {
      "op": "JUMPI"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13351": {
      "op": "DUP1"
    },
    "13352": {
      "op": "REVERT"
    },
    "13353": {
      "op": "JUMPDEST"
    },
    "13354": {
      "op": "PUSH3",
      "value": "0x3435"
    },
    "13358": {
      "op": "DUP10"
    },
    "13359": {
      "op": "DUP10"
    },
    "13360": {
      "op": "PUSH3",
      "value": "0x3072"
    },
    "13364": {
      "op": "JUMP"
    },
    "13365": {
      "op": "JUMPDEST"
    },
    "13366": {
      "op": "SWAP7"
    },
    "13367": {
      "op": "POP"
    },
    "13368": {
      "op": "PUSH3",
      "value": "0x3446"
    },
    "13372": {
      "op": "DUP10"
    },
    "13373": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13375": {
      "op": "DUP11"
    },
    "13376": {
      "jump": "i",
      "op": "ADD"
    },
    "13377": {
      "op": "PUSH3",
      "value": "0x308B"
    },
    "13381": {
      "op": "JUMP"
    },
    "13382": {
      "op": "JUMPDEST"
    },
    "13383": {
      "op": "SWAP6"
    },
    "13384": {
      "op": "POP"
    },
    "13385": {
      "op": "PUSH3",
      "value": "0x3457"
    },
    "13389": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13392": {
      "op": "DUP10"
    },
    "13393": {
      "op": "ADD"
    },
    "13394": {
      "op": "PUSH3",
      "value": "0x309E"
    },
    "13398": {
      "op": "JUMP"
    },
    "13399": {
      "op": "JUMPDEST"
    },
    "13400": {
      "op": "SWAP5"
    },
    "13401": {
      "op": "POP"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13405": {
      "op": "DUP9"
    },
    "13406": {
      "op": "ADD"
    },
    "13407": {
      "op": "CALLDATALOAD"
    },
    "13408": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13417": {
      "op": "DUP1"
    },
    "13418": {
      "op": "DUP3"
    },
    "13419": {
      "op": "GT"
    },
    "13420": {
      "op": "ISZERO"
    },
    "13421": {
      "op": "PUSH3",
      "value": "0x3476"
    },
    "13425": {
      "op": "JUMPI"
    },
    "13426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13428": {
      "op": "DUP1"
    },
    "13429": {
      "op": "REVERT"
    },
    "13430": {
      "op": "JUMPDEST"
    },
    "13431": {
      "op": "PUSH3",
      "value": "0x3484"
    },
    "13435": {
      "op": "DUP12"
    },
    "13436": {
      "op": "DUP4"
    },
    "13437": {
      "op": "DUP13"
    },
    "13438": {
      "op": "ADD"
    },
    "13439": {
      "op": "PUSH3",
      "value": "0x2F98"
    },
    "13443": {
      "op": "JUMP"
    },
    "13444": {
      "op": "JUMPDEST"
    },
    "13445": {
      "op": "SWAP1"
    },
    "13446": {
      "op": "SWAP7"
    },
    "13447": {
      "op": "POP"
    },
    "13448": {
      "jump": "o",
      "op": "SWAP5"
    },
    "13449": {
      "op": "POP"
    },
    "13450": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "13453": {
      "op": "DUP11"
    },
    "13454": {
      "op": "ADD"
    },
    "13455": {
      "op": "CALLDATALOAD"
    },
    "13456": {
      "op": "SWAP2"
    },
    "13457": {
      "op": "POP"
    },
    "13458": {
      "op": "DUP1"
    },
    "13459": {
      "op": "DUP3"
    },
    "13460": {
      "op": "GT"
    },
    "13461": {
      "op": "ISZERO"
    },
    "13462": {
      "op": "PUSH3",
      "value": "0x3224"
    },
    "13466": {
      "op": "JUMPI"
    },
    "13467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13469": {
      "op": "DUP1"
    },
    "13470": {
      "op": "REVERT"
    },
    "13471": {
      "op": "JUMPDEST"
    },
    "13472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13476": {
      "jump": "i",
      "op": "DUP3"
    },
    "13477": {
      "op": "DUP5"
    },
    "13478": {
      "op": "SUB"
    },
    "13479": {
      "op": "SLT"
    },
    "13480": {
      "op": "ISZERO"
    },
    "13481": {
      "op": "PUSH3",
      "value": "0x34B2"
    },
    "13485": {
      "op": "JUMPI"
    },
    "13486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13488": {
      "op": "DUP1"
    },
    "13489": {
      "op": "REVERT"
    },
    "13490": {
      "op": "JUMPDEST"
    },
    "13491": {
      "op": "POP"
    },
    "13492": {
      "op": "MLOAD"
    },
    "13493": {
      "op": "SWAP2"
    },
    "13494": {
      "op": "SWAP1"
    },
    "13495": {
      "op": "POP"
    },
    "13496": {
      "op": "JUMP"
    },
    "13497": {
      "op": "JUMPDEST"
    },
    "13498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13500": {
      "op": "DUP1"
    },
    "13501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13505": {
      "op": "DUP5"
    },
    "13506": {
      "op": "DUP7"
    },
    "13507": {
      "op": "SUB"
    },
    "13508": {
      "jump": "i",
      "op": "SLT"
    },
    "13509": {
      "op": "ISZERO"
    },
    "13510": {
      "op": "PUSH3",
      "value": "0x34CF"
    },
    "13514": {
      "op": "JUMPI"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13517": {
      "op": "DUP1"
    },
    "13518": {
      "op": "REVERT"
    },
    "13519": {
      "op": "JUMPDEST"
    },
    "13520": {
      "op": "PUSH3",
      "value": "0x34DA"
    },
    "13524": {
      "op": "DUP5"
    },
    "13525": {
      "op": "PUSH3",
      "value": "0x309E"
    },
    "13529": {
      "op": "JUMP"
    },
    "13530": {
      "op": "JUMPDEST"
    },
    "13531": {
      "op": "SWAP3"
    },
    "13532": {
      "op": "POP"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13535": {
      "op": "DUP5"
    },
    "13536": {
      "op": "ADD"
    },
    "13537": {
      "op": "CALLDATALOAD"
    },
    "13538": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13547": {
      "op": "DUP1"
    },
    "13548": {
      "op": "DUP3"
    },
    "13549": {
      "op": "GT"
    },
    "13550": {
      "op": "ISZERO"
    },
    "13551": {
      "op": "PUSH3",
      "value": "0x34F8"
    },
    "13555": {
      "op": "JUMPI"
    },
    "13556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13558": {
      "jump": "i",
      "op": "DUP1"
    },
    "13559": {
      "op": "REVERT"
    },
    "13560": {
      "op": "JUMPDEST"
    },
    "13561": {
      "op": "PUSH3",
      "value": "0x3506"
    },
    "13565": {
      "op": "DUP8"
    },
    "13566": {
      "op": "DUP4"
    },
    "13567": {
      "op": "DUP9"
    },
    "13568": {
      "op": "ADD"
    },
    "13569": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "13573": {
      "op": "JUMP"
    },
    "13574": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "13575": {
      "op": "SWAP4"
    },
    "13576": {
      "op": "POP"
    },
    "13577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13579": {
      "op": "DUP7"
    },
    "13580": {
      "op": "ADD"
    },
    "13581": {
      "op": "CALLDATALOAD"
    },
    "13582": {
      "op": "SWAP2"
    },
    "13583": {
      "op": "POP"
    },
    "13584": {
      "op": "DUP1"
    },
    "13585": {
      "op": "DUP3"
    },
    "13586": {
      "op": "GT"
    },
    "13587": {
      "op": "ISZERO"
    },
    "13588": {
      "op": "PUSH3",
      "value": "0x351D"
    },
    "13592": {
      "op": "JUMPI"
    },
    "13593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13595": {
      "op": "DUP1"
    },
    "13596": {
      "op": "REVERT"
    },
    "13597": {
      "op": "JUMPDEST"
    },
    "13598": {
      "op": "POP"
    },
    "13599": {
      "op": "PUSH3",
      "value": "0x352C"
    },
    "13603": {
      "op": "DUP7"
    },
    "13604": {
      "op": "DUP3"
    },
    "13605": {
      "op": "DUP8"
    },
    "13606": {
      "jump": "i",
      "op": "ADD"
    },
    "13607": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "13611": {
      "op": "JUMP"
    },
    "13612": {
      "op": "JUMPDEST"
    },
    "13613": {
      "op": "SWAP2"
    },
    "13614": {
      "op": "POP"
    },
    "13615": {
      "op": "POP"
    },
    "13616": {
      "op": "SWAP3"
    },
    "13617": {
      "op": "POP"
    },
    "13618": {
      "op": "SWAP3"
    },
    "13619": {
      "op": "POP"
    },
    "13620": {
      "op": "SWAP3"
    },
    "13621": {
      "op": "JUMP"
    },
    "13622": {
      "op": "JUMPDEST"
    },
    "13623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13625": {
      "op": "DUP1"
    },
    "13626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13628": {
      "op": "DUP1"
    },
    "13629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13631": {
      "op": "DUP1"
    },
    "13632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13634": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13636": {
      "op": "DUP9"
    },
    "13637": {
      "op": "DUP11"
    },
    "13638": {
      "op": "SUB"
    },
    "13639": {
      "jump": "i",
      "op": "SLT"
    },
    "13640": {
      "op": "ISZERO"
    },
    "13641": {
      "op": "PUSH3",
      "value": "0x3552"
    },
    "13645": {
      "op": "JUMPI"
    },
    "13646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13648": {
      "op": "DUP1"
    },
    "13649": {
      "op": "REVERT"
    },
    "13650": {
      "op": "JUMPDEST"
    },
    "13651": {
      "op": "PUSH3",
      "value": "0x355D"
    },
    "13655": {
      "op": "DUP9"
    },
    "13656": {
      "op": "PUSH3",
      "value": "0x309E"
    },
    "13660": {
      "op": "JUMP"
    },
    "13661": {
      "op": "JUMPDEST"
    },
    "13662": {
      "op": "SWAP7"
    },
    "13663": {
      "op": "POP"
    },
    "13664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13666": {
      "op": "DUP9"
    },
    "13667": {
      "op": "ADD"
    },
    "13668": {
      "op": "CALLDATALOAD"
    },
    "13669": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13678": {
      "op": "DUP1"
    },
    "13679": {
      "op": "DUP3"
    },
    "13680": {
      "op": "GT"
    },
    "13681": {
      "op": "ISZERO"
    },
    "13682": {
      "op": "PUSH3",
      "value": "0x357B"
    },
    "13686": {
      "op": "JUMPI"
    },
    "13687": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x0"
    },
    "13689": {
      "op": "DUP1"
    },
    "13690": {
      "op": "REVERT"
    },
    "13691": {
      "op": "JUMPDEST"
    },
    "13692": {
      "op": "PUSH3",
      "value": "0x3589"
    },
    "13696": {
      "op": "DUP12"
    },
    "13697": {
      "op": "DUP4"
    },
    "13698": {
      "op": "DUP13"
    },
    "13699": {
      "op": "ADD"
    },
    "13700": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "13704": {
      "op": "JUMP"
    },
    "13705": {
      "op": "JUMPDEST"
    },
    "13706": {
      "op": "SWAP8"
    },
    "13707": {
      "op": "POP"
    },
    "13708": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13710": {
      "op": "DUP11"
    },
    "13711": {
      "op": "ADD"
    },
    "13712": {
      "op": "CALLDATALOAD"
    },
    "13713": {
      "op": "SWAP2"
    },
    "13714": {
      "op": "POP"
    },
    "13715": {
      "op": "DUP1"
    },
    "13716": {
      "op": "DUP3"
    },
    "13717": {
      "op": "GT"
    },
    "13718": {
      "op": "ISZERO"
    },
    "13719": {
      "op": "PUSH3",
      "value": "0x35A0"
    },
    "13723": {
      "op": "JUMPI"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13726": {
      "jump": "i",
      "op": "DUP1"
    },
    "13727": {
      "op": "REVERT"
    },
    "13728": {
      "op": "JUMPDEST"
    },
    "13729": {
      "op": "PUSH3",
      "value": "0x35AE"
    },
    "13733": {
      "op": "DUP12"
    },
    "13734": {
      "op": "DUP4"
    },
    "13735": {
      "op": "DUP13"
    },
    "13736": {
      "op": "ADD"
    },
    "13737": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "13741": {
      "op": "JUMP"
    },
    "13742": {
      "op": "JUMPDEST"
    },
    "13743": {
      "op": "SWAP7"
    },
    "13744": {
      "op": "POP"
    },
    "13745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13747": {
      "op": "DUP11"
    },
    "13748": {
      "op": "ADD"
    },
    "13749": {
      "op": "CALLDATALOAD"
    },
    "13750": {
      "op": "SWAP2"
    },
    "13751": {
      "op": "POP"
    },
    "13752": {
      "op": "DUP1"
    },
    "13753": {
      "op": "DUP3"
    },
    "13754": {
      "jump": "i",
      "op": "GT"
    },
    "13755": {
      "op": "ISZERO"
    },
    "13756": {
      "op": "PUSH3",
      "value": "0x35C5"
    },
    "13760": {
      "op": "JUMPI"
    },
    "13761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13763": {
      "op": "DUP1"
    },
    "13764": {
      "op": "REVERT"
    },
    "13765": {
      "op": "JUMPDEST"
    },
    "13766": {
      "op": "POP"
    },
    "13767": {
      "op": "PUSH3",
      "value": "0x35D4"
    },
    "13771": {
      "op": "DUP11"
    },
    "13772": {
      "op": "DUP3"
    },
    "13773": {
      "op": "DUP12"
    },
    "13774": {
      "op": "ADD"
    },
    "13775": {
      "op": "PUSH3",
      "value": "0x2F98"
    },
    "13779": {
      "op": "JUMP"
    },
    "13780": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "13781": {
      "op": "SWAP1"
    },
    "13782": {
      "op": "SWAP6"
    },
    "13783": {
      "op": "POP"
    },
    "13784": {
      "op": "SWAP4"
    },
    "13785": {
      "op": "POP"
    },
    "13786": {
      "op": "POP"
    },
    "13787": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13789": {
      "op": "DUP9"
    },
    "13790": {
      "op": "ADD"
    },
    "13791": {
      "op": "CALLDATALOAD"
    },
    "13792": {
      "op": "SWAP2"
    },
    "13793": {
      "op": "POP"
    },
    "13794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13796": {
      "op": "DUP9"
    },
    "13797": {
      "op": "ADD"
    },
    "13798": {
      "op": "CALLDATALOAD"
    },
    "13799": {
      "op": "PUSH3",
      "value": "0x35F1"
    },
    "13803": {
      "op": "DUP2"
    },
    "13804": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "13808": {
      "op": "JUMP"
    },
    "13809": {
      "op": "JUMPDEST"
    },
    "13810": {
      "op": "DUP1"
    },
    "13811": {
      "op": "SWAP2"
    },
    "13812": {
      "op": "POP"
    },
    "13813": {
      "op": "POP"
    },
    "13814": {
      "jump": "i",
      "op": "SWAP3"
    },
    "13815": {
      "op": "SWAP6"
    },
    "13816": {
      "op": "SWAP9"
    },
    "13817": {
      "op": "SWAP2"
    },
    "13818": {
      "op": "SWAP5"
    },
    "13819": {
      "op": "SWAP8"
    },
    "13820": {
      "op": "POP"
    },
    "13821": {
      "op": "SWAP3"
    },
    "13822": {
      "op": "SWAP6"
    },
    "13823": {
      "op": "POP"
    },
    "13824": {
      "op": "JUMP"
    },
    "13825": {
      "op": "JUMPDEST"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13828": {
      "op": "DUP1"
    },
    "13829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13831": {
      "op": "DUP1"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13834": {
      "op": "DUP1"
    },
    "13835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13837": {
      "op": "DUP1"
    },
    "13838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13840": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13843": {
      "op": "DUP11"
    },
    "13844": {
      "op": "DUP13"
    },
    "13845": {
      "op": "SUB"
    },
    "13846": {
      "jump": "i",
      "op": "SLT"
    },
    "13847": {
      "op": "ISZERO"
    },
    "13848": {
      "op": "PUSH3",
      "value": "0x3621"
    },
    "13852": {
      "op": "JUMPI"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13855": {
      "op": "DUP1"
    },
    "13856": {
      "op": "REVERT"
    },
    "13857": {
      "op": "JUMPDEST"
    },
    "13858": {
      "op": "PUSH3",
      "value": "0x362C"
    },
    "13862": {
      "op": "DUP11"
    },
    "13863": {
      "op": "PUSH3",
      "value": "0x309E"
    },
    "13867": {
      "op": "JUMP"
    },
    "13868": {
      "op": "JUMPDEST"
    },
    "13869": {
      "op": "SWAP9"
    },
    "13870": {
      "op": "POP"
    },
    "13871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13873": {
      "op": "DUP11"
    },
    "13874": {
      "op": "ADD"
    },
    "13875": {
      "op": "CALLDATALOAD"
    },
    "13876": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13885": {
      "op": "DUP1"
    },
    "13886": {
      "op": "DUP3"
    },
    "13887": {
      "op": "GT"
    },
    "13888": {
      "op": "ISZERO"
    },
    "13889": {
      "op": "PUSH3",
      "value": "0x364A"
    },
    "13893": {
      "op": "JUMPI"
    },
    "13894": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x0"
    },
    "13896": {
      "op": "DUP1"
    },
    "13897": {
      "op": "REVERT"
    },
    "13898": {
      "op": "JUMPDEST"
    },
    "13899": {
      "op": "PUSH3",
      "value": "0x3658"
    },
    "13903": {
      "op": "DUP14"
    },
    "13904": {
      "op": "DUP4"
    },
    "13905": {
      "op": "DUP15"
    },
    "13906": {
      "op": "ADD"
    },
    "13907": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "13911": {
      "op": "JUMP"
    },
    "13912": {
      "op": "JUMPDEST"
    },
    "13913": {
      "op": "SWAP10"
    },
    "13914": {
      "op": "POP"
    },
    "13915": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13917": {
      "op": "DUP13"
    },
    "13918": {
      "op": "ADD"
    },
    "13919": {
      "op": "CALLDATALOAD"
    },
    "13920": {
      "op": "SWAP2"
    },
    "13921": {
      "op": "POP"
    },
    "13922": {
      "op": "DUP1"
    },
    "13923": {
      "op": "DUP3"
    },
    "13924": {
      "op": "GT"
    },
    "13925": {
      "op": "ISZERO"
    },
    "13926": {
      "op": "PUSH3",
      "value": "0x366F"
    },
    "13930": {
      "op": "JUMPI"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13933": {
      "jump": "i",
      "op": "DUP1"
    },
    "13934": {
      "op": "REVERT"
    },
    "13935": {
      "op": "JUMPDEST"
    },
    "13936": {
      "op": "PUSH3",
      "value": "0x367D"
    },
    "13940": {
      "op": "DUP14"
    },
    "13941": {
      "op": "DUP4"
    },
    "13942": {
      "op": "DUP15"
    },
    "13943": {
      "op": "ADD"
    },
    "13944": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "13948": {
      "op": "JUMP"
    },
    "13949": {
      "op": "JUMPDEST"
    },
    "13950": {
      "op": "SWAP9"
    },
    "13951": {
      "op": "POP"
    },
    "13952": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13954": {
      "op": "DUP13"
    },
    "13955": {
      "op": "ADD"
    },
    "13956": {
      "op": "CALLDATALOAD"
    },
    "13957": {
      "op": "SWAP2"
    },
    "13958": {
      "op": "POP"
    },
    "13959": {
      "jump": "i",
      "op": "DUP1"
    },
    "13960": {
      "op": "DUP3"
    },
    "13961": {
      "op": "GT"
    },
    "13962": {
      "op": "ISZERO"
    },
    "13963": {
      "op": "PUSH3",
      "value": "0x3694"
    },
    "13967": {
      "op": "JUMPI"
    },
    "13968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13970": {
      "op": "DUP1"
    },
    "13971": {
      "op": "REVERT"
    },
    "13972": {
      "op": "JUMPDEST"
    },
    "13973": {
      "op": "POP"
    },
    "13974": {
      "op": "PUSH3",
      "value": "0x36A3"
    },
    "13978": {
      "op": "DUP13"
    },
    "13979": {
      "op": "DUP3"
    },
    "13980": {
      "op": "DUP14"
    },
    "13981": {
      "jump": "i",
      "op": "ADD"
    },
    "13982": {
      "op": "PUSH3",
      "value": "0x2F98"
    },
    "13986": {
      "op": "JUMP"
    },
    "13987": {
      "op": "JUMPDEST"
    },
    "13988": {
      "op": "SWAP1"
    },
    "13989": {
      "op": "SWAP8"
    },
    "13990": {
      "op": "POP"
    },
    "13991": {
      "op": "SWAP6"
    },
    "13992": {
      "op": "POP"
    },
    "13993": {
      "op": "POP"
    },
    "13994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13996": {
      "op": "DUP11"
    },
    "13997": {
      "op": "ADD"
    },
    "13998": {
      "op": "CALLDATALOAD"
    },
    "13999": {
      "op": "SWAP4"
    },
    "14000": {
      "jump": "o",
      "op": "POP"
    },
    "14001": {
      "op": "PUSH3",
      "value": "0x36BE"
    },
    "14005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14007": {
      "op": "DUP12"
    },
    "14008": {
      "op": "ADD"
    },
    "14009": {
      "op": "PUSH3",
      "value": "0x2EEF"
    },
    "14013": {
      "op": "JUMP"
    },
    "14014": {
      "op": "JUMPDEST"
    },
    "14015": {
      "op": "SWAP3"
    },
    "14016": {
      "op": "POP"
    },
    "14017": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14019": {
      "op": "DUP11"
    },
    "14020": {
      "op": "ADD"
    },
    "14021": {
      "op": "CALLDATALOAD"
    },
    "14022": {
      "op": "SWAP2"
    },
    "14023": {
      "op": "POP"
    },
    "14024": {
      "op": "PUSH3",
      "value": "0x36D5"
    },
    "14028": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14030": {
      "op": "DUP12"
    },
    "14031": {
      "op": "ADD"
    },
    "14032": {
      "op": "PUSH3",
      "value": "0x2EEF"
    },
    "14036": {
      "op": "JUMP"
    },
    "14037": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "14038": {
      "op": "SWAP1"
    },
    "14039": {
      "op": "POP"
    },
    "14040": {
      "op": "SWAP3"
    },
    "14041": {
      "op": "SWAP6"
    },
    "14042": {
      "op": "SWAP9"
    },
    "14043": {
      "op": "POP"
    },
    "14044": {
      "op": "SWAP3"
    },
    "14045": {
      "op": "SWAP6"
    },
    "14046": {
      "op": "SWAP9"
    },
    "14047": {
      "op": "POP"
    },
    "14048": {
      "op": "SWAP3"
    },
    "14049": {
      "op": "SWAP6"
    },
    "14050": {
      "op": "SWAP9"
    },
    "14051": {
      "op": "JUMP"
    },
    "14052": {
      "op": "JUMPDEST"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14055": {
      "op": "DUP1"
    },
    "14056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14058": {
      "op": "DUP1"
    },
    "14059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14063": {
      "op": "DUP7"
    },
    "14064": {
      "op": "DUP9"
    },
    "14065": {
      "op": "SUB"
    },
    "14066": {
      "jump": "i",
      "op": "SLT"
    },
    "14067": {
      "op": "ISZERO"
    },
    "14068": {
      "op": "PUSH3",
      "value": "0x36FD"
    },
    "14072": {
      "op": "JUMPI"
    },
    "14073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14075": {
      "op": "DUP1"
    },
    "14076": {
      "op": "REVERT"
    },
    "14077": {
      "op": "JUMPDEST"
    },
    "14078": {
      "op": "PUSH3",
      "value": "0x3708"
    },
    "14082": {
      "op": "DUP7"
    },
    "14083": {
      "op": "PUSH3",
      "value": "0x309E"
    },
    "14087": {
      "op": "JUMP"
    },
    "14088": {
      "op": "JUMPDEST"
    },
    "14089": {
      "op": "SWAP5"
    },
    "14090": {
      "op": "POP"
    },
    "14091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14093": {
      "op": "DUP7"
    },
    "14094": {
      "op": "ADD"
    },
    "14095": {
      "op": "CALLDATALOAD"
    },
    "14096": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14105": {
      "op": "DUP1"
    },
    "14106": {
      "op": "DUP3"
    },
    "14107": {
      "op": "GT"
    },
    "14108": {
      "op": "ISZERO"
    },
    "14109": {
      "op": "PUSH3",
      "value": "0x3726"
    },
    "14113": {
      "op": "JUMPI"
    },
    "14114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14116": {
      "jump": "i",
      "op": "DUP1"
    },
    "14117": {
      "op": "REVERT"
    },
    "14118": {
      "op": "JUMPDEST"
    },
    "14119": {
      "op": "PUSH3",
      "value": "0x3734"
    },
    "14123": {
      "op": "DUP10"
    },
    "14124": {
      "op": "DUP4"
    },
    "14125": {
      "op": "DUP11"
    },
    "14126": {
      "op": "ADD"
    },
    "14127": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "14131": {
      "op": "JUMP"
    },
    "14132": {
      "op": "JUMPDEST"
    },
    "14133": {
      "op": "SWAP6"
    },
    "14134": {
      "jump": "i",
      "op": "POP"
    },
    "14135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14137": {
      "op": "DUP9"
    },
    "14138": {
      "op": "ADD"
    },
    "14139": {
      "op": "CALLDATALOAD"
    },
    "14140": {
      "op": "SWAP2"
    },
    "14141": {
      "op": "POP"
    },
    "14142": {
      "op": "DUP1"
    },
    "14143": {
      "op": "DUP3"
    },
    "14144": {
      "op": "GT"
    },
    "14145": {
      "op": "ISZERO"
    },
    "14146": {
      "op": "PUSH3",
      "value": "0x374B"
    },
    "14150": {
      "op": "JUMPI"
    },
    "14151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14153": {
      "op": "DUP1"
    },
    "14154": {
      "op": "REVERT"
    },
    "14155": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "14156": {
      "op": "POP"
    },
    "14157": {
      "op": "PUSH3",
      "value": "0x375A"
    },
    "14161": {
      "op": "DUP9"
    },
    "14162": {
      "op": "DUP3"
    },
    "14163": {
      "op": "DUP10"
    },
    "14164": {
      "op": "ADD"
    },
    "14165": {
      "op": "PUSH3",
      "value": "0x2FDD"
    },
    "14169": {
      "op": "JUMP"
    },
    "14170": {
      "op": "JUMPDEST"
    },
    "14171": {
      "op": "SWAP4"
    },
    "14172": {
      "op": "POP"
    },
    "14173": {
      "op": "POP"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14176": {
      "op": "DUP7"
    },
    "14177": {
      "op": "ADD"
    },
    "14178": {
      "op": "CALLDATALOAD"
    },
    "14179": {
      "op": "PUSH3",
      "value": "0x376D"
    },
    "14183": {
      "op": "DUP2"
    },
    "14184": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14188": {
      "op": "JUMP"
    },
    "14189": {
      "op": "JUMPDEST"
    },
    "14190": {
      "op": "SWAP5"
    },
    "14191": {
      "op": "SWAP8"
    },
    "14192": {
      "op": "SWAP4"
    },
    "14193": {
      "op": "SWAP7"
    },
    "14194": {
      "op": "POP"
    },
    "14195": {
      "op": "SWAP2"
    },
    "14196": {
      "op": "SWAP5"
    },
    "14197": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14199": {
      "op": "ADD"
    },
    "14200": {
      "op": "CALLDATALOAD"
    },
    "14201": {
      "jump": "i",
      "op": "SWAP3"
    },
    "14202": {
      "op": "SWAP2"
    },
    "14203": {
      "op": "POP"
    },
    "14204": {
      "op": "POP"
    },
    "14205": {
      "op": "JUMP"
    },
    "14206": {
      "op": "JUMPDEST"
    },
    "14207": {
      "op": "DUP2"
    },
    "14208": {
      "op": "DUP4"
    },
    "14209": {
      "op": "MSTORE"
    },
    "14210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14214": {
      "op": "DUP1"
    },
    "14215": {
      "op": "DUP6"
    },
    "14216": {
      "op": "ADD"
    },
    "14217": {
      "op": "SWAP5"
    },
    "14218": {
      "op": "POP"
    },
    "14219": {
      "op": "DUP3"
    },
    "14220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14222": {
      "op": "JUMPDEST"
    },
    "14223": {
      "op": "DUP6"
    },
    "14224": {
      "op": "DUP2"
    },
    "14225": {
      "op": "LT"
    },
    "14226": {
      "op": "ISZERO"
    },
    "14227": {
      "op": "PUSH3",
      "value": "0x37CB"
    },
    "14231": {
      "op": "JUMPI"
    },
    "14232": {
      "op": "DUP2"
    },
    "14233": {
      "op": "CALLDATALOAD"
    },
    "14234": {
      "op": "DUP8"
    },
    "14235": {
      "op": "MSTORE"
    },
    "14236": {
      "op": "DUP3"
    },
    "14237": {
      "op": "DUP3"
    },
    "14238": {
      "op": "ADD"
    },
    "14239": {
      "op": "CALLDATALOAD"
    },
    "14240": {
      "op": "PUSH3",
      "value": "0x37AA"
    },
    "14244": {
      "op": "DUP2"
    },
    "14245": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14249": {
      "jump": "o",
      "op": "JUMP"
    },
    "14250": {
      "op": "JUMPDEST"
    },
    "14251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14257": {
      "op": "SHL"
    },
    "14258": {
      "op": "SUB"
    },
    "14259": {
      "op": "AND"
    },
    "14260": {
      "op": "DUP8"
    },
    "14261": {
      "op": "DUP5"
    },
    "14262": {
      "op": "ADD"
    },
    "14263": {
      "op": "MSTORE"
    },
    "14264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14266": {
      "op": "SWAP7"
    },
    "14267": {
      "op": "DUP8"
    },
    "14268": {
      "op": "ADD"
    },
    "14269": {
      "op": "SWAP7"
    },
    "14270": {
      "op": "SWAP2"
    },
    "14271": {
      "op": "SWAP1"
    },
    "14272": {
      "op": "SWAP2"
    },
    "14273": {
      "op": "ADD"
    },
    "14274": {
      "op": "SWAP1"
    },
    "14275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14277": {
      "op": "ADD"
    },
    "14278": {
      "op": "PUSH3",
      "value": "0x378E"
    },
    "14282": {
      "op": "JUMP"
    },
    "14283": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "14284": {
      "op": "POP"
    },
    "14285": {
      "op": "SWAP5"
    },
    "14286": {
      "op": "SWAP6"
    },
    "14287": {
      "op": "SWAP5"
    },
    "14288": {
      "op": "POP"
    },
    "14289": {
      "op": "POP"
    },
    "14290": {
      "op": "POP"
    },
    "14291": {
      "op": "POP"
    },
    "14292": {
      "op": "POP"
    },
    "14293": {
      "op": "JUMP"
    },
    "14294": {
      "op": "JUMPDEST"
    },
    "14295": {
      "op": "DUP2"
    },
    "14296": {
      "op": "DUP4"
    },
    "14297": {
      "op": "MSTORE"
    },
    "14298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14302": {
      "op": "DUP1"
    },
    "14303": {
      "op": "DUP6"
    },
    "14304": {
      "op": "ADD"
    },
    "14305": {
      "jump": "i",
      "op": "SWAP5"
    },
    "14306": {
      "op": "POP"
    },
    "14307": {
      "op": "DUP3"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14310": {
      "op": "JUMPDEST"
    },
    "14311": {
      "op": "DUP6"
    },
    "14312": {
      "op": "DUP2"
    },
    "14313": {
      "op": "LT"
    },
    "14314": {
      "op": "ISZERO"
    },
    "14315": {
      "op": "PUSH3",
      "value": "0x37CB"
    },
    "14319": {
      "op": "JUMPI"
    },
    "14320": {
      "op": "DUP2"
    },
    "14321": {
      "op": "CALLDATALOAD"
    },
    "14322": {
      "op": "PUSH3",
      "value": "0x37FC"
    },
    "14326": {
      "op": "DUP2"
    },
    "14327": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14331": {
      "op": "JUMP"
    },
    "14332": {
      "op": "JUMPDEST"
    },
    "14333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14339": {
      "op": "SHL"
    },
    "14340": {
      "op": "SUB"
    },
    "14341": {
      "op": "SWAP1"
    },
    "14342": {
      "op": "DUP2"
    },
    "14343": {
      "op": "AND"
    },
    "14344": {
      "op": "DUP9"
    },
    "14345": {
      "op": "MSTORE"
    },
    "14346": {
      "op": "DUP3"
    },
    "14347": {
      "op": "DUP5"
    },
    "14348": {
      "op": "ADD"
    },
    "14349": {
      "op": "CALLDATALOAD"
    },
    "14350": {
      "op": "SWAP1"
    },
    "14351": {
      "op": "PUSH3",
      "value": "0x3819"
    },
    "14355": {
      "op": "DUP3"
    },
    "14356": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14360": {
      "op": "JUMP"
    },
    "14361": {
      "op": "JUMPDEST"
    },
    "14362": {
      "op": "AND"
    },
    "14363": {
      "op": "DUP8"
    },
    "14364": {
      "op": "DUP5"
    },
    "14365": {
      "op": "ADD"
    },
    "14366": {
      "op": "MSTORE"
    },
    "14367": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14369": {
      "jump": "i",
      "op": "SWAP7"
    },
    "14370": {
      "op": "DUP8"
    },
    "14371": {
      "op": "ADD"
    },
    "14372": {
      "op": "SWAP7"
    },
    "14373": {
      "op": "SWAP2"
    },
    "14374": {
      "op": "SWAP1"
    },
    "14375": {
      "op": "SWAP2"
    },
    "14376": {
      "op": "ADD"
    },
    "14377": {
      "op": "SWAP1"
    },
    "14378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14380": {
      "op": "ADD"
    },
    "14381": {
      "op": "PUSH3",
      "value": "0x37E6"
    },
    "14385": {
      "op": "JUMP"
    },
    "14386": {
      "op": "JUMPDEST"
    },
    "14387": {
      "op": "DUP2"
    },
    "14388": {
      "op": "DUP4"
    },
    "14389": {
      "op": "MSTORE"
    },
    "14390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14392": {
      "op": "DUP4"
    },
    "14393": {
      "op": "ADD"
    },
    "14394": {
      "op": "SWAP3"
    },
    "14395": {
      "op": "POP"
    },
    "14396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14398": {
      "op": "DUP2"
    },
    "14399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14401": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "14402": {
      "op": "DUP5"
    },
    "14403": {
      "op": "DUP2"
    },
    "14404": {
      "op": "LT"
    },
    "14405": {
      "op": "ISZERO"
    },
    "14406": {
      "op": "PUSH3",
      "value": "0x386A"
    },
    "14410": {
      "op": "JUMPI"
    },
    "14411": {
      "op": "PUSH3",
      "value": "0x3856"
    },
    "14415": {
      "op": "DUP7"
    },
    "14416": {
      "op": "DUP4"
    },
    "14417": {
      "op": "PUSH3",
      "value": "0x38CB"
    },
    "14421": {
      "op": "JUMP"
    },
    "14422": {
      "op": "JUMPDEST"
    },
    "14423": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14425": {
      "op": "SWAP6"
    },
    "14426": {
      "op": "DUP7"
    },
    "14427": {
      "op": "ADD"
    },
    "14428": {
      "op": "SWAP6"
    },
    "14429": {
      "op": "SWAP2"
    },
    "14430": {
      "op": "SWAP1"
    },
    "14431": {
      "op": "SWAP2"
    },
    "14432": {
      "op": "ADD"
    },
    "14433": {
      "op": "SWAP1"
    },
    "14434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14436": {
      "op": "ADD"
    },
    "14437": {
      "op": "PUSH3",
      "value": "0x3841"
    },
    "14441": {
      "op": "JUMP"
    },
    "14442": {
      "op": "JUMPDEST"
    },
    "14443": {
      "op": "POP"
    },
    "14444": {
      "op": "SWAP4"
    },
    "14445": {
      "op": "SWAP5"
    },
    "14446": {
      "op": "SWAP4"
    },
    "14447": {
      "op": "POP"
    },
    "14448": {
      "op": "POP"
    },
    "14449": {
      "op": "POP"
    },
    "14450": {
      "op": "POP"
    },
    "14451": {
      "jump": "o",
      "op": "JUMP"
    },
    "14452": {
      "op": "JUMPDEST"
    },
    "14453": {
      "op": "DUP2"
    },
    "14454": {
      "op": "DUP4"
    },
    "14455": {
      "op": "MSTORE"
    },
    "14456": {
      "op": "DUP2"
    },
    "14457": {
      "op": "DUP2"
    },
    "14458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14460": {
      "op": "DUP6"
    },
    "14461": {
      "op": "ADD"
    },
    "14462": {
      "op": "CALLDATACOPY"
    },
    "14463": {
      "op": "POP"
    },
    "14464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14466": {
      "op": "DUP3"
    },
    "14467": {
      "op": "DUP3"
    },
    "14468": {
      "op": "ADD"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14471": {
      "jump": "i",
      "op": "SWAP1"
    },
    "14472": {
      "op": "DUP2"
    },
    "14473": {
      "op": "ADD"
    },
    "14474": {
      "op": "SWAP2"
    },
    "14475": {
      "op": "SWAP1"
    },
    "14476": {
      "op": "SWAP2"
    },
    "14477": {
      "op": "MSTORE"
    },
    "14478": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14480": {
      "op": "SWAP1"
    },
    "14481": {
      "op": "SWAP2"
    },
    "14482": {
      "op": "ADD"
    },
    "14483": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14485": {
      "op": "NOT"
    },
    "14486": {
      "op": "AND"
    },
    "14487": {
      "op": "SWAP1"
    },
    "14488": {
      "op": "SWAP2"
    },
    "14489": {
      "op": "ADD"
    },
    "14490": {
      "jump": "o",
      "op": "ADD"
    },
    "14491": {
      "op": "SWAP1"
    },
    "14492": {
      "op": "JUMP"
    },
    "14493": {
      "op": "JUMPDEST"
    },
    "14494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14496": {
      "op": "DUP2"
    },
    "14497": {
      "op": "MLOAD"
    },
    "14498": {
      "jump": "i",
      "op": "DUP1"
    },
    "14499": {
      "op": "DUP5"
    },
    "14500": {
      "op": "MSTORE"
    },
    "14501": {
      "op": "PUSH3",
      "value": "0x38B7"
    },
    "14505": {
      "op": "DUP2"
    },
    "14506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14508": {
      "op": "DUP7"
    },
    "14509": {
      "op": "ADD"
    },
    "14510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14512": {
      "op": "DUP7"
    },
    "14513": {
      "op": "ADD"
    },
    "14514": {
      "op": "PUSH3",
      "value": "0x3FCE"
    },
    "14518": {
      "op": "JUMP"
    },
    "14519": {
      "op": "JUMPDEST"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14522": {
      "op": "ADD"
    },
    "14523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14525": {
      "op": "NOT"
    },
    "14526": {
      "op": "AND"
    },
    "14527": {
      "op": "SWAP3"
    },
    "14528": {
      "jump": "i",
      "op": "SWAP1"
    },
    "14529": {
      "op": "SWAP3"
    },
    "14530": {
      "op": "ADD"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14533": {
      "op": "ADD"
    },
    "14534": {
      "op": "SWAP3"
    },
    "14535": {
      "op": "SWAP2"
    },
    "14536": {
      "op": "POP"
    },
    "14537": {
      "op": "POP"
    },
    "14538": {
      "op": "JUMP"
    },
    "14539": {
      "op": "JUMPDEST"
    },
    "14540": {
      "op": "DUP1"
    },
    "14541": {
      "op": "CALLDATALOAD"
    },
    "14542": {
      "op": "PUSH3",
      "value": "0x38D8"
    },
    "14546": {
      "op": "DUP2"
    },
    "14547": {
      "jump": "o",
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14551": {
      "op": "JUMP"
    },
    "14552": {
      "op": "JUMPDEST"
    },
    "14553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14559": {
      "op": "SHL"
    },
    "14560": {
      "op": "SUB"
    },
    "14561": {
      "op": "SWAP1"
    },
    "14562": {
      "op": "DUP2"
    },
    "14563": {
      "op": "AND"
    },
    "14564": {
      "op": "DUP4"
    },
    "14565": {
      "jump": "i",
      "op": "MSTORE"
    },
    "14566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14568": {
      "op": "DUP3"
    },
    "14569": {
      "op": "ADD"
    },
    "14570": {
      "op": "CALLDATALOAD"
    },
    "14571": {
      "op": "SWAP1"
    },
    "14572": {
      "op": "PUSH3",
      "value": "0x38F6"
    },
    "14576": {
      "op": "DUP3"
    },
    "14577": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14581": {
      "op": "JUMP"
    },
    "14582": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "14583": {
      "op": "AND"
    },
    "14584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14586": {
      "op": "DUP4"
    },
    "14587": {
      "op": "ADD"
    },
    "14588": {
      "op": "MSTORE"
    },
    "14589": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14591": {
      "op": "SWAP1"
    },
    "14592": {
      "op": "DUP2"
    },
    "14593": {
      "op": "ADD"
    },
    "14594": {
      "op": "CALLDATALOAD"
    },
    "14595": {
      "op": "SWAP2"
    },
    "14596": {
      "jump": "i",
      "op": "ADD"
    },
    "14597": {
      "op": "MSTORE"
    },
    "14598": {
      "op": "JUMP"
    },
    "14599": {
      "op": "JUMPDEST"
    },
    "14600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14602": {
      "op": "DUP3"
    },
    "14603": {
      "op": "MLOAD"
    },
    "14604": {
      "op": "PUSH3",
      "value": "0x391B"
    },
    "14608": {
      "op": "DUP2"
    },
    "14609": {
      "op": "DUP5"
    },
    "14610": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x20"
    },
    "14612": {
      "op": "DUP8"
    },
    "14613": {
      "op": "ADD"
    },
    "14614": {
      "op": "PUSH3",
      "value": "0x3FCE"
    },
    "14618": {
      "op": "JUMP"
    },
    "14619": {
      "op": "JUMPDEST"
    },
    "14620": {
      "op": "SWAP2"
    },
    "14621": {
      "op": "SWAP1"
    },
    "14622": {
      "op": "SWAP2"
    },
    "14623": {
      "op": "ADD"
    },
    "14624": {
      "op": "SWAP3"
    },
    "14625": {
      "op": "SWAP2"
    },
    "14626": {
      "op": "POP"
    },
    "14627": {
      "op": "POP"
    },
    "14628": {
      "op": "JUMP"
    },
    "14629": {
      "op": "JUMPDEST"
    },
    "14630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14632": {
      "op": "DUP2"
    },
    "14633": {
      "op": "MSTORE"
    },
    "14634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14636": {
      "op": "PUSH3",
      "value": "0x2D53"
    },
    "14640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14642": {
      "op": "DUP4"
    },
    "14643": {
      "op": "ADD"
    },
    "14644": {
      "op": "DUP5"
    },
    "14645": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "14649": {
      "op": "JUMP"
    },
    "14650": {
      "op": "JUMPDEST"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14653": {
      "op": "DUP2"
    },
    "14654": {
      "op": "ADD"
    },
    "14655": {
      "op": "DUP4"
    },
    "14656": {
      "op": "CALLDATALOAD"
    },
    "14657": {
      "op": "PUSH3",
      "value": "0x394B"
    },
    "14661": {
      "op": "DUP2"
    },
    "14662": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14666": {
      "op": "JUMP"
    },
    "14667": {
      "op": "JUMPDEST"
    },
    "14668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14674": {
      "op": "SHL"
    },
    "14675": {
      "op": "SUB"
    },
    "14676": {
      "op": "DUP1"
    },
    "14677": {
      "op": "DUP3"
    },
    "14678": {
      "op": "AND"
    },
    "14679": {
      "op": "DUP5"
    },
    "14680": {
      "op": "MSTORE"
    },
    "14681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14683": {
      "op": "DUP7"
    },
    "14684": {
      "op": "ADD"
    },
    "14685": {
      "op": "CALLDATALOAD"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14688": {
      "op": "DUP6"
    },
    "14689": {
      "op": "ADD"
    },
    "14690": {
      "op": "MSTORE"
    },
    "14691": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x40"
    },
    "14693": {
      "op": "DUP7"
    },
    "14694": {
      "op": "ADD"
    },
    "14695": {
      "op": "CALLDATALOAD"
    },
    "14696": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14698": {
      "op": "DUP6"
    },
    "14699": {
      "op": "ADD"
    },
    "14700": {
      "op": "MSTORE"
    },
    "14701": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14703": {
      "op": "DUP7"
    },
    "14704": {
      "op": "ADD"
    },
    "14705": {
      "op": "CALLDATALOAD"
    },
    "14706": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14708": {
      "op": "DUP6"
    },
    "14709": {
      "op": "ADD"
    },
    "14710": {
      "op": "MSTORE"
    },
    "14711": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14713": {
      "op": "DUP7"
    },
    "14714": {
      "jump": "o",
      "op": "ADD"
    },
    "14715": {
      "op": "CALLDATALOAD"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14718": {
      "op": "DUP6"
    },
    "14719": {
      "op": "ADD"
    },
    "14720": {
      "op": "MSTORE"
    },
    "14721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14723": {
      "op": "DUP7"
    },
    "14724": {
      "op": "ADD"
    },
    "14725": {
      "op": "CALLDATALOAD"
    },
    "14726": {
      "op": "SWAP2"
    },
    "14727": {
      "op": "POP"
    },
    "14728": {
      "op": "PUSH3",
      "value": "0x3992"
    },
    "14732": {
      "op": "DUP3"
    },
    "14733": {
      "op": "PUSH3",
      "value": "0x405D"
    },
    "14737": {
      "op": "JUMP"
    },
    "14738": {
      "op": "JUMPDEST"
    },
    "14739": {
      "op": "AND"
    },
    "14740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14742": {
      "op": "DUP4"
    },
    "14743": {
      "op": "ADD"
    },
    "14744": {
      "op": "MSTORE"
    },
    "14745": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14747": {
      "op": "SWAP1"
    },
    "14748": {
      "op": "SWAP2"
    },
    "14749": {
      "op": "ADD"
    },
    "14750": {
      "op": "SWAP2"
    },
    "14751": {
      "op": "SWAP1"
    },
    "14752": {
      "op": "SWAP2"
    },
    "14753": {
      "op": "MSTORE"
    },
    "14754": {
      "op": "SWAP2"
    },
    "14755": {
      "op": "SWAP1"
    },
    "14756": {
      "op": "POP"
    },
    "14757": {
      "op": "JUMP"
    },
    "14758": {
      "op": "JUMPDEST"
    },
    "14759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14761": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "14764": {
      "op": "PUSH3",
      "value": "0x39F8"
    },
    "14768": {
      "op": "DUP4"
    },
    "14769": {
      "op": "DUP12"
    },
    "14770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14776": {
      "op": "SHL"
    },
    "14777": {
      "op": "SUB"
    },
    "14778": {
      "op": "DUP1"
    },
    "14779": {
      "op": "DUP3"
    },
    "14780": {
      "op": "MLOAD"
    },
    "14781": {
      "op": "AND"
    },
    "14782": {
      "op": "DUP4"
    },
    "14783": {
      "op": "MSTORE"
    },
    "14784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14786": {
      "op": "DUP3"
    },
    "14787": {
      "op": "ADD"
    },
    "14788": {
      "op": "MLOAD"
    },
    "14789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14791": {
      "op": "DUP5"
    },
    "14792": {
      "op": "ADD"
    },
    "14793": {
      "op": "MSTORE"
    },
    "14794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14796": {
      "op": "DUP3"
    },
    "14797": {
      "op": "ADD"
    },
    "14798": {
      "op": "MLOAD"
    },
    "14799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14801": {
      "op": "DUP5"
    },
    "14802": {
      "op": "ADD"
    },
    "14803": {
      "op": "MSTORE"
    },
    "14804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14806": {
      "op": "DUP3"
    },
    "14807": {
      "op": "ADD"
    },
    "14808": {
      "op": "MLOAD"
    },
    "14809": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14811": {
      "op": "DUP5"
    },
    "14812": {
      "op": "ADD"
    },
    "14813": {
      "op": "MSTORE"
    },
    "14814": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14816": {
      "op": "DUP3"
    },
    "14817": {
      "op": "ADD"
    },
    "14818": {
      "op": "MLOAD"
    },
    "14819": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14821": {
      "op": "DUP5"
    },
    "14822": {
      "op": "ADD"
    },
    "14823": {
      "op": "MSTORE"
    },
    "14824": {
      "op": "DUP1"
    },
    "14825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14827": {
      "op": "DUP4"
    },
    "14828": {
      "op": "ADD"
    },
    "14829": {
      "op": "MLOAD"
    },
    "14830": {
      "op": "AND"
    },
    "14831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14833": {
      "jump": "i",
      "op": "DUP5"
    },
    "14834": {
      "op": "ADD"
    },
    "14835": {
      "op": "MSTORE"
    },
    "14836": {
      "op": "POP"
    },
    "14837": {
      "op": "POP"
    },
    "14838": {
      "op": "POP"
    },
    "14839": {
      "op": "JUMP"
    },
    "14840": {
      "op": "JUMPDEST"
    },
    "14841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14847": {
      "op": "SHL"
    },
    "14848": {
      "op": "SUB"
    },
    "14849": {
      "op": "DUP10"
    },
    "14850": {
      "op": "AND"
    },
    "14851": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14853": {
      "jump": "i",
      "op": "DUP5"
    },
    "14854": {
      "op": "ADD"
    },
    "14855": {
      "op": "MSTORE"
    },
    "14856": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "14861": {
      "op": "DUP9"
    },
    "14862": {
      "op": "AND"
    },
    "14863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14865": {
      "op": "DUP5"
    },
    "14866": {
      "op": "ADD"
    },
    "14867": {
      "op": "MSTORE"
    },
    "14868": {
      "op": "DUP1"
    },
    "14869": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14872": {
      "op": "DUP5"
    },
    "14873": {
      "op": "ADD"
    },
    "14874": {
      "jump": "o",
      "op": "MSTORE"
    },
    "14875": {
      "op": "PUSH3",
      "value": "0x3A29"
    },
    "14879": {
      "op": "DUP2"
    },
    "14880": {
      "op": "DUP5"
    },
    "14881": {
      "op": "ADD"
    },
    "14882": {
      "op": "DUP8"
    },
    "14883": {
      "op": "DUP10"
    },
    "14884": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "14888": {
      "op": "JUMP"
    },
    "14889": {
      "op": "JUMPDEST"
    },
    "14890": {
      "op": "SWAP1"
    },
    "14891": {
      "op": "POP"
    },
    "14892": {
      "op": "DUP3"
    },
    "14893": {
      "op": "DUP2"
    },
    "14894": {
      "op": "SUB"
    },
    "14895": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "14898": {
      "op": "DUP5"
    },
    "14899": {
      "op": "ADD"
    },
    "14900": {
      "op": "MSTORE"
    },
    "14901": {
      "op": "PUSH3",
      "value": "0x3A41"
    },
    "14905": {
      "op": "DUP2"
    },
    "14906": {
      "op": "DUP6"
    },
    "14907": {
      "op": "DUP8"
    },
    "14908": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "14912": {
      "op": "JUMP"
    },
    "14913": {
      "op": "JUMPDEST"
    },
    "14914": {
      "op": "SWAP11"
    },
    "14915": {
      "op": "SWAP10"
    },
    "14916": {
      "op": "POP"
    },
    "14917": {
      "op": "POP"
    },
    "14918": {
      "op": "POP"
    },
    "14919": {
      "op": "POP"
    },
    "14920": {
      "op": "POP"
    },
    "14921": {
      "op": "POP"
    },
    "14922": {
      "op": "POP"
    },
    "14923": {
      "op": "POP"
    },
    "14924": {
      "op": "POP"
    },
    "14925": {
      "op": "POP"
    },
    "14926": {
      "op": "JUMP"
    },
    "14927": {
      "op": "JUMPDEST"
    },
    "14928": {
      "op": "PUSH3",
      "value": "0x3A9C"
    },
    "14932": {
      "op": "DUP2"
    },
    "14933": {
      "op": "DUP6"
    },
    "14934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14940": {
      "op": "SHL"
    },
    "14941": {
      "op": "SUB"
    },
    "14942": {
      "op": "DUP1"
    },
    "14943": {
      "op": "DUP3"
    },
    "14944": {
      "op": "MLOAD"
    },
    "14945": {
      "op": "AND"
    },
    "14946": {
      "op": "DUP4"
    },
    "14947": {
      "op": "MSTORE"
    },
    "14948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14950": {
      "op": "DUP3"
    },
    "14951": {
      "op": "ADD"
    },
    "14952": {
      "op": "MLOAD"
    },
    "14953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14955": {
      "op": "DUP5"
    },
    "14956": {
      "op": "ADD"
    },
    "14957": {
      "op": "MSTORE"
    },
    "14958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14960": {
      "op": "DUP3"
    },
    "14961": {
      "op": "ADD"
    },
    "14962": {
      "op": "MLOAD"
    },
    "14963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14965": {
      "op": "DUP5"
    },
    "14966": {
      "op": "ADD"
    },
    "14967": {
      "op": "MSTORE"
    },
    "14968": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14970": {
      "op": "DUP3"
    },
    "14971": {
      "op": "ADD"
    },
    "14972": {
      "op": "MLOAD"
    },
    "14973": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14975": {
      "op": "DUP5"
    },
    "14976": {
      "op": "ADD"
    },
    "14977": {
      "op": "MSTORE"
    },
    "14978": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x80"
    },
    "14980": {
      "op": "DUP3"
    },
    "14981": {
      "op": "ADD"
    },
    "14982": {
      "op": "MLOAD"
    },
    "14983": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14985": {
      "op": "DUP5"
    },
    "14986": {
      "op": "ADD"
    },
    "14987": {
      "op": "MSTORE"
    },
    "14988": {
      "op": "DUP1"
    },
    "14989": {
      "jump": "o",
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14991": {
      "op": "DUP4"
    },
    "14992": {
      "op": "ADD"
    },
    "14993": {
      "op": "MLOAD"
    },
    "14994": {
      "op": "AND"
    },
    "14995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14997": {
      "op": "DUP5"
    },
    "14998": {
      "op": "ADD"
    },
    "14999": {
      "op": "MSTORE"
    },
    "15000": {
      "op": "POP"
    },
    "15001": {
      "op": "POP"
    },
    "15002": {
      "op": "POP"
    },
    "15003": {
      "op": "JUMP"
    },
    "15004": {
      "op": "JUMPDEST"
    },
    "15005": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15009": {
      "op": "DUP3"
    },
    "15010": {
      "op": "ADD"
    },
    "15011": {
      "op": "MSTORE"
    },
    "15012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15014": {
      "op": "PUSH3",
      "value": "0x3AB5"
    },
    "15018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15020": {
      "op": "DUP4"
    },
    "15021": {
      "op": "ADD"
    },
    "15022": {
      "op": "DUP5"
    },
    "15023": {
      "op": "DUP7"
    },
    "15024": {
      "op": "PUSH3",
      "value": "0x377E"
    },
    "15028": {
      "op": "JUMP"
    },
    "15029": {
      "op": "JUMPDEST"
    },
    "15030": {
      "op": "SWAP6"
    },
    "15031": {
      "op": "SWAP5"
    },
    "15032": {
      "op": "POP"
    },
    "15033": {
      "op": "POP"
    },
    "15034": {
      "op": "POP"
    },
    "15035": {
      "op": "POP"
    },
    "15036": {
      "op": "POP"
    },
    "15037": {
      "op": "JUMP"
    },
    "15038": {
      "op": "JUMPDEST"
    },
    "15039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15041": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15044": {
      "op": "PUSH3",
      "value": "0x3B10"
    },
    "15048": {
      "op": "DUP4"
    },
    "15049": {
      "op": "DUP12"
    },
    "15050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15056": {
      "op": "SHL"
    },
    "15057": {
      "op": "SUB"
    },
    "15058": {
      "op": "DUP1"
    },
    "15059": {
      "op": "DUP3"
    },
    "15060": {
      "op": "MLOAD"
    },
    "15061": {
      "op": "AND"
    },
    "15062": {
      "op": "DUP4"
    },
    "15063": {
      "op": "MSTORE"
    },
    "15064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15066": {
      "op": "DUP3"
    },
    "15067": {
      "op": "ADD"
    },
    "15068": {
      "op": "MLOAD"
    },
    "15069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15071": {
      "op": "DUP5"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "MSTORE"
    },
    "15074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15076": {
      "op": "DUP3"
    },
    "15077": {
      "op": "ADD"
    },
    "15078": {
      "op": "MLOAD"
    },
    "15079": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15081": {
      "op": "DUP5"
    },
    "15082": {
      "op": "ADD"
    },
    "15083": {
      "op": "MSTORE"
    },
    "15084": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15086": {
      "op": "DUP3"
    },
    "15087": {
      "op": "ADD"
    },
    "15088": {
      "op": "MLOAD"
    },
    "15089": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15091": {
      "op": "DUP5"
    },
    "15092": {
      "op": "ADD"
    },
    "15093": {
      "op": "MSTORE"
    },
    "15094": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x80"
    },
    "15096": {
      "op": "DUP3"
    },
    "15097": {
      "op": "ADD"
    },
    "15098": {
      "op": "MLOAD"
    },
    "15099": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15101": {
      "op": "DUP5"
    },
    "15102": {
      "op": "ADD"
    },
    "15103": {
      "op": "MSTORE"
    },
    "15104": {
      "op": "DUP1"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15107": {
      "op": "DUP4"
    },
    "15108": {
      "op": "ADD"
    },
    "15109": {
      "op": "MLOAD"
    },
    "15110": {
      "op": "AND"
    },
    "15111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15113": {
      "op": "DUP5"
    },
    "15114": {
      "jump": "i",
      "op": "ADD"
    },
    "15115": {
      "op": "MSTORE"
    },
    "15116": {
      "op": "POP"
    },
    "15117": {
      "op": "POP"
    },
    "15118": {
      "op": "POP"
    },
    "15119": {
      "op": "JUMP"
    },
    "15120": {
      "op": "JUMPDEST"
    },
    "15121": {
      "op": "DUP1"
    },
    "15122": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15124": {
      "op": "DUP5"
    },
    "15125": {
      "op": "ADD"
    },
    "15126": {
      "op": "MSTORE"
    },
    "15127": {
      "op": "PUSH3",
      "value": "0x3B25"
    },
    "15131": {
      "op": "DUP2"
    },
    "15132": {
      "op": "DUP5"
    },
    "15133": {
      "op": "ADD"
    },
    "15134": {
      "jump": "i",
      "op": "DUP10"
    },
    "15135": {
      "op": "DUP12"
    },
    "15136": {
      "op": "PUSH3",
      "value": "0x377E"
    },
    "15140": {
      "op": "JUMP"
    },
    "15141": {
      "op": "JUMPDEST"
    },
    "15142": {
      "op": "SWAP1"
    },
    "15143": {
      "op": "POP"
    },
    "15144": {
      "op": "DUP3"
    },
    "15145": {
      "op": "DUP2"
    },
    "15146": {
      "op": "SUB"
    },
    "15147": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15149": {
      "op": "DUP5"
    },
    "15150": {
      "op": "ADD"
    },
    "15151": {
      "op": "MSTORE"
    },
    "15152": {
      "op": "PUSH3",
      "value": "0x3B3C"
    },
    "15156": {
      "op": "DUP2"
    },
    "15157": {
      "op": "DUP8"
    },
    "15158": {
      "op": "DUP10"
    },
    "15159": {
      "op": "PUSH3",
      "value": "0x37D6"
    },
    "15163": {
      "op": "JUMP"
    },
    "15164": {
      "op": "JUMPDEST"
    },
    "15165": {
      "op": "SWAP1"
    },
    "15166": {
      "op": "POP"
    },
    "15167": {
      "op": "DUP3"
    },
    "15168": {
      "op": "DUP2"
    },
    "15169": {
      "op": "SUB"
    },
    "15170": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15173": {
      "op": "DUP5"
    },
    "15174": {
      "op": "ADD"
    },
    "15175": {
      "op": "MSTORE"
    },
    "15176": {
      "op": "PUSH3",
      "value": "0x3A41"
    },
    "15180": {
      "op": "DUP2"
    },
    "15181": {
      "op": "DUP6"
    },
    "15182": {
      "op": "DUP8"
    },
    "15183": {
      "op": "PUSH3",
      "value": "0x3832"
    },
    "15187": {
      "op": "JUMP"
    },
    "15188": {
      "op": "JUMPDEST"
    },
    "15189": {
      "op": "PUSH3",
      "value": "0x3BA1"
    },
    "15193": {
      "op": "DUP2"
    },
    "15194": {
      "op": "DUP6"
    },
    "15195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15201": {
      "op": "SHL"
    },
    "15202": {
      "op": "SUB"
    },
    "15203": {
      "op": "DUP1"
    },
    "15204": {
      "op": "DUP3"
    },
    "15205": {
      "op": "MLOAD"
    },
    "15206": {
      "op": "AND"
    },
    "15207": {
      "op": "DUP4"
    },
    "15208": {
      "op": "MSTORE"
    },
    "15209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15211": {
      "op": "DUP3"
    },
    "15212": {
      "op": "ADD"
    },
    "15213": {
      "op": "MLOAD"
    },
    "15214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15216": {
      "op": "DUP5"
    },
    "15217": {
      "op": "ADD"
    },
    "15218": {
      "op": "MSTORE"
    },
    "15219": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15221": {
      "op": "DUP3"
    },
    "15222": {
      "op": "ADD"
    },
    "15223": {
      "op": "MLOAD"
    },
    "15224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15226": {
      "op": "DUP5"
    },
    "15227": {
      "op": "ADD"
    },
    "15228": {
      "op": "MSTORE"
    },
    "15229": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15231": {
      "op": "DUP3"
    },
    "15232": {
      "op": "ADD"
    },
    "15233": {
      "op": "MLOAD"
    },
    "15234": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15236": {
      "op": "DUP5"
    },
    "15237": {
      "op": "ADD"
    },
    "15238": {
      "op": "MSTORE"
    },
    "15239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15241": {
      "op": "DUP3"
    },
    "15242": {
      "op": "ADD"
    },
    "15243": {
      "jump": "i",
      "op": "MLOAD"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15246": {
      "op": "DUP5"
    },
    "15247": {
      "op": "ADD"
    },
    "15248": {
      "op": "MSTORE"
    },
    "15249": {
      "op": "DUP1"
    },
    "15250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15252": {
      "op": "DUP4"
    },
    "15253": {
      "op": "ADD"
    },
    "15254": {
      "op": "MLOAD"
    },
    "15255": {
      "op": "AND"
    },
    "15256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15258": {
      "op": "DUP5"
    },
    "15259": {
      "op": "ADD"
    },
    "15260": {
      "op": "MSTORE"
    },
    "15261": {
      "op": "POP"
    },
    "15262": {
      "op": "POP"
    },
    "15263": {
      "op": "POP"
    },
    "15264": {
      "op": "JUMP"
    },
    "15265": {
      "op": "JUMPDEST"
    },
    "15266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15268": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15270": {
      "op": "DUP3"
    },
    "15271": {
      "op": "ADD"
    },
    "15272": {
      "op": "MSTORE"
    },
    "15273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15275": {
      "op": "PUSH3",
      "value": "0x3AB5"
    },
    "15279": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15281": {
      "op": "DUP4"
    },
    "15282": {
      "op": "ADD"
    },
    "15283": {
      "op": "DUP5"
    },
    "15284": {
      "op": "DUP7"
    },
    "15285": {
      "op": "PUSH3",
      "value": "0x37D6"
    },
    "15289": {
      "op": "JUMP"
    },
    "15290": {
      "op": "JUMPDEST"
    },
    "15291": {
      "op": "PUSH3",
      "value": "0x3C07"
    },
    "15295": {
      "op": "DUP2"
    },
    "15296": {
      "op": "DUP6"
    },
    "15297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15303": {
      "op": "SHL"
    },
    "15304": {
      "op": "SUB"
    },
    "15305": {
      "op": "DUP1"
    },
    "15306": {
      "op": "DUP3"
    },
    "15307": {
      "op": "MLOAD"
    },
    "15308": {
      "op": "AND"
    },
    "15309": {
      "op": "DUP4"
    },
    "15310": {
      "op": "MSTORE"
    },
    "15311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15313": {
      "op": "DUP3"
    },
    "15314": {
      "op": "ADD"
    },
    "15315": {
      "op": "MLOAD"
    },
    "15316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15318": {
      "op": "DUP5"
    },
    "15319": {
      "op": "ADD"
    },
    "15320": {
      "op": "MSTORE"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15323": {
      "op": "DUP3"
    },
    "15324": {
      "op": "ADD"
    },
    "15325": {
      "op": "MLOAD"
    },
    "15326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15328": {
      "op": "DUP5"
    },
    "15329": {
      "op": "ADD"
    },
    "15330": {
      "op": "MSTORE"
    },
    "15331": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15333": {
      "op": "DUP3"
    },
    "15334": {
      "op": "ADD"
    },
    "15335": {
      "op": "MLOAD"
    },
    "15336": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15338": {
      "op": "DUP5"
    },
    "15339": {
      "op": "ADD"
    },
    "15340": {
      "op": "MSTORE"
    },
    "15341": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15343": {
      "op": "DUP3"
    },
    "15344": {
      "op": "ADD"
    },
    "15345": {
      "op": "MLOAD"
    },
    "15346": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15348": {
      "jump": "i",
      "op": "DUP5"
    },
    "15349": {
      "op": "ADD"
    },
    "15350": {
      "op": "MSTORE"
    },
    "15351": {
      "op": "DUP1"
    },
    "15352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15354": {
      "op": "DUP4"
    },
    "15355": {
      "op": "ADD"
    },
    "15356": {
      "op": "MLOAD"
    },
    "15357": {
      "op": "AND"
    },
    "15358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15360": {
      "op": "DUP5"
    },
    "15361": {
      "op": "ADD"
    },
    "15362": {
      "op": "MSTORE"
    },
    "15363": {
      "op": "POP"
    },
    "15364": {
      "op": "POP"
    },
    "15365": {
      "op": "POP"
    },
    "15366": {
      "op": "JUMP"
    },
    "15367": {
      "op": "JUMPDEST"
    },
    "15368": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15370": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15372": {
      "op": "DUP3"
    },
    "15373": {
      "op": "ADD"
    },
    "15374": {
      "op": "MSTORE"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15377": {
      "op": "PUSH3",
      "value": "0x3AB5"
    },
    "15381": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15383": {
      "op": "DUP4"
    },
    "15384": {
      "op": "ADD"
    },
    "15385": {
      "op": "DUP5"
    },
    "15386": {
      "op": "DUP7"
    },
    "15387": {
      "op": "PUSH3",
      "value": "0x3832"
    },
    "15391": {
      "op": "JUMP"
    },
    "15392": {
      "op": "JUMPDEST"
    },
    "15393": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15395": {
      "op": "DUP2"
    },
    "15396": {
      "op": "ADD"
    },
    "15397": {
      "op": "PUSH3",
      "value": "0x3C71"
    },
    "15401": {
      "op": "DUP3"
    },
    "15402": {
      "op": "DUP6"
    },
    "15403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15409": {
      "op": "SHL"
    },
    "15410": {
      "op": "SUB"
    },
    "15411": {
      "op": "DUP1"
    },
    "15412": {
      "op": "DUP3"
    },
    "15413": {
      "op": "MLOAD"
    },
    "15414": {
      "op": "AND"
    },
    "15415": {
      "op": "DUP4"
    },
    "15416": {
      "op": "MSTORE"
    },
    "15417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15419": {
      "op": "DUP3"
    },
    "15420": {
      "op": "ADD"
    },
    "15421": {
      "op": "MLOAD"
    },
    "15422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15424": {
      "op": "DUP5"
    },
    "15425": {
      "op": "ADD"
    },
    "15426": {
      "op": "MSTORE"
    },
    "15427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15429": {
      "op": "DUP3"
    },
    "15430": {
      "op": "ADD"
    },
    "15431": {
      "op": "MLOAD"
    },
    "15432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15434": {
      "op": "DUP5"
    },
    "15435": {
      "op": "ADD"
    },
    "15436": {
      "op": "MSTORE"
    },
    "15437": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15439": {
      "op": "DUP3"
    },
    "15440": {
      "op": "ADD"
    },
    "15441": {
      "op": "MLOAD"
    },
    "15442": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15444": {
      "jump": "i",
      "op": "DUP5"
    },
    "15445": {
      "op": "ADD"
    },
    "15446": {
      "op": "MSTORE"
    },
    "15447": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15449": {
      "op": "DUP3"
    },
    "15450": {
      "op": "ADD"
    },
    "15451": {
      "op": "MLOAD"
    },
    "15452": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15454": {
      "op": "DUP5"
    },
    "15455": {
      "op": "ADD"
    },
    "15456": {
      "op": "MSTORE"
    },
    "15457": {
      "op": "DUP1"
    },
    "15458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15460": {
      "op": "DUP4"
    },
    "15461": {
      "op": "ADD"
    },
    "15462": {
      "op": "MLOAD"
    },
    "15463": {
      "op": "AND"
    },
    "15464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15466": {
      "op": "DUP5"
    },
    "15467": {
      "op": "ADD"
    },
    "15468": {
      "op": "MSTORE"
    },
    "15469": {
      "op": "POP"
    },
    "15470": {
      "op": "POP"
    },
    "15471": {
      "op": "POP"
    },
    "15472": {
      "op": "JUMP"
    },
    "15473": {
      "op": "JUMPDEST"
    },
    "15474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15480": {
      "op": "SHL"
    },
    "15481": {
      "op": "SUB"
    },
    "15482": {
      "op": "DUP4"
    },
    "15483": {
      "op": "AND"
    },
    "15484": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15486": {
      "op": "DUP4"
    },
    "15487": {
      "op": "ADD"
    },
    "15488": {
      "op": "MSTORE"
    },
    "15489": {
      "op": "SWAP4"
    },
    "15490": {
      "op": "SWAP3"
    },
    "15491": {
      "op": "POP"
    },
    "15492": {
      "op": "POP"
    },
    "15493": {
      "op": "POP"
    },
    "15494": {
      "op": "JUMP"
    },
    "15495": {
      "op": "JUMPDEST"
    },
    "15496": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15499": {
      "op": "DUP2"
    },
    "15500": {
      "op": "ADD"
    },
    "15501": {
      "op": "PUSH3",
      "value": "0x3CD9"
    },
    "15505": {
      "op": "DUP3"
    },
    "15506": {
      "op": "DUP6"
    },
    "15507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15513": {
      "op": "SHL"
    },
    "15514": {
      "op": "SUB"
    },
    "15515": {
      "op": "DUP1"
    },
    "15516": {
      "op": "DUP3"
    },
    "15517": {
      "op": "MLOAD"
    },
    "15518": {
      "op": "AND"
    },
    "15519": {
      "op": "DUP4"
    },
    "15520": {
      "op": "MSTORE"
    },
    "15521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15523": {
      "op": "DUP3"
    },
    "15524": {
      "op": "ADD"
    },
    "15525": {
      "op": "MLOAD"
    },
    "15526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15528": {
      "op": "DUP5"
    },
    "15529": {
      "op": "ADD"
    },
    "15530": {
      "op": "MSTORE"
    },
    "15531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15533": {
      "jump": "i",
      "op": "DUP3"
    },
    "15534": {
      "op": "ADD"
    },
    "15535": {
      "op": "MLOAD"
    },
    "15536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15538": {
      "op": "DUP5"
    },
    "15539": {
      "op": "ADD"
    },
    "15540": {
      "op": "MSTORE"
    },
    "15541": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15543": {
      "op": "DUP3"
    },
    "15544": {
      "op": "ADD"
    },
    "15545": {
      "op": "MLOAD"
    },
    "15546": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15548": {
      "op": "DUP5"
    },
    "15549": {
      "op": "ADD"
    },
    "15550": {
      "op": "MSTORE"
    },
    "15551": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15553": {
      "op": "DUP3"
    },
    "15554": {
      "op": "ADD"
    },
    "15555": {
      "op": "MLOAD"
    },
    "15556": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15558": {
      "op": "DUP5"
    },
    "15559": {
      "jump": "i",
      "op": "ADD"
    },
    "15560": {
      "op": "MSTORE"
    },
    "15561": {
      "op": "DUP1"
    },
    "15562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15564": {
      "op": "DUP4"
    },
    "15565": {
      "op": "ADD"
    },
    "15566": {
      "op": "MLOAD"
    },
    "15567": {
      "op": "AND"
    },
    "15568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15570": {
      "op": "DUP5"
    },
    "15571": {
      "op": "ADD"
    },
    "15572": {
      "op": "MSTORE"
    },
    "15573": {
      "op": "POP"
    },
    "15574": {
      "op": "POP"
    },
    "15575": {
      "op": "POP"
    },
    "15576": {
      "op": "JUMP"
    },
    "15577": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "15578": {
      "op": "PUSH3",
      "value": "0x2D53"
    },
    "15582": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15584": {
      "op": "DUP4"
    },
    "15585": {
      "op": "ADD"
    },
    "15586": {
      "op": "DUP5"
    },
    "15587": {
      "op": "PUSH3",
      "value": "0x38CB"
    },
    "15591": {
      "op": "JUMP"
    },
    "15592": {
      "op": "JUMPDEST"
    },
    "15593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15595": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "15598": {
      "op": "PUSH3",
      "value": "0x3D3A"
    },
    "15602": {
      "op": "DUP4"
    },
    "15603": {
      "op": "DUP12"
    },
    "15604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15610": {
      "op": "SHL"
    },
    "15611": {
      "op": "SUB"
    },
    "15612": {
      "op": "DUP1"
    },
    "15613": {
      "jump": "i",
      "op": "DUP3"
    },
    "15614": {
      "op": "MLOAD"
    },
    "15615": {
      "op": "AND"
    },
    "15616": {
      "op": "DUP4"
    },
    "15617": {
      "op": "MSTORE"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15620": {
      "op": "DUP3"
    },
    "15621": {
      "op": "ADD"
    },
    "15622": {
      "op": "MLOAD"
    },
    "15623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15625": {
      "op": "DUP5"
    },
    "15626": {
      "op": "ADD"
    },
    "15627": {
      "op": "MSTORE"
    },
    "15628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15630": {
      "jump": "i",
      "op": "DUP3"
    },
    "15631": {
      "op": "ADD"
    },
    "15632": {
      "op": "MLOAD"
    },
    "15633": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15635": {
      "op": "DUP5"
    },
    "15636": {
      "op": "ADD"
    },
    "15637": {
      "op": "MSTORE"
    },
    "15638": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15640": {
      "op": "DUP3"
    },
    "15641": {
      "op": "ADD"
    },
    "15642": {
      "op": "MLOAD"
    },
    "15643": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15645": {
      "jump": "o",
      "op": "DUP5"
    },
    "15646": {
      "op": "ADD"
    },
    "15647": {
      "op": "MSTORE"
    },
    "15648": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15650": {
      "op": "DUP3"
    },
    "15651": {
      "op": "ADD"
    },
    "15652": {
      "op": "MLOAD"
    },
    "15653": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15655": {
      "op": "DUP5"
    },
    "15656": {
      "op": "ADD"
    },
    "15657": {
      "op": "MSTORE"
    },
    "15658": {
      "op": "DUP1"
    },
    "15659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15661": {
      "op": "DUP4"
    },
    "15662": {
      "op": "ADD"
    },
    "15663": {
      "op": "MLOAD"
    },
    "15664": {
      "op": "AND"
    },
    "15665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15667": {
      "op": "DUP5"
    },
    "15668": {
      "op": "ADD"
    },
    "15669": {
      "jump": "i",
      "op": "MSTORE"
    },
    "15670": {
      "op": "POP"
    },
    "15671": {
      "op": "POP"
    },
    "15672": {
      "op": "POP"
    },
    "15673": {
      "op": "JUMP"
    },
    "15674": {
      "op": "JUMPDEST"
    },
    "15675": {
      "op": "PUSH3",
      "value": "0x3D49"
    },
    "15679": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15681": {
      "op": "DUP5"
    },
    "15682": {
      "op": "ADD"
    },
    "15683": {
      "op": "DUP11"
    },
    "15684": {
      "op": "PUSH3",
      "value": "0x38CB"
    },
    "15688": {
      "op": "JUMP"
    },
    "15689": {
      "op": "JUMPDEST"
    },
    "15690": {
      "jump": "i",
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15695": {
      "op": "DUP9"
    },
    "15696": {
      "op": "AND"
    },
    "15697": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15700": {
      "op": "DUP5"
    },
    "15701": {
      "op": "ADD"
    },
    "15702": {
      "op": "MSTORE"
    },
    "15703": {
      "op": "DUP1"
    },
    "15704": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15707": {
      "op": "DUP5"
    },
    "15708": {
      "op": "ADD"
    },
    "15709": {
      "op": "MSTORE"
    },
    "15710": {
      "op": "PUSH3",
      "value": "0x3D6C"
    },
    "15714": {
      "op": "DUP2"
    },
    "15715": {
      "op": "DUP5"
    },
    "15716": {
      "op": "ADD"
    },
    "15717": {
      "op": "DUP8"
    },
    "15718": {
      "op": "DUP10"
    },
    "15719": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "15723": {
      "op": "JUMP"
    },
    "15724": {
      "op": "JUMPDEST"
    },
    "15725": {
      "op": "SWAP1"
    },
    "15726": {
      "op": "POP"
    },
    "15727": {
      "op": "DUP3"
    },
    "15728": {
      "op": "DUP2"
    },
    "15729": {
      "op": "SUB"
    },
    "15730": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "15733": {
      "jump": "o",
      "op": "DUP5"
    },
    "15734": {
      "op": "ADD"
    },
    "15735": {
      "op": "MSTORE"
    },
    "15736": {
      "op": "PUSH3",
      "value": "0x3A41"
    },
    "15740": {
      "op": "DUP2"
    },
    "15741": {
      "op": "DUP6"
    },
    "15742": {
      "op": "DUP8"
    },
    "15743": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "15747": {
      "op": "JUMP"
    },
    "15748": {
      "op": "JUMPDEST"
    },
    "15749": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15754": {
      "op": "DUP7"
    },
    "15755": {
      "op": "AND"
    },
    "15756": {
      "op": "DUP2"
    },
    "15757": {
      "op": "MSTORE"
    },
    "15758": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15762": {
      "op": "DUP3"
    },
    "15763": {
      "op": "ADD"
    },
    "15764": {
      "jump": "i",
      "op": "MSTORE"
    },
    "15765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15767": {
      "op": "PUSH3",
      "value": "0x3DA6"
    },
    "15771": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15773": {
      "op": "DUP4"
    },
    "15774": {
      "op": "ADD"
    },
    "15775": {
      "op": "DUP7"
    },
    "15776": {
      "op": "DUP9"
    },
    "15777": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "15781": {
      "op": "JUMP"
    },
    "15782": {
      "op": "JUMPDEST"
    },
    "15783": {
      "op": "DUP3"
    },
    "15784": {
      "op": "DUP2"
    },
    "15785": {
      "jump": "i",
      "op": "SUB"
    },
    "15786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15788": {
      "op": "DUP5"
    },
    "15789": {
      "op": "ADD"
    },
    "15790": {
      "op": "MSTORE"
    },
    "15791": {
      "op": "PUSH3",
      "value": "0x3DBB"
    },
    "15795": {
      "op": "DUP2"
    },
    "15796": {
      "op": "DUP6"
    },
    "15797": {
      "op": "DUP8"
    },
    "15798": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "15802": {
      "op": "JUMP"
    },
    "15803": {
      "op": "JUMPDEST"
    },
    "15804": {
      "op": "SWAP9"
    },
    "15805": {
      "op": "SWAP8"
    },
    "15806": {
      "op": "POP"
    },
    "15807": {
      "op": "POP"
    },
    "15808": {
      "op": "POP"
    },
    "15809": {
      "op": "POP"
    },
    "15810": {
      "op": "POP"
    },
    "15811": {
      "op": "POP"
    },
    "15812": {
      "op": "POP"
    },
    "15813": {
      "op": "POP"
    },
    "15814": {
      "op": "JUMP"
    },
    "15815": {
      "op": "JUMPDEST"
    },
    "15816": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15821": {
      "jump": "o",
      "op": "DUP9"
    },
    "15822": {
      "op": "AND"
    },
    "15823": {
      "op": "DUP2"
    },
    "15824": {
      "op": "MSTORE"
    },
    "15825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15829": {
      "op": "DUP3"
    },
    "15830": {
      "op": "ADD"
    },
    "15831": {
      "op": "MSTORE"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15834": {
      "op": "PUSH3",
      "value": "0x3DE9"
    },
    "15838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15840": {
      "op": "DUP4"
    },
    "15841": {
      "op": "ADD"
    },
    "15842": {
      "op": "DUP9"
    },
    "15843": {
      "op": "DUP11"
    },
    "15844": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "15848": {
      "op": "JUMP"
    },
    "15849": {
      "op": "JUMPDEST"
    },
    "15850": {
      "op": "DUP3"
    },
    "15851": {
      "jump": "i",
      "op": "DUP2"
    },
    "15852": {
      "op": "SUB"
    },
    "15853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15855": {
      "op": "DUP5"
    },
    "15856": {
      "op": "ADD"
    },
    "15857": {
      "op": "MSTORE"
    },
    "15858": {
      "op": "PUSH3",
      "value": "0x3DFE"
    },
    "15862": {
      "op": "DUP2"
    },
    "15863": {
      "op": "DUP8"
    },
    "15864": {
      "op": "DUP10"
    },
    "15865": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "15869": {
      "op": "JUMP"
    },
    "15870": {
      "op": "JUMPDEST"
    },
    "15871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15875": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15877": {
      "op": "SHL"
    },
    "15878": {
      "op": "SUB"
    },
    "15879": {
      "op": "SWAP6"
    },
    "15880": {
      "op": "SWAP1"
    },
    "15881": {
      "op": "SWAP6"
    },
    "15882": {
      "op": "AND"
    },
    "15883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15885": {
      "op": "DUP5"
    },
    "15886": {
      "op": "ADD"
    },
    "15887": {
      "op": "MSTORE"
    },
    "15888": {
      "op": "POP"
    },
    "15889": {
      "op": "POP"
    },
    "15890": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15892": {
      "op": "ADD"
    },
    "15893": {
      "op": "MSTORE"
    },
    "15894": {
      "op": "SWAP6"
    },
    "15895": {
      "op": "SWAP5"
    },
    "15896": {
      "op": "POP"
    },
    "15897": {
      "op": "POP"
    },
    "15898": {
      "op": "POP"
    },
    "15899": {
      "op": "POP"
    },
    "15900": {
      "op": "POP"
    },
    "15901": {
      "op": "JUMP"
    },
    "15902": {
      "op": "JUMPDEST"
    },
    "15903": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15908": {
      "op": "DUP7"
    },
    "15909": {
      "op": "AND"
    },
    "15910": {
      "op": "DUP2"
    },
    "15911": {
      "op": "MSTORE"
    },
    "15912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15916": {
      "op": "DUP3"
    },
    "15917": {
      "op": "ADD"
    },
    "15918": {
      "op": "MSTORE"
    },
    "15919": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x0"
    },
    "15921": {
      "op": "PUSH3",
      "value": "0x3E3F"
    },
    "15925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15927": {
      "op": "DUP4"
    },
    "15928": {
      "op": "ADD"
    },
    "15929": {
      "op": "DUP8"
    },
    "15930": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "15934": {
      "op": "JUMP"
    },
    "15935": {
      "op": "JUMPDEST"
    },
    "15936": {
      "op": "DUP3"
    },
    "15937": {
      "op": "DUP2"
    },
    "15938": {
      "op": "SUB"
    },
    "15939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15941": {
      "op": "DUP5"
    },
    "15942": {
      "op": "ADD"
    },
    "15943": {
      "op": "MSTORE"
    },
    "15944": {
      "op": "PUSH3",
      "value": "0x3E53"
    },
    "15948": {
      "op": "DUP2"
    },
    "15949": {
      "op": "DUP8"
    },
    "15950": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "15954": {
      "op": "JUMP"
    },
    "15955": {
      "op": "JUMPDEST"
    },
    "15956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15962": {
      "op": "SHL"
    },
    "15963": {
      "op": "SUB"
    },
    "15964": {
      "op": "SWAP6"
    },
    "15965": {
      "op": "SWAP1"
    },
    "15966": {
      "op": "SWAP6"
    },
    "15967": {
      "jump": "o",
      "op": "AND"
    },
    "15968": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15970": {
      "op": "DUP5"
    },
    "15971": {
      "op": "ADD"
    },
    "15972": {
      "op": "MSTORE"
    },
    "15973": {
      "op": "POP"
    },
    "15974": {
      "op": "POP"
    },
    "15975": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15977": {
      "op": "ADD"
    },
    "15978": {
      "op": "MSTORE"
    },
    "15979": {
      "op": "SWAP4"
    },
    "15980": {
      "op": "SWAP3"
    },
    "15981": {
      "op": "POP"
    },
    "15982": {
      "op": "POP"
    },
    "15983": {
      "op": "POP"
    },
    "15984": {
      "op": "JUMP"
    },
    "15985": {
      "op": "JUMPDEST"
    },
    "15986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15988": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15991": {
      "jump": "i",
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15996": {
      "op": "DUP13"
    },
    "15997": {
      "op": "AND"
    },
    "15998": {
      "op": "DUP4"
    },
    "15999": {
      "op": "MSTORE"
    },
    "16000": {
      "op": "DUP1"
    },
    "16001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16003": {
      "op": "DUP5"
    },
    "16004": {
      "op": "ADD"
    },
    "16005": {
      "op": "MSTORE"
    },
    "16006": {
      "op": "PUSH3",
      "value": "0x3E93"
    },
    "16010": {
      "op": "DUP2"
    },
    "16011": {
      "op": "DUP5"
    },
    "16012": {
      "jump": "i",
      "op": "ADD"
    },
    "16013": {
      "op": "DUP13"
    },
    "16014": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "16018": {
      "op": "JUMP"
    },
    "16019": {
      "op": "JUMPDEST"
    },
    "16020": {
      "op": "SWAP1"
    },
    "16021": {
      "op": "POP"
    },
    "16022": {
      "op": "DUP3"
    },
    "16023": {
      "op": "DUP2"
    },
    "16024": {
      "op": "SUB"
    },
    "16025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16027": {
      "op": "DUP5"
    },
    "16028": {
      "op": "ADD"
    },
    "16029": {
      "op": "MSTORE"
    },
    "16030": {
      "op": "PUSH3",
      "value": "0x3EA9"
    },
    "16034": {
      "op": "DUP2"
    },
    "16035": {
      "op": "DUP12"
    },
    "16036": {
      "jump": "o",
      "op": "PUSH3",
      "value": "0x389D"
    },
    "16040": {
      "op": "JUMP"
    },
    "16041": {
      "op": "JUMPDEST"
    },
    "16042": {
      "op": "SWAP1"
    },
    "16043": {
      "op": "POP"
    },
    "16044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16050": {
      "op": "SHL"
    },
    "16051": {
      "op": "SUB"
    },
    "16052": {
      "op": "DUP1"
    },
    "16053": {
      "op": "DUP11"
    },
    "16054": {
      "op": "AND"
    },
    "16055": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16057": {
      "op": "DUP6"
    },
    "16058": {
      "op": "ADD"
    },
    "16059": {
      "op": "MSTORE"
    },
    "16060": {
      "op": "DUP9"
    },
    "16061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16063": {
      "jump": "i",
      "op": "DUP6"
    },
    "16064": {
      "op": "ADD"
    },
    "16065": {
      "op": "MSTORE"
    },
    "16066": {
      "op": "DUP4"
    },
    "16067": {
      "op": "DUP3"
    },
    "16068": {
      "op": "SUB"
    },
    "16069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16071": {
      "op": "DUP6"
    },
    "16072": {
      "op": "ADD"
    },
    "16073": {
      "op": "MSTORE"
    },
    "16074": {
      "op": "PUSH3",
      "value": "0x3ED6"
    },
    "16078": {
      "op": "DUP3"
    },
    "16079": {
      "op": "DUP9"
    },
    "16080": {
      "jump": "i",
      "op": "DUP11"
    },
    "16081": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "16085": {
      "op": "JUMP"
    },
    "16086": {
      "op": "JUMPDEST"
    },
    "16087": {
      "op": "SWAP3"
    },
    "16088": {
      "op": "POP"
    },
    "16089": {
      "op": "DUP6"
    },
    "16090": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16092": {
      "op": "DUP6"
    },
    "16093": {
      "op": "ADD"
    },
    "16094": {
      "op": "MSTORE"
    },
    "16095": {
      "op": "DUP1"
    },
    "16096": {
      "op": "DUP6"
    },
    "16097": {
      "op": "AND"
    },
    "16098": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16100": {
      "op": "DUP6"
    },
    "16101": {
      "op": "ADD"
    },
    "16102": {
      "op": "MSTORE"
    },
    "16103": {
      "op": "POP"
    },
    "16104": {
      "op": "POP"
    },
    "16105": {
      "op": "SWAP11"
    },
    "16106": {
      "jump": "i",
      "op": "SWAP10"
    },
    "16107": {
      "op": "POP"
    },
    "16108": {
      "op": "POP"
    },
    "16109": {
      "op": "POP"
    },
    "16110": {
      "op": "POP"
    },
    "16111": {
      "op": "POP"
    },
    "16112": {
      "op": "POP"
    },
    "16113": {
      "op": "POP"
    },
    "16114": {
      "op": "POP"
    },
    "16115": {
      "op": "POP"
    },
    "16116": {
      "op": "POP"
    },
    "16117": {
      "op": "JUMP"
    },
    "16118": {
      "op": "JUMPDEST"
    },
    "16119": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "16124": {
      "op": "DUP6"
    },
    "16125": {
      "op": "AND"
    },
    "16126": {
      "op": "DUP2"
    },
    "16127": {
      "op": "MSTORE"
    },
    "16128": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16132": {
      "op": "DUP3"
    },
    "16133": {
      "op": "ADD"
    },
    "16134": {
      "op": "MSTORE"
    },
    "16135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16137": {
      "op": "PUSH3",
      "value": "0x3F17"
    },
    "16141": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16143": {
      "op": "DUP4"
    },
    "16144": {
      "op": "ADD"
    },
    "16145": {
      "op": "DUP7"
    },
    "16146": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "16150": {
      "op": "JUMP"
    },
    "16151": {
      "op": "JUMPDEST"
    },
    "16152": {
      "op": "DUP3"
    },
    "16153": {
      "jump": "o",
      "op": "DUP2"
    },
    "16154": {
      "op": "SUB"
    },
    "16155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16157": {
      "op": "DUP5"
    },
    "16158": {
      "op": "ADD"
    },
    "16159": {
      "op": "MSTORE"
    },
    "16160": {
      "op": "PUSH3",
      "value": "0x3F2B"
    },
    "16164": {
      "op": "DUP2"
    },
    "16165": {
      "op": "DUP7"
    },
    "16166": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "16170": {
      "op": "JUMP"
    },
    "16171": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "16172": {
      "op": "SWAP2"
    },
    "16173": {
      "op": "POP"
    },
    "16174": {
      "op": "POP"
    },
    "16175": {
      "op": "DUP3"
    },
    "16176": {
      "jump": "o",
      "op": "PUSH1",
      "value": "0x60"
    },
    "16178": {
      "op": "DUP4"
    },
    "16179": {
      "op": "ADD"
    },
    "16180": {
      "op": "MSTORE"
    },
    "16181": {
      "op": "SWAP6"
    },
    "16182": {
      "op": "SWAP5"
    },
    "16183": {
      "op": "POP"
    },
    "16184": {
      "op": "POP"
    },
    "16185": {
      "op": "POP"
    },
    "16186": {
      "op": "POP"
    },
    "16187": {
      "op": "POP"
    },
    "16188": {
      "op": "JUMP"
    },
    "16189": {
      "op": "JUMPDEST"
    },
    "16190": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "16195": {
      "op": "DUP10"
    },
    "16196": {
      "op": "AND"
    },
    "16197": {
      "op": "DUP2"
    },
    "16198": {
      "op": "MSTORE"
    },
    "16199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16203": {
      "op": "DUP3"
    },
    "16204": {
      "op": "ADD"
    },
    "16205": {
      "op": "MSTORE"
    },
    "16206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16208": {
      "op": "PUSH3",
      "value": "0x3F5E"
    },
    "16212": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16214": {
      "op": "DUP4"
    },
    "16215": {
      "op": "ADD"
    },
    "16216": {
      "op": "DUP11"
    },
    "16217": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "16221": {
      "op": "JUMP"
    },
    "16222": {
      "op": "JUMPDEST"
    },
    "16223": {
      "op": "DUP3"
    },
    "16224": {
      "op": "DUP2"
    },
    "16225": {
      "op": "SUB"
    },
    "16226": {
      "jump": "o",
      "op": "PUSH1",
      "value": "0x40"
    },
    "16228": {
      "op": "DUP5"
    },
    "16229": {
      "op": "ADD"
    },
    "16230": {
      "op": "MSTORE"
    },
    "16231": {
      "op": "PUSH3",
      "value": "0x3F72"
    },
    "16235": {
      "op": "DUP2"
    },
    "16236": {
      "op": "DUP11"
    },
    "16237": {
      "op": "PUSH3",
      "value": "0x389D"
    },
    "16241": {
      "op": "JUMP"
    },
    "16242": {
      "op": "JUMPDEST"
    },
    "16243": {
      "op": "SWAP1"
    },
    "16244": {
      "op": "POP"
    },
    "16245": {
      "jump": "i",
      "op": "DUP8"
    },
    "16246": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16248": {
      "op": "DUP5"
    },
    "16249": {
      "op": "ADD"
    },
    "16250": {
      "op": "MSTORE"
    },
    "16251": {
      "op": "DUP3"
    },
    "16252": {
      "jump": "o",
      "op": "DUP2"
    },
    "16253": {
      "op": "SUB"
    },
    "16254": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16256": {
      "op": "DUP5"
    },
    "16257": {
      "op": "ADD"
    },
    "16258": {
      "op": "MSTORE"
    },
    "16259": {
      "op": "PUSH3",
      "value": "0x3F8F"
    },
    "16263": {
      "op": "DUP2"
    },
    "16264": {
      "op": "DUP8"
    },
    "16265": {
      "op": "DUP10"
    },
    "16266": {
      "op": "PUSH3",
      "value": "0x3874"
    },
    "16270": {
      "op": "JUMP"
    },
    "16271": {
      "op": "JUMPDEST"
    },
    "16272": {
      "op": "SWAP2"
    },
    "16273": {
      "op": "POP"
    },
    "16274": {
      "op": "POP"
    },
    "16275": {
      "op": "DUP4"
    },
    "16276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16278": {
      "op": "DUP4"
    },
    "16279": {
      "op": "ADD"
    },
    "16280": {
      "op": "MSTORE"
    },
    "16281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16287": {
      "op": "SHL"
    },
    "16288": {
      "op": "SUB"
    },
    "16289": {
      "op": "DUP4"
    },
    "16290": {
      "op": "AND"
    },
    "16291": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16293": {
      "op": "DUP4"
    },
    "16294": {
      "op": "ADD"
    },
    "16295": {
      "op": "MSTORE"
    },
    "16296": {
      "op": "SWAP10"
    },
    "16297": {
      "op": "SWAP9"
    },
    "16298": {
      "op": "POP"
    },
    "16299": {
      "op": "POP"
    },
    "16300": {
      "op": "POP"
    },
    "16301": {
      "op": "POP"
    },
    "16302": {
      "op": "POP"
    },
    "16303": {
      "op": "POP"
    },
    "16304": {
      "op": "POP"
    },
    "16305": {
      "op": "POP"
    },
    "16306": {
      "op": "POP"
    },
    "16307": {
      "op": "JUMP"
    },
    "16308": {
      "op": "JUMPDEST"
    },
    "16309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16311": {
      "op": "DUP3"
    },
    "16312": {
      "op": "DUP3"
    },
    "16313": {
      "op": "LT"
    },
    "16314": {
      "op": "ISZERO"
    },
    "16315": {
      "op": "PUSH3",
      "value": "0x3FC9"
    },
    "16319": {
      "op": "JUMPI"
    },
    "16320": {
      "op": "PUSH3",
      "value": "0x3FC9"
    },
    "16324": {
      "op": "PUSH3",
      "value": "0x401B"
    },
    "16328": {
      "jump": "o",
      "op": "JUMP"
    },
    "16329": {
      "op": "JUMPDEST"
    },
    "16330": {
      "op": "POP"
    },
    "16331": {
      "op": "SUB"
    },
    "16332": {
      "op": "SWAP1"
    },
    "16333": {
      "op": "JUMP"
    },
    "16334": {
      "op": "JUMPDEST"
    },
    "16335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16337": {
      "op": "JUMPDEST"
    },
    "16338": {
      "op": "DUP4"
    },
    "16339": {
      "op": "DUP2"
    },
    "16340": {
      "op": "LT"
    },
    "16341": {
      "op": "ISZERO"
    },
    "16342": {
      "op": "PUSH3",
      "value": "0x3FEB"
    },
    "16346": {
      "op": "JUMPI"
    },
    "16347": {
      "op": "DUP2"
    },
    "16348": {
      "op": "DUP2"
    },
    "16349": {
      "op": "ADD"
    },
    "16350": {
      "op": "MLOAD"
    },
    "16351": {
      "op": "DUP4"
    },
    "16352": {
      "op": "DUP3"
    },
    "16353": {
      "op": "ADD"
    },
    "16354": {
      "op": "MSTORE"
    },
    "16355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16357": {
      "op": "ADD"
    },
    "16358": {
      "op": "PUSH3",
      "value": "0x3FD1"
    },
    "16362": {
      "op": "JUMP"
    },
    "16363": {
      "op": "JUMPDEST"
    },
    "16364": {
      "op": "DUP4"
    },
    "16365": {
      "op": "DUP2"
    },
    "16366": {
      "op": "GT"
    },
    "16367": {
      "op": "ISZERO"
    },
    "16368": {
      "op": "PUSH3",
      "value": "0x16FB"
    },
    "16372": {
      "op": "JUMPI"
    },
    "16373": {
      "op": "POP"
    },
    "16374": {
      "op": "POP"
    },
    "16375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16377": {
      "op": "SWAP2"
    },
    "16378": {
      "op": "ADD"
    },
    "16379": {
      "op": "MSTORE"
    },
    "16380": {
      "op": "JUMP"
    },
    "16381": {
      "op": "JUMPDEST"
    },
    "16382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16386": {
      "op": "NOT"
    },
    "16387": {
      "op": "DUP3"
    },
    "16388": {
      "op": "EQ"
    },
    "16389": {
      "op": "ISZERO"
    },
    "16390": {
      "op": "PUSH3",
      "value": "0x4014"
    },
    "16394": {
      "op": "JUMPI"
    },
    "16395": {
      "op": "PUSH3",
      "value": "0x4014"
    },
    "16399": {
      "op": "PUSH3",
      "value": "0x401B"
    },
    "16403": {
      "op": "JUMP"
    },
    "16404": {
      "op": "JUMPDEST"
    },
    "16405": {
      "op": "POP"
    },
    "16406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16408": {
      "op": "ADD"
    },
    "16409": {
      "op": "SWAP1"
    },
    "16410": {
      "op": "JUMP"
    },
    "16411": {
      "op": "JUMPDEST"
    },
    "16412": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16419": {
      "op": "SHL"
    },
    "16420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16422": {
      "op": "MSTORE"
    },
    "16423": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16425": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16427": {
      "op": "MSTORE"
    },
    "16428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16432": {
      "op": "REVERT"
    },
    "16433": {
      "op": "JUMPDEST"
    },
    "16434": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16441": {
      "op": "SHL"
    },
    "16442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16444": {
      "op": "MSTORE"
    },
    "16445": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "16447": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16449": {
      "op": "MSTORE"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16454": {
      "op": "REVERT"
    },
    "16455": {
      "op": "JUMPDEST"
    },
    "16456": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16461": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16463": {
      "op": "SHL"
    },
    "16464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16466": {
      "op": "MSTORE"
    },
    "16467": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "16469": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16471": {
      "op": "MSTORE"
    },
    "16472": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16476": {
      "op": "REVERT"
    },
    "16477": {
      "op": "JUMPDEST"
    },
    "16478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16484": {
      "op": "SHL"
    },
    "16485": {
      "op": "SUB"
    },
    "16486": {
      "op": "DUP2"
    },
    "16487": {
      "op": "AND"
    },
    "16488": {
      "op": "DUP2"
    },
    "16489": {
      "op": "EQ"
    },
    "16490": {
      "op": "PUSH3",
      "value": "0x4073"
    },
    "16494": {
      "op": "JUMPI"
    },
    "16495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16497": {
      "op": "DUP1"
    },
    "16498": {
      "op": "REVERT"
    },
    "16499": {
      "op": "JUMPDEST"
    },
    "16500": {
      "op": "POP"
    },
    "16501": {
      "op": "JUMP"
    }
  },
  "sha1": "8734ea56e0f0298e8011dbc6891e703ed38ab118",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IVault.sol\";\nimport \"./interfaces/IKeyManager.sol\";\nimport \"./interfaces/IERC20Lite.sol\";\nimport \"./interfaces/ICFReceiver.sol\";\nimport \"./abstract/Shared.sol\";\nimport \"./Deposit.sol\";\nimport \"./AggKeyNonceConsumer.sol\";\nimport \"./GovernanceCommunityGuarded.sol\";\n\n/**\n * @title    Vault contract\n * @notice   The vault for holding and transferring native/tokens and deploying contracts for fetching\n *           individual deposits. It also allows users to do cross-chain swaps and(or) calls by\n *           making a function call directly to this contract.\n */\ncontract Vault is IVault, AggKeyNonceConsumer, GovernanceCommunityGuarded {\n    using SafeERC20 for IERC20;\n\n    uint256 private constant _AGG_KEY_EMERGENCY_TIMEOUT = 14 days;\n    uint256 private constant _GAS_TO_FORWARD = 3500;\n\n    event TransferFailed(address payable indexed recipient, uint256 amount);\n    event SwapNative(uint256 amount, string egressParams, bytes32 egressReceiver);\n    event SwapToken(address ingressToken, uint256 amount, string egressParams, bytes32 egressReceiver);\n    event SwapsEnabled(bool enabled);\n\n    /// @dev dstAddress is not indexed because indexing a dynamic type (string) to be able to filter,\n    ///      makes it so we won't be able to decode it unless we specifically search for it. If we want\n    ///      to filter it and decode it then we would need to have both the indexed and the non-indexed\n    ///      version in the event.\n    event XCallNative(\n        uint32 dstChain,\n        string dstAddress,\n        string swapIntent,\n        uint256 amount,\n        address indexed sender,\n        bytes message,\n        uint256 dstNativeGas,\n        address refundAddress\n    );\n    event XCallToken(\n        uint32 dstChain,\n        string dstAddress,\n        string swapIntent,\n        address srcToken,\n        uint256 amount,\n        address indexed sender,\n        bytes message,\n        uint256 dstNativeGas,\n        address refundAddress\n    );\n    event SwapNative(uint32 dstChain, string dstAddress, string swapIntent, uint256 amount, address indexed sender);\n    event SwapToken(\n        uint32 dstChain,\n        string dstAddress,\n        string swapIntent,\n        address srcToken,\n        uint256 amount,\n        address indexed sender\n    );\n\n    event XCallsEnabled(bool enabled);\n\n    bool private _xCallsEnabled;\n\n    constructor(IKeyManager keyManager) AggKeyNonceConsumer(keyManager) {}\n\n    /// @dev   Get the governor address from the KeyManager. This is called by the onlyGovernor\n    ///        modifier in the GovernanceCommunityGuarded. This logic can't be moved to the\n    ///        GovernanceCommunityGuarded since it requires a reference to the KeyManager.\n    function _getGovernor() internal view override returns (address) {\n        return getKeyManager().getGovernanceKey();\n    }\n\n    /// @dev   Get the community key from the KeyManager. This is called by the isCommunityKey\n    ///        modifier in the GovernanceCommunityGuarded. This logic can't be moved to the\n    ///        GovernanceCommunityGuarded since it requires a reference to the KeyManager.\n    function _getCommunityKey() internal view override returns (address) {\n        return getKeyManager().getCommunityKey();\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                  Transfer and Fetch                      //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Can do a combination of all fcns in this contract. It first fetches all\n     *          deposits , then it performs all transfers specified with the rest\n     *          of the inputs, the same as transferBatch (where all inputs are again required\n     *          to be of equal length - however the lengths of the fetch inputs do not have to\n     *          be equal to lengths of the transfer inputs). Fetches/transfers of native are\n     *          indicated with 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE as the token address.\n     * @dev     FetchAndDeploy is executed first to handle the edge case , which probably shouldn't\n     *          happen anyway, where a deploy and a fetch for the same address are in the same batch.\n     *          Transfers are executed last to ensure that all fetching has been completed first.\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's\n     *                  a hash over the calldata to the function with an empty sigData) and\n     *                  sig over that hash (uint) from the aggregate key\n     * @param deployFetchParamsArray    The array of deploy and fetch parameters\n     * @param fetchParamsArray    The array of fetch parameters\n     * @param transferParamsArray The array of transfer parameters\n     */\n    function allBatch(\n        SigData calldata sigData,\n        DeployFetchParams[] calldata deployFetchParamsArray,\n        FetchParams[] calldata fetchParamsArray,\n        TransferParams[] calldata transferParamsArray\n    )\n        external\n        override\n        onlyNotSuspended\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.allBatch.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    deployFetchParamsArray,\n                    fetchParamsArray,\n                    transferParamsArray\n                )\n            )\n        )\n    {\n        // Fetch by deploying new deposits\n        _deployAndFetchBatch(deployFetchParamsArray);\n\n        // Fetch from already deployed deposits\n        _fetchBatch(fetchParamsArray);\n\n        // Send all transfers\n        _transferBatch(transferParamsArray);\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                          Transfers                       //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Transfers native or a token from this vault to a recipient\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's\n     *                  a hash over the calldata to the function with an empty sigData) and\n     *                  sig over that hash (uint) from the aggregate key\n     * @param transferParams       The transfer parameters\n     */\n    function transfer(SigData calldata sigData, TransferParams calldata transferParams)\n        external\n        override\n        onlyNotSuspended\n        nzAddr(transferParams.token)\n        nzAddr(transferParams.recipient)\n        nzUint(transferParams.amount)\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.transfer.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    transferParams\n                )\n            )\n        )\n    {\n        _transfer(transferParams.token, transferParams.recipient, transferParams.amount);\n    }\n\n    /**\n     * @notice  Transfers native or tokens from this vault to recipients.\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's a hash over\n     *                  the calldata to the function with an empty sigData) and sig over\n     *                  that hash (uint) from the aggregate key\n     * @param transferParamsArray The array of transfer parameters.\n     */\n    function transferBatch(SigData calldata sigData, TransferParams[] calldata transferParamsArray)\n        external\n        override\n        onlyNotSuspended\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.transferBatch.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    transferParamsArray\n                )\n            )\n        )\n    {\n        _transferBatch(transferParamsArray);\n    }\n\n    /**\n     * @notice  Transfers native or tokens from this vault to recipients.\n     * @param transferParamsArray The array of transfer parameters.\n     */\n    function _transferBatch(TransferParams[] calldata transferParamsArray) private {\n        uint256 length = transferParamsArray.length;\n        for (uint256 i = 0; i < length; ) {\n            _transfer(transferParamsArray[i].token, transferParamsArray[i].recipient, transferParamsArray[i].amount);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @notice  Transfers ETH or a token from this vault to a recipient\n     * @dev     Using \"send\" function to only send a set amount of gas, preventing the recipient\n     *          from using all the transfer batch gas. Also, not reverting on failure so it can't\n     *          block the batch transfer.\n     * @param token The address of the token to be transferred\n     * @param recipient The address of the recipient of the transfer\n     * @param amount    The amount to transfer, in wei (uint)\n     */\n    function _transfer(\n        address token,\n        address payable recipient,\n        uint256 amount\n    ) private {\n        if (address(token) == _NATIVE_ADDR) {\n            // Disable because we don't want to revert on failure. Forward only a set amount of gas\n            // so the receivers can't consume all the gas.\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success, ) = recipient.call{gas: _GAS_TO_FORWARD, value: amount}(\"\");\n            if (!success) {\n                emit TransferFailed(recipient, amount);\n            }\n        } else {\n            IERC20(token).safeTransfer(recipient, amount);\n        }\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                        Fetch Deposits                    //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Retrieves any token from multiple address, deterministically generated using\n     *          create2, by creating a contract for that address, sending it to this vault.\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's normally\n     *                  a hash over the calldata to the function with an empty sigData) and\n     *                  sig over that hash (uint) from the aggregate key\n     * @param deployFetchParamsArray    The array of deploy and fetch parameters\n     */\n    function deployAndFetchBatch(SigData calldata sigData, DeployFetchParams[] calldata deployFetchParamsArray)\n        external\n        override\n        onlyNotSuspended\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.deployAndFetchBatch.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    deployFetchParamsArray\n                )\n            )\n        )\n    {\n        _deployAndFetchBatch(deployFetchParamsArray);\n    }\n\n    function _deployAndFetchBatch(DeployFetchParams[] calldata deployFetchParamsArray) private {\n        // Deploy deposit contracts\n        uint256 length = deployFetchParamsArray.length;\n        for (uint256 i = 0; i < length; ) {\n            new Deposit{salt: deployFetchParamsArray[i].swapID}(IERC20Lite(deployFetchParamsArray[i].token));\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @notice  Retrieves any token addresses where a Deposit contract is already deployed.\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's normally\n     *                  a hash over the calldata to the function with an empty sigData) and\n     *                  sig over that hash (uint) from the aggregate key\n     * @param fetchParamsArray    The array of fetch parameters\n     */\n    function fetchBatch(SigData calldata sigData, FetchParams[] calldata fetchParamsArray)\n        external\n        override\n        onlyNotSuspended\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.fetchBatch.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    fetchParamsArray\n                )\n            )\n        )\n    {\n        _fetchBatch(fetchParamsArray);\n    }\n\n    /**\n     * @notice  Retrieves any token from multiple addresses where a Deposit contract is already deployed.\n     *          It emits an event if the fetch fails.\n     * @param fetchParamsArray    The array of fetch parameters\n     */\n    function _fetchBatch(FetchParams[] calldata fetchParamsArray) private {\n        uint256 length = fetchParamsArray.length;\n        for (uint256 i = 0; i < length; ) {\n            Deposit(fetchParamsArray[i].fetchContract).fetch(IERC20Lite(fetchParamsArray[i].token));\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //         Initiate cross-chain swaps (source chain)        //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Swaps native token for a token in another chain. The egress token will be transferred to the specified \n     *          destination address on the destination chain.\n     * @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n     *          to explicity indicate that an amount is required.  It isn't preventing spamming.\n\n     * @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n     * @param dstAddress    String containing the destination address on the destination chain.\n     * @param swapIntent    String containing the specifics of the swap to be performed according to Chainflip's nomenclature.\n     */\n    function xSwapNative(\n        uint32 dstChain,\n        string memory dstAddress,\n        string memory swapIntent\n    ) external payable override onlyNotSuspended nzUint(msg.value) {\n        emit SwapNative(dstChain, dstAddress, swapIntent, msg.value, msg.sender);\n    }\n\n    /**\n     * @notice  Swaps ERC20 token for a token in another chain. The desired token will be transferred to the specified \n     *          destination address on the destination chain. The provided ERC20 token must be supported by the Chainflip Protocol. \n     * @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n     *          to explicity indicate that an amount is required.\n\n     * @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n     * @param dstAddress    String containing the destination address on the destination chain.\n     * @param swapIntent    String containing the specifics of the swap to be performed according to Chainflip's nomenclature.\n     * @param srcToken      Address of the source token to swap.\n     * @param amount        Amount of tokens to swap.\n     */\n    function xSwapToken(\n        uint32 dstChain,\n        string memory dstAddress,\n        string memory swapIntent,\n        IERC20 srcToken,\n        uint256 amount\n    ) external override onlyNotSuspended nzUint(amount) {\n        srcToken.safeTransferFrom(msg.sender, address(this), amount);\n        emit SwapToken(dstChain, dstAddress, swapIntent, address(srcToken), amount, msg.sender);\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //     Initiate cross-chain call and swap (source chain)    //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Performs a cross-chain call to the destination address on the destination chain. Native tokens must be paid\n     *          to this contract. The swap intent determines if the provided tokens should be swapped to a different token\n     *          and transferred as part of the cross-chain call. Otherwise, all tokens are used as a payment for gas on the destination chain.\n     *          The message parameter is transmitted to the destination chain as part of the cross-chain call.\n     * @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n     *          to explicity inidcate that an amount is required. It isn't preventing spamming.\n     *\n     * @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n     * @param dstAddress    String containing the destination address on the destination chain.\n     * @param swapIntent    String containing the specifics of the swap to be performed, if any, as part of the xCall. The string\n     *                      must follow Chainflip's nomenclature. An empty swapIntent implies that no swap needs to take place\n     *                      and the source token will be used for gas in a swapless xCall.\n     * @param message       The message to be sent to the egress chain. This is a general purpose message.\n     * @param dstNativeGas  The amount of native gas to be used on the destination chain's call.\n     * @param refundAddress Address to refund any excess gas left from the execution of the xCall on the dstChain. This address\n     *                      is in the context of the srcChain.\n     */\n    function xCallNative(\n        uint32 dstChain,\n        string memory dstAddress,\n        string memory swapIntent,\n        bytes calldata message,\n        uint256 dstNativeGas,\n        address refundAddress\n    ) external payable override onlyNotSuspended xCallsEnabled nzUint(msg.value) {\n        emit XCallNative(dstChain, dstAddress, swapIntent, msg.value, msg.sender, message, dstNativeGas, refundAddress);\n    }\n\n    /**\n     * @notice  Performs a cross-chain call to the destination chain and destination address. An ERC20 token amount\n     *          needs to be approved to this contract. The ERC20 token must be supported by the Chainflip Protocol.\n     *          The swap intent determines whether the provided tokens should be swapped to a different token\n     *          by the Chainflip Protocol. If so, the swapped tokens will be transferred to the destination chain as part\n     *          of the cross-chain call. Otherwise, the tokens are used as a payment for gas on the destination chain.\n     *          The message parameter is transmitted to the destination chain as part of the cross-chain call.\n     * @dev     Checking the validity of inputs shall be done as part of the event witnessing. Only the amount is checked\n     *          to explicity indicate that an amount is required.\n     *\n     * @param dstChain      The destination chain according to the Chainflip Protocol's nomenclature.\n     * @param dstAddress    String containing the destination address on the destination chain.\n     * @param swapIntent    String containing the specifics of the swap to be performed as part of the xCall. An empty swapIntent\n     *                       implies that no swap needs to take place and the source token will be used for gas in a swapless xCall.\n     * @param message       The message to be sent to the egress chain. This is a general purpose message.\n     * @param dstNativeGas  The amount of native gas to be used on the destination chain's call. That gas will be paid with the\n     *                      source token.\n     * @param srcToken      Address of the source token.\n     * @param amount        Amount of tokens to swap.\n     * @param refundAddress Address to refund any excess gas left from the execution of the xCall on the dstChain. This address\n     *                      is in the context of the srcChain.\n     */\n    function xCallToken(\n        uint32 dstChain,\n        string memory dstAddress,\n        string memory swapIntent,\n        bytes calldata message,\n        uint256 dstNativeGas,\n        IERC20 srcToken,\n        uint256 amount,\n        address refundAddress\n    ) external override onlyNotSuspended xCallsEnabled nzUint(amount) {\n        srcToken.safeTransferFrom(msg.sender, address(this), amount);\n        emit XCallToken(\n            dstChain,\n            dstAddress,\n            swapIntent,\n            address(srcToken),\n            amount,\n            msg.sender,\n            message,\n            dstNativeGas,\n            refundAddress\n        );\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //      Execute cross-chain call and swap (dest. chain)     //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Transfers ETH or a token from this vault to a recipient and makes a function call\n     *          completing a cross-chain swap and call. The ICFReceiver interface is expected on\n     *          the receiver's address. A message is passed to the receiver along with other\n     *          parameters specifying the origin of the swap.\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's normally a hash over\n     *                  the calldata to the function with an empty sigData) and sig over that\n     *                  that hash (uint) from the aggregate key.\n     * @param transferParams  The transfer parameters\n     * @param srcChain        The source chain where the call originated from.\n     * @param srcAddress      The address where the transfer originated within the ingress chain.\n     * @param message         The message to be passed to the recipient.\n     */\n    function executexSwapAndCall(\n        SigData calldata sigData,\n        TransferParams calldata transferParams,\n        uint32 srcChain,\n        string calldata srcAddress,\n        bytes calldata message\n    )\n        external\n        override\n        onlyNotSuspended\n        nzAddr(transferParams.token)\n        nzAddr(transferParams.recipient)\n        nzUint(transferParams.amount)\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.executexSwapAndCall.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    transferParams,\n                    srcChain,\n                    srcAddress,\n                    message\n                )\n            )\n        )\n    {\n        // Logic in another internal function to avoid the stackTooDeep error\n        _executexSwapAndCall(transferParams, srcChain, srcAddress, message);\n    }\n\n    /**\n     * @notice Logic for transferring the tokens and calling the recipient. It's on the receiver to\n     *         make sure the call doesn't revert, otherwise the tokens won't be transferred.\n     *         The _transfer function is not used because we want to be able to embed the native token\n     *         into the cfReceive call to avoid doing two external calls.\n     *         In case of revertion the tokens will remain in the Vault. Therefore, the destination\n     *         contract must ensure it doesn't revert e.g. using try-catch mechanisms.\n     */\n    function _executexSwapAndCall(\n        TransferParams calldata transferParams,\n        uint32 srcChain,\n        string calldata srcAddress,\n        bytes calldata message\n    ) private {\n        if (transferParams.token == _NATIVE_ADDR) {\n            ICFReceiver(transferParams.recipient).cfReceive{value: transferParams.amount}(\n                srcChain,\n                srcAddress,\n                message,\n                transferParams.token,\n                transferParams.amount\n            );\n        } else {\n            IERC20(transferParams.token).safeTransfer(transferParams.recipient, transferParams.amount);\n            ICFReceiver(transferParams.recipient).cfReceive(\n                srcChain,\n                srcAddress,\n                message,\n                transferParams.token,\n                transferParams.amount\n            );\n        }\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //          Execute cross-chain call (dest. chain)          //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Executes a cross-chain function call. The ICFReceiver interface is expected on\n     *          the receiver's address. A message is passed to the receiver along with other\n     *          parameters specifying the origin of the swap. This is used for cross-chain messaging\n     *          without any swap taking place on the Chainflip Protocol.\n     * @param sigData   The keccak256 hash over the msg (uint) (here that's normally\n     *                  a hash over the calldata to the function with an empty sigData) and\n     *                  sig over that hash (uint) from the aggregate key\n     * @param srcChain       The source chain where the call originated from.\n     * @param srcAddress     The address where the transfer originated from in the ingressParams.\n     * @param message        The message to be passed to the recipient.\n     */\n    function executexCall(\n        SigData calldata sigData,\n        address recipient,\n        uint32 srcChain,\n        string calldata srcAddress,\n        bytes calldata message\n    )\n        external\n        override\n        onlyNotSuspended\n        nzAddr(recipient)\n        consumesKeyNonce(\n            sigData,\n            keccak256(\n                abi.encodeWithSelector(\n                    this.executexCall.selector,\n                    SigData(sigData.keyManAddr, sigData.chainID, 0, 0, sigData.nonce, address(0)),\n                    recipient,\n                    srcChain,\n                    srcAddress,\n                    message\n                )\n            )\n        )\n    {\n        ICFReceiver(recipient).cfReceivexCall(srcChain, srcAddress, message);\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                        Governance                        //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice Withdraw all funds to governance address in case of emergency. This withdrawal needs\n     *         to be approved by the Community and it can only be executed if no nonce from the\n     *         current AggKey had been consumed in _AGG_KEY_TIMEOUT time. It is a last resort and\n     *         can be used to rectify an emergency.\n     * @param tokens    The addresses of the tokens to be transferred\n     */\n    function govWithdraw(address[] calldata tokens)\n        external\n        override\n        onlyGovernor\n        onlyCommunityGuardDisabled\n        onlySuspended\n        timeoutEmergency\n    {\n        // Could use msg.sender or getGovernor() but hardcoding the get call just for extra safety\n        address payable recipient = payable(getKeyManager().getGovernanceKey());\n\n        // Transfer all native and ERC20 Tokens\n        for (uint256 i = 0; i < tokens.length; i++) {\n            if (tokens[i] == _NATIVE_ADDR) {\n                _transfer(_NATIVE_ADDR, recipient, address(this).balance);\n            } else {\n                _transfer(tokens[i], recipient, IERC20(tokens[i]).balanceOf(address(this)));\n            }\n        }\n    }\n\n    /**\n     * @notice  Enable swapNative and swapToken functionality by governance. Features disabled by default\n     */\n    function enablexCalls() external override onlyGovernor xCallsDisabled {\n        _xCallsEnabled = true;\n        emit XCallsEnabled(true);\n    }\n\n    /**\n     * @notice  Disable swapNative and swapToken functionality by governance. Features disabled by default.\n     */\n    function disablexCalls() external override onlyGovernor xCallsEnabled {\n        _xCallsEnabled = false;\n        emit XCallsEnabled(false);\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                          Getters                         //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /**\n     * @notice  Get xCallsEnabled\n     * @return  The xCallsEnableds state\n     */\n    function getxCallsEnabled() external view override returns (bool) {\n        return _xCallsEnabled;\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                          Modifiers                       //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /// @dev    Check that no nonce has been consumed in the last 14 days - emergency\n    modifier timeoutEmergency() {\n        require(\n            block.timestamp - getKeyManager().getLastValidateTime() >= _AGG_KEY_EMERGENCY_TIMEOUT,\n            \"Vault: not enough time\"\n        );\n        _;\n    }\n\n    /// @dev    Check that xCalls are enabled\n    modifier xCallsEnabled() {\n        require(_xCallsEnabled, \"Vault: xCalls not enabled\");\n        _;\n    }\n\n    /// @dev    Check that xCalls are disabled\n    modifier xCallsDisabled() {\n        require(!_xCallsEnabled, \"Vault: xCalls enabled\");\n        _;\n    }\n\n    //////////////////////////////////////////////////////////////\n    //                                                          //\n    //                          Fallbacks                       //\n    //                                                          //\n    //////////////////////////////////////////////////////////////\n\n    /// @dev For receiving native when Deposit.fetch() is called.\n    receive() external payable {}\n}\n",
  "sourceMap": "675:30196:13:-:0;;;819:5:9;793:31;;-1:-1:-1;793:31:9;;;2458:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2514:10;;-1:-1:-1;894:15:16;;886:58;;;;-1:-1:-1;;;886:58:16;;531:2:42;886:58:16;;;513:21:42;570:2;550:18;;;543:30;609:32;589:18;;;582:60;659:18;;886:58:16;;;;;;;;-1:-1:-1;739:11:6::1;:24:::0;;-1:-1:-1;739:24:6::1;-1:-1:-1::0;739:24:6;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;675:30196:13;;14:310:42;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;244:31:42;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:42:o;329:354::-;675:30196:13;;;;;;",
  "sourcePath": "contracts/Vault.sol",
  "type": "contract"
}